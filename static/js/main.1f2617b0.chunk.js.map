{"version":3,"sources":["assets/images/logo.jpg","axios.js","store/actions/data.js","store/actions/actionTypes.js","store/actions/auth.js","store/actions/tables.js","store/actions/ui.js","components/exp/ExpForm.js","components/exp/ExpTable.js","components/inc/IncForm.js","components/inc/IncTable.js","components/storage/StorageTable.js","containers/storage/Storage.js","containers/complects/ComplectsForm.js","containers/complects/ComplectsTable.js","containers/availableComplects/availableComplectsTable.js","containers/workArea/workArea.js","containers/auth/Auth.js","containers/navigation/Navigation.js","containers/statistics/charts/TotalExpInc.js","containers/statistics/Statistics.js","ui/Spinner/Spinner.js","ui/Backdrop/Backdrop.js","ui/Modal/Modal.js","App.js","serviceWorker.js","store/reducers/data.js","store/reducers/auth.js","store/reducers/tables.js","store/reducers/ui.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","setDataExp","data","type","exp","setDataInc","inc","setDataComplects","complects","loginSuccess","token","userId","idToken","logOut","localStorage","removeItem","checkLogoutTimeout","expirationTime","dispatch","setTimeout","showModal","response","error","connect","state","expData","lists","auth","actions","props","waresList","wares","map","item","key","value","subwaresList","subwares","expsList","exps","colorsList","colors","initialValues","name","color","quantity","totalPrice","validate","values","errors","isNaN","onSubmit","setSubmitting","resetForm","time","Date","toISOString","split","trim","Number","post","then","console","log","newExpData","catch","isSubmitting","setFieldValue","Container","Row","Col","className","checked","onChange","list","id","disabled","toFixed","xs","span","offset","deleteRowHandler","event","target","delete","res","table","Object","keys","reverse","expKey","index","onClick","Fragment","Table","striped","bordered","hover","incData","complectsData","useState","complectErrorMessage","setComplectErrorMessage","price","income","length","line","newIncData","render","complect","push","copyColor","complectFormHandler","arrayHelpers","component","remove","loaded","incKey","expTable","tables","incTable","lastRow","quantityE","totalPriceE","quantityI","totalPriceI","quantityS","totalPriceS","handleArchive","a","wareKey","find","put","archived","window","location","reload","ware","sort","wareName","wareIndex","colorIndex","coloredWare","priceE","incomeColorIndex","i","priceI","Infinity","priceS","colorWare","topRow","style","backgroundColor","rows","wareColor","wareColorIndex","tableSubwares","subware","lastRowTable","createExpTable","tableExpWares","tableExpSubWares","tableExpExp","hasOwnProperty","isColor","createIncTable","tableIncWares","tableIncSubWares","incItem","incIndex","useEffect","checkIfComplectExists","complectExists","newComplectsData","complectKey","availableComplectsData","wareTable","minQuantity","items","itemIndex","authData","gotError","ui","getDataEI","get","balance","availableComplects","createFormLists","indexOf","Tabs","defaultActiveKey","Tab","eventKey","title","signedIn","to","logIn","returnSecureToken","expirationDate","getTime","expiresIn","setItem","localId","email","password","placeholder","authState","Navbar","bg","variant","exact","Brand","Image","src","Logo","Nav","TotalExpInc","x","y","chartData","y0","label","labelNumber","profit","events","eventHandlers","mutation","text","datum","totalStatsTable","incErrors","countTotalStats","coloredItem","checkForIncErrors","totalIncTable","totalExpTable","coloredInc","expNotIncluded","coloredExp","tablesLoaded","setTablesLoaded","expIncProfitChartData","setExpIncProfitChartData","newChartData","toString","spinner","show","hideModal","Transition","mountOnEnter","unmountOnExit","in","timeout","cssClasses","status","statusText","authCheckState","getItem","path","loading","Boolean","hostname","match","initialState","reducer","action","composeEnhancers","compose","rootReducer","combineReducers","dataReducer","authReducer","tablesReducer","uiReducer","store","createStore","applyMiddleware","thunk","app","basename","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uGAAAA,EAAOC,QAAU,IAA0B,kC,6cCM5BC,EAJEC,IAAMC,OAAO,CAC5BC,QAAS,uCCCEC,EAAa,SAAAC,GACxB,MAAO,CACLC,KCCwB,eDAxBC,IAAKF,IAIIG,EAAa,SAAAH,GACxB,MAAO,CACLC,KCLwB,eDMxBG,IAAKJ,IAIIK,EAAmB,SAAAL,GAC9B,MAAO,CACLC,KCX8B,qBDY9BK,UAAWN,IEXFO,EAAe,SAACC,EAAOC,GAClC,MAAO,CACLR,KDT0B,iBCU1BS,QAASF,EACTC,OAAQA,IAICE,EAAS,WAIpB,OAHAC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,kBACxBD,aAAaC,WAAW,UACjB,CACLZ,KDrBmB,YCyBVa,EAAqB,SAACC,GACjC,OAAO,SAAAC,GACLC,YAAW,WACTD,EAASL,OACS,IAAjBI,K,yjBC7BA,ICAMG,EAAY,SAACC,GACxB,MAAO,CACLlB,KHcsB,aGbtBmB,MAAOD,I,8NCGX,IA0MeE,eAfS,SAAAC,GACtB,MAAO,CACLC,QAASD,EAAMtB,KAAKuB,QACpBC,MAAOF,EAAMtB,KAAKwB,MAClBd,QAASY,EAAMG,KAAKf,YAIG,SAAAM,GACzB,MAAO,CACLjB,WAAY,SAAAwB,GAAO,OAAIP,EAASU,EAAmBH,KACnDL,UAAW,SAAAC,GAAQ,OAAIH,EAASU,EAAkBP,QAIvCE,EA1MC,SAAAM,GACd,IAAMC,EAAYD,EAAMH,MAAMK,MAAMC,KAAI,SAAAC,GACtC,OAAO,4BAAQC,IAAKD,EAAME,MAAOF,OAG7BG,EAAeP,EAAMH,MAAMW,SAASL,KAAI,SAAAC,GAC5C,OAAO,4BAAQC,IAAKD,EAAME,MAAOF,OAG7BK,EAAWT,EAAMH,MAAMa,KAAKP,KAAI,SAAAC,GACpC,OAAO,4BAAQC,IAAKD,EAAME,MAAOF,OAG7BO,EAAaX,EAAMH,MAAMe,OAAOT,KAAI,SAAAC,GACxC,OAAO,4BAAQC,IAAKD,EAAME,MAAOF,OAGnC,OACE,kBAAC,IAAD,CACES,cAAe,CACbvC,KAAM,GACNwC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,WAAY,IAEdC,SAAU,SAAAC,GACR,IAAIC,EAAS,GAkBb,OAjBKD,EAAO7C,OACV8C,EAAO9C,KAAO,uJAEX6C,EAAOL,OACVM,EAAON,KAAO,gIAGdO,MAAMF,EAAOH,YACS,IAApBG,EAAOH,UAAsC,KAApBG,EAAOH,UACf,mCAAhBG,EAAO7C,MAAoC,oFAAhB6C,EAAO7C,QAErC8C,EAAOJ,SAAW,sGAEfG,EAAOF,aAAcI,MAAMF,EAAOF,cACrCG,EAAOH,WAAa,gGAGfG,GAETE,SAAU,SAACH,EAAD,EAAuCN,GAAmB,IAA/CU,EAA8C,EAA9CA,cAAeC,EAA+B,EAA/BA,UAClCL,EAAOM,MAAO,IAAIC,MAAOC,cAAcC,MAAM,KAAK,GACtB,KAAxBT,EAAOJ,MAAMc,SACfV,EAAOJ,MAAQ,iBAEjBI,EAAOH,SAAWc,OAAOX,EAAOH,UAChCG,EAAOF,WAAaa,OAAOX,EAAOF,YAClChD,EACG8D,KAAK,0BAA4B/B,EAAMjB,QAASoC,GAChDa,MAAK,SAAAxC,GACJyC,QAAQC,IAAI1C,GACZ+B,GAAc,GACd,IAAMY,E,yVAAU,IACXnC,EAAMJ,QADK,eAEbJ,EAASnB,KAAKyC,KAAOK,IAExBnB,EAAM5B,WAAW+D,GACjBX,EAAUX,MAEXuB,OAAM,SAAA3C,GACLO,EAAMT,UAAUE,EAAMD,gBAI3B,gBAAG6C,EAAH,EAAGA,aAAclB,EAAjB,EAAiBA,OAAQmB,EAAzB,EAAyBA,cAAzB,OACC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,kBAACD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CACEC,UAAU,aACVpE,KAAK,QACLwC,KAAK,OACLR,MAAM,iCACNqC,QAAyB,mCAAhBxB,EAAO7C,KAChBsE,SAAU,kBAAMN,EAAc,OAAQ,qCAExC,iEACA,kBAAC,IAAD,CACEI,UAAU,aACVpE,KAAK,QACLwC,KAAK,OACLR,MAAM,kFACNqC,QAAyB,oFAAhBxB,EAAO7C,KAChBsE,SAAU,kBAAMN,EAAc,OAAQ,sFAExC,kHACA,kBAAC,IAAD,CACEI,UAAU,aACVpE,KAAK,QACLwC,KAAK,OACLR,MAAM,6CACNqC,QAAyB,+CAAhBxB,EAAO7C,KAChBsE,SAAU,kBAAMN,EAAc,OAAQ,iDAExC,6EACA,0BAAMI,UAAU,gBACd,kBAAC,IAAD,CAAc5B,KAAK,YAKzB,kBAAC0B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,iEACA,kBAAC,IAAD,CAAO3B,KAAK,OAAO+B,KAAK,SACxB,8BAAUC,GAAG,QACM,mCAAhB3B,EAAO7C,MAAoB2B,EACX,oFAAhBkB,EAAO7C,MAA6BiC,EACpB,+CAAhBY,EAAO7C,MAAsBmC,GAEhC,0BAAMiC,UAAU,gBACd,kBAAC,IAAD,CAAc5B,KAAK,UAErB,iEACA,kBAAC,IAAD,CAAOA,KAAK,QAAQ+B,KAAK,UACzB,8BAAUC,GAAG,SAASnC,GAEtB,yFACA,kBAAC,IAAD,CACE+B,UAAU,eACV5B,KAAK,WACLxC,KAAK,SACLyE,SAA0B,+CAAhB5B,EAAO7C,OAEnB,0BAAMoE,UAAU,gBACd,kBAAC,IAAD,CAAc5B,KAAK,cAErB,mFACA,kBAAC,IAAD,CACE4B,UAAU,eACV5B,KAAK,aACLxC,KAAK,WAEP,0BAAMoE,UAAU,gBACd,kBAAC,IAAD,CAAc5B,KAAK,gBAErB,mHACA,kBAAC,IAAD,CACE4B,UAAU,eACV5B,KAAK,QACLR,MACEe,MAAMF,EAAOF,WAAaE,EAAOH,WACjB,+CAAhBG,EAAO7C,KACH,GACC6C,EAAOF,WAAaE,EAAOH,UAAUgC,QAAQ,GAEpDJ,SAAU,kBACRN,EACE,QACAnB,EAAOF,WAAaE,EAAOH,WAG/B+B,UAAQ,MAKd,kBAACP,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKQ,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IAC1B,4BACET,UAAU,aACVpE,KAAK,SACLyE,SAAUV,GAHZ,oD,SCrFL3C,eAdS,SAAAC,GACtB,MAAO,CACLC,QAASD,EAAMtB,KAAKuB,QACpBb,QAASY,EAAMG,KAAKf,YAIG,SAAAM,GACzB,MAAO,CACLjB,WAAY,SAAAwB,GAAO,OAAIP,EAASU,EAAmBH,KACnDL,UAAW,SAAAC,GAAQ,OAAIH,EAASU,EAAkBP,QAIvCE,EArFE,SAAAM,GACf,IAAMoD,EAAmB,SAAAC,GACvB,IAAMP,EAAKO,EAAMC,OAAOR,GACxB7E,EACGsF,OAAO,gBAAkBT,EAAK,cAAgB9C,EAAMjB,SACpDiD,MAAK,SAAAwB,GACJvB,QAAQC,IAAIsB,MAEbpB,OAAM,SAAA3C,GACLO,EAAMT,UAAUE,EAAMD,aAE1B,IAAM2C,EAAa,GACnB,IAAK,IAAM9B,KAAOL,EAAMJ,QAClBS,IAAQyC,IACVX,EAAW9B,GAAOL,EAAMJ,QAAQS,IAGpCL,EAAM5B,WAAW+D,IAGbsB,EAASzD,EAAMJ,QAEjB8D,OAAOC,KAAK3D,EAAMJ,SACfgE,UACAzD,KAAI,SAAC0D,EAAQC,GACZ,OACE,wBAAIzD,IAAKwD,GACP,4BAAKC,EAAQ,GACb,4BAAK9D,EAAMJ,QAAQiE,GAAQpC,MAC3B,4BAAKzB,EAAMJ,QAAQiE,GAAQvF,MAC3B,4BAAK0B,EAAMJ,QAAQiE,GAAQ/C,MAC3B,4BAAKd,EAAMJ,QAAQiE,GAAQ9C,OAC3B,4BAAKf,EAAMJ,QAAQiE,GAAQ7C,UAC3B,4BAAKhB,EAAMJ,QAAQiE,GAAQ5C,YAC3B,6BAEIjB,EAAMJ,QAAQiE,GAAQ5C,WACtBjB,EAAMJ,QAAQiE,GAAQ7C,UACtBgC,QAAQ,IAEZ,4BACE,4BAAQF,GAAIe,EAAQE,QAASX,GAA7B,UApBV,KA4BJ,OACE,kBAAC,IAAMY,SAAP,KACE,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3B,+BACE,4BACE,iCACA,wDACA,kDACA,8DACA,8DACA,sFACA,gFACA,gHACA,kFAGJ,+BAAQX,Q,sOCjEhB,IAoTe/D,eAhBS,SAAAC,GACtB,MAAO,CACL0E,QAAS1E,EAAMtB,KAAKgG,QACpBxE,MAAOF,EAAMtB,KAAKwB,MAClByE,cAAe3E,EAAMtB,KAAKiG,cAC1BvF,QAASY,EAAMG,KAAKf,YAIG,SAAAM,GACzB,MAAO,CACLb,WAAY,SAAA6F,GAAO,OAAIhF,EAASU,EAAmBsE,KACnD9E,UAAW,SAAAC,GAAQ,OAAIH,EAASU,EAAkBP,QAIvCE,EApTC,SAAAM,GAAU,IAAD,EACiCuE,mBAAS,MAD1C,mBAChBC,EADgB,KACMC,EADN,KAGjBxE,EAAYD,EAAMH,MAAMK,MAAMC,KAAI,SAAAC,GACtC,OACE,4BAAQC,IAAKD,EAAME,MAAOF,GACvBA,MAKDG,EAAeP,EAAMH,MAAMW,SAASL,KAAI,SAAAC,GAC5C,OACE,4BAAQC,IAAKD,EAAME,MAAOF,GACvBA,MAKDO,EAAaX,EAAMH,MAAMe,OAAOT,KAAI,SAAAC,GACxC,OACE,4BAAQC,IAAKD,EAAME,MAAOF,GACvBA,MA8CP,OACE,kBAAC,IAAD,CACES,cAAe,CACb6D,MAAO,GACPC,OAAQ,CACN,CACErG,KAAM,GACNwC,KAAM,GACNC,MAAO,gBACPC,SAAU,MAIhBE,SAAU,SAAAC,GACR,IAAIC,EAAS,GAyBb,OAxBKD,EAAOuD,QAASrD,MAAMF,EAAOuD,SAChCtD,EAAOsD,MAAQ,wEAEbvD,EAAOwD,OAAOC,OAAS,IACzBxD,EAAOuD,OAAS,iGAElBxD,EAAOwD,OAAOxE,KAAI,SAAC0E,EAAMf,GAClB3C,EAAOwD,OAAOb,GAAOxF,OACxB8C,EAAO9C,KAAO,kJAGb6C,EAAOwD,OAAOb,GAAOhD,MACQ,sEAA9BK,EAAOwD,OAAOb,GAAOhD,OAErBM,EAAON,KAAO,2HAGdO,MAAMF,EAAOwD,OAAOb,GAAO9C,WACO,IAAlCG,EAAOwD,OAAOb,GAAO9C,UACa,KAAlCG,EAAOwD,OAAOb,GAAO9C,YAErBI,EAAOJ,SAAW,yGAGfI,GAETiB,cAAc,EACdf,SAAU,SAACH,EAAD,EAAuCN,GAAmB,IAA/CU,EAA8C,EAA9CA,cAAeC,EAA+B,EAA/BA,UAClCL,EAAOM,MAAO,IAAIC,MAAOC,cAAcC,MAAM,KAAK,GAClD3D,EACG8D,KAAK,0BAA4B/B,EAAMjB,QAASoC,GAChDa,MAAK,SAAAxC,GACJyC,QAAQC,IAAI1C,GACZ+B,GAAc,GACd,IAAMuD,E,yVAAU,IACX9E,EAAMqE,QADK,eAEb7E,EAASnB,KAAKyC,KAAOK,IAExBnB,EAAMxB,WAAWsG,GACjBtD,EAAUX,MAEXuB,OAAM,SAAA3C,GACLO,EAAMT,UAAUE,EAAMD,cAG5BuF,OAAQ,gBAAG1C,EAAH,EAAGA,aAAclB,EAAjB,EAAiBA,OAAQmB,EAAzB,EAAyBA,cAAzB,OACN,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,kBAACD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKQ,GAAI,GACP,0DAEE,kBAAC,IAAD,CACEP,UAAU,eACV5B,KAAK,QACLxC,KAAK,WAEP,0BAAMoE,UAAU,gBACd,kBAAC,IAAD,CAAc5B,KAAK,WAErB,0BAAM4B,UAAU,gBACd,kBAAC,IAAD,CAAc5B,KAAK,UAErB,0BAAM4B,UAAU,gBACd,kBAAC,IAAD,CAAc5B,KAAK,UAErB,0BAAM4B,UAAU,gBACd,kBAAC,IAAD,CAAc5B,KAAK,gBAIzB,kBAAC2B,EAAA,EAAD,CAAKQ,GAAI,IACP,4BACE3E,KAAK,SACLyF,QAAS,kBApID,SAAA5C,GAC1B,GAAIA,EAAOwD,OAAOC,OAAS,EACzB,GAAIzD,EAAOwD,OAAO,GAAG3D,SAAW,GAAgC,kBAA3BG,EAAOwD,OAAO,GAAG5D,MACpD,GAC4B,mCAA1BI,EAAOwD,OAAO,GAAGrG,MACQ,IAAzB6C,EAAOwD,OAAOC,QACY,KAA1BzD,EAAOwD,OAAO,GAAG7D,KACjB,CACA2D,EAAwB,MACxB,IAAIO,EAAW,KACftB,OAAOC,KAAK3D,EAAMsE,eAAenE,KAAI,SAAAE,GAC/BL,EAAMsE,cAAcjE,GAAKS,OAASK,EAAOwD,OAAO,GAAG7D,OACrDkE,EAAWhF,EAAMsE,cAAcjE,GAAK2E,aAGxCA,EAAS7E,KAAI,SAAAE,GACXc,EAAOwD,OAAOM,KAAK,CACjB3G,KAAM,kFACNwC,KAAMT,EAAIS,KACVC,MAAOV,EAAI6E,UAAY/D,EAAOwD,OAAO,GAAG5D,MAAQ,gBAChDC,SAAUG,EAAOwD,OAAO,GAAG3D,cAG/ByD,EAAwB,6EAExBA,EACE,0BAAM/B,UAAU,gBAAhB,2FAIJ+B,EACE,0BAAM/B,UAAU,gBAAhB,2KAIJ+B,EACE,0BAAM/B,UAAU,gBAAhB,sFAgG6ByC,CAAoBhE,KAElC,IAJH,mDAKW,KAEVqD,IAGL,kBAAC,IAAD,CACE1D,KAAK,SACLiE,OAAQ,SAAAK,GAAY,OAClB,kBAAC,IAAMpB,SAAP,KACG7C,EAAOwD,QAAUxD,EAAOwD,OAAOC,OAAS,EACrCzD,EAAOwD,OAAOxE,KAAI,SAAC0E,EAAMf,GAAP,OAChB,kBAACtB,EAAA,EAAD,CAAKnC,IAAKyD,GACR,kBAACrB,EAAA,EAAD,KACE,kCACE,kBAAC,IAAD,CACEC,UAAU,aACVpE,KAAK,QACLwC,KAAI,iBAAYgD,EAAZ,SACJxD,MAAM,iCACNqC,QACgC,mCAA9BxB,EAAOwD,OAAOb,GAAOxF,KAEvBsE,SAAU,kBACRN,EAAc,UAAD,OACDwB,EADC,SAEX,qCAIN,iEAEA,kBAAC,IAAD,CACEpB,UAAU,aACVpE,KAAK,QACLwC,KAAI,iBAAYgD,EAAZ,SACJxD,MAAM,kFACNqC,QAEE,oFADAxB,EAAOwD,OAAOb,GAAOxF,KAGvBsE,SAAU,kBACRN,EAAc,UAAD,OACDwB,EADC,SAEX,sFAIN,mHAEF,kCACE,iEACA,kBAAC,IAAD,CACEuB,UAAU,SACVvE,KAAI,iBAAYgD,EAAZ,UAEJ,4BAAQxD,MAAO,qEAAf,qEAG+B,mCAA9Ba,EAAOwD,OAAOb,GAAOxF,MACpB2B,EAEA,oFADDkB,EAAOwD,OAAOb,GAAOxF,MACAiC,GAGxB,iEACA,kBAAC,IAAD,CACE8E,UAAU,SACVvE,KAAI,iBAAYgD,EAAZ,WAEHnD,GAGH,yFACA,kBAAC,IAAD,CACE+B,UAAU,eACV5B,KAAI,iBAAYgD,EAAZ,aACJxF,KAAK,YAGT,4BACEoE,UAAU,WACVpE,KAAK,SACLyF,QAAS,kBAAMqB,EAAaE,OAAOxB,KAHrC,UAUN,KACJ,kBAACtB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,4BACEnE,KAAK,SACLyF,QAAS,WACPqB,EAAaH,KAAK,CAChB3G,KAAM,GACNwC,KAAM,gEACNC,MAAO,gBACPC,SAAU,OAPhB,yEAeJ,kBAACwB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKQ,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IAC1B,4BACET,UAAU,aACVpE,KAAK,SACLyE,SAAUV,GAHZ,wDC/KX3C,eAfS,SAAAC,GACtB,MAAO,CACL0E,QAAS1E,EAAMtB,KAAKgG,QACpBkB,OAAQ5F,EAAMtB,KAAKkH,OACnBxG,QAASY,EAAMG,KAAKf,YAIG,SAAAM,GACzB,MAAO,CACLb,WAAY,SAAA6F,GAAO,OAAIhF,EAASU,EAAmBsE,KACnD9E,UAAW,SAAAC,GAAQ,OAAIH,EAASU,EAAkBP,QAIvCE,EAhGE,SAAAM,GACf,IAAMoD,EAAmB,SAAAC,GACvB,IAAMP,EAAKO,EAAMC,OAAOR,GACxB7E,EACGsF,OAAO,gBAAkBT,EAAK,cAAgB9C,EAAMjB,SACpDiD,MAAK,SAAAwB,GACJvB,QAAQC,IAAIsB,MAEbpB,OAAM,SAAA3C,GACLO,EAAMT,UAAUE,EAAMD,aAE1B,IAAMsF,EAAa,GACnB,IAAK,IAAMzE,KAAOL,EAAMqE,QAClBhE,IAAQyC,IACVgC,EAAWzE,GAAOL,EAAMqE,QAAQhE,IAGpCL,EAAMxB,WAAWsG,IAGbrB,EAAQzD,EAAMuF,OAChB7B,OAAOC,KAAK3D,EAAMqE,SACfT,UACAzD,KAAI,SAACqF,EAAQ1B,GACZ,IAAMkB,EAAWhF,EAAMqE,QAAQmB,GAAQb,OAAOxE,KAAI,SAAC0E,EAAMf,GACvD,OACE,wBAAIzD,IAAG,UAAKmF,EAAL,YAAe1B,IACpB,6BACA,6BACA,4BAAKe,EAAKvG,MACV,4BAAKuG,EAAK/D,MACV,4BAAK+D,EAAK9D,OACV,4BAAK8D,EAAK7D,UACV,6BACA,iCAIN,OACE,2BAAOX,IAAKmF,GACV,4BACE,4BAAK1B,EAAQ,GACb,4BAAK9D,EAAMqE,QAAQmB,GAAQ/D,MAC3B,6BACA,6BACA,6BACA,6BACA,4BAAKzB,EAAMqE,QAAQmB,GAAQd,OAC3B,4BACE,4BAAQ5B,GAAI0C,EAAQzB,QAASX,GAA7B,OAKH4B,MAIT,KAEJ,OACE,kBAAC,IAAMhB,SAAP,KACE,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3B,+BACE,4BACE,iCACA,wDACA,kDACA,8DACA,8DACA,sFACA,wDACA,kFAGHX,O,olBC5ET,IAqbe/D,eAVS,SAACC,GACvB,MAAO,CACL8F,SAAU9F,EAAM+F,OAAOD,SACvBE,SAAUhG,EAAM+F,OAAOC,SACvBJ,OAAQ5F,EAAM+F,OAAOH,OACrB3F,QAASD,EAAMtB,KAAKuB,QACpBb,QAASY,EAAMG,KAAKf,WAITW,EArbM,SAACM,GAEpB,IAAM4F,EAAU,CACdC,UAAW,EACXC,YAAa,EACbC,UAAW,EACXC,YAAa,EACbC,UAAW,EACXC,YAAa,GAGTC,EAAa,uCAAG,WAAOrF,GAAP,eAAAsF,EAAA,6DACdC,EAAU3C,OAAOC,KAAK3D,EAAMJ,SAAS0G,MACzC,SAACjG,GAAD,OAASL,EAAMJ,QAAQS,GAAKS,OAASA,KAFnB,SAKd7C,EAAMsI,IAAI,gBAAkBF,EAAU,cAAgBrG,EAAMjB,QAA5D,KACDiB,EAAMJ,QAAQyG,GADb,CAEJG,UAAU,KAPQ,OAUpBC,OAAOC,SAASC,SAVI,2CAAH,sDAcblD,EAASzD,EAAMuF,OAGjB7B,OAAOC,KAAK3D,EAAMyF,SAASmB,MACxBC,OACA1G,KAAI,SAAC2G,EAAUC,GACd,IAAMV,EAAU3C,OAAOC,KAAK3D,EAAMJ,SAAS0G,MACzC,SAACjG,GAAD,OAASL,EAAMJ,QAAQS,GAAKS,OAASgG,KAGvC,GAAI9G,EAAMJ,QAAQyG,GAASG,SACzB,OAAO,KAIT,IAAMI,EAAO,GACbA,EAAK9F,KAAOgG,EACZF,EAAKhG,OAAS,GAEd,IACE,IAAIoG,EAAa,EACjBA,EAAahH,EAAMyF,SAASmB,KAAKE,GAAUlC,OAC3CoC,IACA,CAEA,IAAMC,EAAc,GASpB,GARAA,EAAYlG,MAAQf,EAAMyF,SAASmB,KAAKE,GAAUE,GAAYjG,MAC9DkG,EAAYpB,UACV7F,EAAMyF,SAASmB,KAAKE,GAAUE,GAAYhG,SAC5CiG,EAAYnB,YACV9F,EAAMyF,SAASmB,KAAKE,GAAUE,GAAY/F,WAC5CgG,EAAYC,OACVlH,EAAMyF,SAASmB,KAAKE,GAAUE,GAAYtC,MAExC1E,EAAM2F,SAASiB,KAAKE,GAAW,CAGjC,IADA,IAAIK,GAAmB,EACdC,EAAI,EAAGA,EAAIpH,EAAM2F,SAASiB,KAAKE,GAAUlC,OAAQwC,IAEtDpH,EAAM2F,SAASiB,KAAKE,GAAUM,GAAGrG,QAAUkG,EAAYlG,QAEvDoG,EAAmBC,GAKQ,iBAApBD,GACTF,EAAYlB,UACV/F,EAAM2F,SAASiB,KAAKE,GAAUK,GAAkBnG,SAClDiG,EAAYjB,YACVhG,EAAM2F,SAASiB,KAAKE,GAAUK,GAAkBlG,WAClDgG,EAAYI,OACVrH,EAAM2F,SAASiB,KAAKE,GAAUK,GAAkBzC,QAChD4C,IACItH,EAAM2F,SAASiB,KAAKE,GAAUK,GAAkBzC,MAChD,EACNuC,EAAYhB,UACVgB,EAAYpB,UAAYoB,EAAYlB,UACtCkB,EAAYM,OAASN,EAAYI,OAC7BJ,EAAYI,OACZJ,EAAYC,OAChBD,EAAYf,YACVe,EAAYM,OAASN,EAAYhB,YAOnCgB,EAAYlB,UAAY,EACxBkB,EAAYjB,YAAc,EAC1BiB,EAAYI,OAAS,EACrBJ,EAAYhB,UAAYgB,EAAYpB,UACpCoB,EAAYf,YAAce,EAAYnB,YACtCmB,EAAYM,OAASN,EAAYC,aAInCD,EAAYlB,UAAY,EACxBkB,EAAYjB,YAAc,EAC1BiB,EAAYI,OAAS,EACrBJ,EAAYhB,UAAYgB,EAAYpB,UACpCoB,EAAYf,YAAce,EAAYnB,YACtCmB,EAAYM,OAASN,EAAYC,OAGnCN,EAAKhG,OAAOqE,KAAKgC,GAGnBL,EAAKf,UAAY,EACjBe,EAAKb,UAAY,EACjBa,EAAKX,UAAY,EACjBW,EAAKd,YAAc,EACnBc,EAAKZ,YAAc,EACnBY,EAAKV,YAAc,EAEnBU,EAAKhG,OAAOT,KAAI,SAACqH,GACfZ,EAAKf,WAAa2B,EAAU3B,UAC5Be,EAAKb,WAAayB,EAAUzB,UAC5Ba,EAAKX,WAAauB,EAAUvB,UAC5BW,EAAKd,aAAe0B,EAAU1B,YAC9Bc,EAAKZ,aAAewB,EAAUxB,YAC9BY,EAAKV,aAAesB,EAAUtB,eAGhCU,EAAKM,OAASN,EAAKd,YAAcc,EAAKf,UACtCe,EAAKS,OACkB,IAArBT,EAAKZ,aAAwC,IAAnBY,EAAKb,UAC3B,EACAa,EAAKZ,YAAcY,EAAKb,UAC9Ba,EAAKW,OAASX,EAAKV,YAAcU,EAAKX,UAEtC,IAAMwB,EACJ,4BACE,4BAAKV,EAAY,GACjB,4BAAKH,EAAK9F,MACV,4BACE,4BAAQxC,KAAK,SAASyF,QAAS,kBAAMoC,EAAcW,KAAnD,iEAIF,wBAAIY,MAAO,CAAEC,gBAAiB,cAC9B,4BAAKf,EAAKf,WACV,4BAAKe,EAAKd,YAAY9C,QAAQ,IAC9B,4BAAK4D,EAAKM,OAAOlE,QAAQ,IACzB,wBAAI0E,MAAO,CAAEC,gBAAiB,cAC9B,4BAAKf,EAAKb,WACV,4BAAKa,EAAKZ,YAAYhD,QAAQ,IAC9B,4BAAK4D,EAAKS,OAAOrE,QAAQ,IACzB,wBAAI0E,MAAO,CAAEC,gBAAiB,cAC9B,4BAAKf,EAAKX,WACV,4BAAKW,EAAKV,YAAYlD,QAAQ,IAC9B,4BAAK4D,EAAKW,OAAOvE,QAAQ,KAIvB4E,EAAOhB,EAAKhG,OAAOT,KAAI,SAAC0H,EAAWC,GACvC,OACE,wBAAIzH,IAAG,UAAKuG,EAAK9F,KAAV,YAAkB+G,EAAU9G,QACjC,sCAAQgG,EAAY,EAApB,YAAyBe,EAAiB,IAC1C,6BACA,4BAAKD,EAAU9G,OACf,wBAAI2G,MAAO,CAAEC,gBAAiB,cAC9B,4BAAKE,EAAUhC,WACf,4BAAKgC,EAAU/B,YAAY9C,QAAQ,IACnC,4BAAK6E,EAAUX,OAAOlE,QAAQ,IAC9B,wBAAI0E,MAAO,CAAEC,gBAAiB,cAC9B,4BAAKE,EAAU9B,WACf,4BAAK8B,EAAU7B,YAAYhD,QAAQ,IACnC,4BAAK6E,EAAUR,OAAOrE,QAAQ,IAC9B,wBAAI0E,MAAO,CAAEC,gBAAiB,cAC9B,4BAAKE,EAAU5B,WACf,4BAAK4B,EAAU3B,YAAYlD,QAAQ,IACnC,4BAAK6E,EAAUN,OAAOvE,QAAQ,QAYpC,OAPA4C,EAAQC,WAAae,EAAKf,UAC1BD,EAAQE,aAAec,EAAKd,YAC5BF,EAAQG,WAAaa,EAAKb,UAC1BH,EAAQI,aAAeY,EAAKZ,YAC5BJ,EAAQK,WAAaW,EAAKX,UAC1BL,EAAQM,aAAeU,EAAKV,YAG1B,2BAAO7F,IAAKyG,GACTW,EACAG,MAvKT,KA6KEG,EAAiB/H,EAAMuF,OAGzB7B,OAAOC,KAAK3D,EAAMyF,SAASuC,SACxBnB,OACA1G,KAAI,SAAC2G,EAAUC,GACd,IAAMV,EAAU3C,OAAOC,KAAK3D,EAAMJ,SAAS0G,MACzC,SAACjG,GAAD,OAASL,EAAMJ,QAAQS,GAAKS,OAASgG,KAGvC,GAAI9G,EAAMJ,QAAQyG,GAASG,SACzB,OAAO,KAIT,IAAMI,EAAO,GACbA,EAAK9F,KAAOgG,EACZF,EAAKhG,OAAS,GAEd,IACE,IAAIoG,EAAa,EACjBA,EAAahH,EAAMyF,SAASuC,QAAQlB,GAAUlC,OAC9CoC,IACA,CAEA,IAAMC,EAAc,GAUpB,GATAA,EAAYlG,MACVf,EAAMyF,SAASuC,QAAQlB,GAAUE,GAAYjG,MAC/CkG,EAAYpB,UACV7F,EAAMyF,SAASuC,QAAQlB,GAAUE,GAAYhG,SAC/CiG,EAAYnB,YACV9F,EAAMyF,SAASuC,QAAQlB,GAAUE,GAAY/F,WAC/CgG,EAAYC,OACVlH,EAAMyF,SAASuC,QAAQlB,GAAUE,GAAYtC,MAE3C1E,EAAM2F,SAASqC,QAAQlB,GAAW,CAGpC,IADA,IAAIK,GAAmB,EAEjBC,EAAI,EACRA,EAAIpH,EAAM2F,SAASqC,QAAQlB,GAAUlC,OACrCwC,IAGEpH,EAAM2F,SAASqC,QAAQlB,GAAUM,GAAGrG,QACpCkG,EAAYlG,QAEZoG,EAAmBC,GAKQ,iBAApBD,GACTF,EAAYlB,UACV/F,EAAM2F,SAASqC,QAAQlB,GAAUK,GAAkBnG,SACrDiG,EAAYjB,YACVhG,EAAM2F,SAASqC,QAAQlB,GAAUK,GAAkBlG,WACrDgG,EAAYI,OACVrH,EAAM2F,SAASqC,QAAQlB,GAAUK,GAAkBzC,QACnD4C,IACItH,EAAM2F,SAASqC,QAAQlB,GAAUK,GAAkBzC,MACnD,EACNuC,EAAYhB,UACVgB,EAAYpB,UAAYoB,EAAYlB,UACtCkB,EAAYM,OAASN,EAAYI,OAC7BJ,EAAYI,OACZJ,EAAYC,OAChBD,EAAYf,YACVe,EAAYM,OAASN,EAAYhB,YAInCgB,EAAYlB,UAAY,EACxBkB,EAAYjB,YAAc,EAC1BiB,EAAYI,OAAS,EACrBJ,EAAYhB,UAAYgB,EAAYpB,UACpCoB,EAAYf,YAAce,EAAYnB,YACtCmB,EAAYM,OAASN,EAAYC,aAInCD,EAAYlB,UAAY,EACxBkB,EAAYjB,YAAc,EAC1BiB,EAAYI,OAAS,EACrBJ,EAAYhB,UAAYgB,EAAYpB,UACpCoB,EAAYf,YAAce,EAAYnB,YACtCmB,EAAYM,OAASN,EAAYC,OAGnCN,EAAKhG,OAAOqE,KAAKgC,GAGnBL,EAAKf,UAAY,EACjBe,EAAKb,UAAY,EACjBa,EAAKX,UAAY,EACjBW,EAAKd,YAAc,EACnBc,EAAKZ,YAAc,EACnBY,EAAKV,YAAc,EAEnBU,EAAKhG,OAAOT,KAAI,SAACqH,GACfZ,EAAKf,WAAa2B,EAAU3B,UAC5Be,EAAKb,WAAayB,EAAUzB,UAC5Ba,EAAKX,WAAauB,EAAUvB,UAC5BW,EAAKd,aAAe0B,EAAU1B,YAC9Bc,EAAKZ,aAAewB,EAAUxB,YAC9BY,EAAKV,aAAesB,EAAUtB,eAGhCU,EAAKM,OAASN,EAAKd,YAAcc,EAAKf,UACtCe,EAAKS,OACkB,IAArBT,EAAKZ,aAAwC,IAAnBY,EAAKb,UAC3B,EACAa,EAAKZ,YAAcY,EAAKb,UAC9Ba,EAAKW,OAASX,EAAKV,YAAcU,EAAKX,UAEtC,IAAMwB,EACJ,4BACE,4BAAKV,EAAY,GACjB,4BAAKH,EAAK9F,MACV,4BACE,4BAAQxC,KAAK,SAASyF,QAAS,kBAAMoC,EAAcW,KAAnD,iEAIF,wBAAIY,MAAO,CAAEC,gBAAiB,cAC9B,4BAAKf,EAAKf,WACV,4BAAKe,EAAKd,YAAY9C,QAAQ,IAC9B,4BAAK4D,EAAKM,OAAOlE,QAAQ,IACzB,wBAAI0E,MAAO,CAAEC,gBAAiB,cAC9B,4BAAKf,EAAKb,WACV,4BAAKa,EAAKZ,YAAYhD,QAAQ,IAC9B,4BAAK4D,EAAKS,OAAOrE,QAAQ,IACzB,wBAAI0E,MAAO,CAAEC,gBAAiB,cAC9B,4BAAKf,EAAKX,WACV,4BAAKW,EAAKV,YAAYlD,QAAQ,IAC9B,4BAAK4D,EAAKW,OAAOvE,QAAQ,KAIvB4E,EAAOhB,EAAKhG,OAAOT,KAAI,SAAC0H,EAAWC,GACvC,OACE,wBAAIzH,IAAG,UAAKuG,EAAK9F,KAAV,YAAkB+G,EAAU9G,QACjC,sCAAQgG,EAAY,EAApB,YAAyBe,EAAiB,IAC1C,6BACA,4BAAKD,EAAU9G,OACf,wBAAI2G,MAAO,CAAEC,gBAAiB,cAC9B,4BAAKE,EAAUhC,WACf,4BAAKgC,EAAU/B,YAAY9C,QAAQ,IACnC,4BAAK6E,EAAUX,OAAOlE,QAAQ,IAC9B,wBAAI0E,MAAO,CAAEC,gBAAiB,cAC9B,4BAAKE,EAAU9B,WACf,4BAAK8B,EAAU7B,YAAYhD,QAAQ,IACnC,4BAAK6E,EAAUR,OAAOrE,QAAQ,IAC9B,wBAAI0E,MAAO,CAAEC,gBAAiB,cAC9B,4BAAKE,EAAU5B,WACf,4BAAK4B,EAAU3B,YAAYlD,QAAQ,IACnC,4BAAK6E,EAAUN,OAAOvE,QAAQ,QAYpC,OAPA4C,EAAQC,WAAae,EAAKf,UAC1BD,EAAQE,aAAec,EAAKd,YAC5BF,EAAQG,WAAaa,EAAKb,UAC1BH,EAAQI,aAAeY,EAAKZ,YAC5BJ,EAAQK,WAAaW,EAAKX,UAC1BL,EAAQM,aAAeU,EAAKV,YAG1B,2BAAO7F,IAAKyG,GACTW,EACAG,MA1KT,KAgLEK,EACJ,4BACE,6BACA,oEACA,6BACA,wBAAIP,MAAO,CAAEC,gBAAiB,cAC9B,4BAAK/B,EAAQC,WACb,4BAAKD,EAAQE,YAAY9C,QAAQ,IACjC,6BACA,wBAAI0E,MAAO,CAAEC,gBAAiB,cAC9B,4BAAK/B,EAAQG,WACb,4BAAKH,EAAQI,YAAYhD,QAAQ,IACjC,6BACA,wBAAI0E,MAAO,CAAEC,gBAAiB,cAC9B,4BAAK/B,EAAQK,WACb,4BAAKL,EAAQM,YAAYlD,QAAQ,IACjC,8BAIJ,OACE,kBAAC,IAAMgB,SAAP,KACE,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3B,+BACE,4BACE,iCACA,8DACA,8DACA,wBAAIsD,MAAO,CAAEC,gBAAiB,cAC9B,yJACA,mJACA,mJACA,wBAAID,MAAO,CAAEC,gBAAiB,cAC9B,iIACA,2HACA,8IACA,wBAAID,MAAO,CAAEC,gBAAiB,cAC9B,wIACA,kIACA,uJAIHlE,EACAsE,EACD,+BAAQE,QC1YDvI,eAdS,SAAAC,GACtB,MAAO,CACLC,QAASD,EAAMtB,KAAKuB,QACpByE,QAAS1E,EAAMtB,KAAKgG,YAIG,SAAAhF,GACzB,MAAO,CACL6I,eAAgB,SAACtI,GAAD,OAAaP,EP1BH,SAACO,GAC7B,IAAMuI,EAAgB,GAChBC,EAAmB,GACnBC,EAAc,GACd5C,EAAW,GAsJjB,OArJI7F,IAEF8D,OAAOC,KAAK/D,GAASO,KAAI,SAAC0D,EAAQC,GAEhC,GAA6B,mCAAzBlE,EAAQiE,GAAQvF,KAElB,GAAI6J,EAAcG,eAAe1I,EAAQiE,GAAQ/C,MAAO,CAGtD,IAFA,IAAIyH,GAAU,EAELnB,EAAI,EAAGA,EAAIe,EAAcvI,EAAQiE,GAAQ/C,MAAM8D,OAAQwC,IAG5DxH,EAAQiE,GAAQ9C,QAChBoH,EAAcvI,EAAQiE,GAAQ/C,MAAMsG,GAAGrG,QAEvCoH,EAAcvI,EAAQiE,GAAQ/C,MAAMsG,GAAGpG,UACrCpB,EAAQiE,GAAQ7C,SAClBmH,EAAcvI,EAAQiE,GAAQ/C,MAAMsG,GAAGnG,YACrCrB,EAAQiE,GAAQ5C,WAClBkH,EAAcvI,EAAQiE,GAAQ/C,MAAMsG,GAAG1C,MACrCyD,EAAcvI,EAAQiE,GAAQ/C,MAAMsG,GAAGnG,WACvCkH,EAAcvI,EAAQiE,GAAQ/C,MAAMsG,GAAGpG,SACzCuH,GAAU,GAId,IAAKA,EAAS,CACZ,IAAM3B,EAAO,GACbA,EAAK7F,MAAQnB,EAAQiE,GAAQ9C,MAC7B6F,EAAK5F,SAAWpB,EAAQiE,GAAQ7C,SAChC4F,EAAK3F,WAAarB,EAAQiE,GAAQ5C,WAClC2F,EAAKlC,MAAQ9E,EAAQiE,GAAQ5C,WAAarB,EAAQiE,GAAQ7C,SAC1DmH,EAAcvI,EAAQiE,GAAQ/C,MAAMmE,KAAK2B,GACrCA,EAAKJ,WACP2B,EAAcvI,EAAQiE,GAAQ/C,MAAM0F,UAAW,QAKhD,CACH2B,EAAcvI,EAAQiE,GAAQ/C,MAAQ,GACtC,IAAM8F,EAAO,GACbA,EAAK7F,MAAQnB,EAAQiE,GAAQ9C,MAC7B6F,EAAK5F,SAAWpB,EAAQiE,GAAQ7C,SAChC4F,EAAK3F,WAAarB,EAAQiE,GAAQ5C,WAClC2F,EAAKlC,MAAQ9E,EAAQiE,GAAQ5C,WAAarB,EAAQiE,GAAQ7C,SAC1DmH,EAAcvI,EAAQiE,GAAQ/C,MAAMmE,KAAK2B,GACrCA,EAAKJ,WACP2B,EAAcvI,EAAQiE,GAAQ/C,MAAM0F,UAAW,GAMrD,GAA6B,oFAAzB5G,EAAQiE,GAAQvF,KAElB,GAAI8J,EAAiBE,eAAe1I,EAAQiE,GAAQ/C,MAAO,CAGzD,IAFA,IAAIyH,GAAU,EAGRnB,EAAI,EACRA,EAAIgB,EAAiBxI,EAAQiE,GAAQ/C,MAAM8D,OAC3CwC,IAIExH,EAAQiE,GAAQ9C,QAChBqH,EAAiBxI,EAAQiE,GAAQ/C,MAAMsG,GAAGrG,QAE1CqH,EAAiBxI,EAAQiE,GAAQ/C,MAAMsG,GAAGpG,UACxCpB,EAAQiE,GAAQ7C,SAClBoH,EAAiBxI,EAAQiE,GAAQ/C,MAAMsG,GAAGnG,YACxCrB,EAAQiE,GAAQ5C,WAClBmH,EAAiBxI,EAAQiE,GAAQ/C,MAAMsG,GAAG1C,MACxC0D,EAAiBxI,EAAQiE,GAAQ/C,MAAMsG,GAAGnG,WAC1CmH,EAAiBxI,EAAQiE,GAAQ/C,MAAMsG,GAAGpG,SAC5CuH,GAAU,GAId,IAAKA,EAAS,CACZ,IAAM3B,EAAO,GACbA,EAAK7F,MAAQnB,EAAQiE,GAAQ9C,MAC7B6F,EAAK5F,SAAWpB,EAAQiE,GAAQ7C,SAChC4F,EAAK3F,WAAarB,EAAQiE,GAAQ5C,WAClC2F,EAAKlC,MAAQ9E,EAAQiE,GAAQ5C,WAAarB,EAAQiE,GAAQ7C,SAC1DoH,EAAiBxI,EAAQiE,GAAQ/C,MAAMmE,KAAK2B,QAI3C,CACHwB,EAAiBxI,EAAQiE,GAAQ/C,MAAQ,GACzC,IAAM8F,EAAO,GACbA,EAAK7F,MAAQnB,EAAQiE,GAAQ9C,MAC7B6F,EAAK5F,SAAWpB,EAAQiE,GAAQ7C,SAChC4F,EAAK3F,WAAarB,EAAQiE,GAAQ5C,WAClC2F,EAAKlC,MAAQ9E,EAAQiE,GAAQ5C,WAAarB,EAAQiE,GAAQ7C,SAC1DoH,EAAiBxI,EAAQiE,GAAQ/C,MAAMmE,KAAK2B,GAKhD,GAA6B,+CAAzBhH,EAAQiE,GAAQvF,KAElB,GAAI+J,EAAYC,eAAe1I,EAAQiE,GAAQ/C,MAAO,CAGpD,IAFA,IAAIyH,GAAU,EAELnB,EAAI,EAAGA,EAAIiB,EAAYzI,EAAQiE,GAAQ/C,MAAM8D,OAAQwC,IAG1DxH,EAAQiE,GAAQ9C,QAChBsH,EAAYzI,EAAQiE,GAAQ/C,MAAMsG,GAAGrG,QAErCsH,EAAYzI,EAAQiE,GAAQ/C,MAAMsG,GAAGpG,UACnCpB,EAAQiE,GAAQ7C,SAClBqH,EAAYzI,EAAQiE,GAAQ/C,MAAMsG,GAAGnG,YACnCrB,EAAQiE,GAAQ5C,WAClBoH,EAAYzI,EAAQiE,GAAQ/C,MAAMsG,GAAG1C,MACnC2D,EAAYzI,EAAQiE,GAAQ/C,MAAMsG,GAAGnG,WACrCoH,EAAYzI,EAAQiE,GAAQ/C,MAAMsG,GAAGpG,SACvCuH,GAAU,GAId,IAAKA,EAAS,CACZ,IAAM3B,EAAO,GACbA,EAAK7F,MAAQnB,EAAQiE,GAAQ9C,MAC7B6F,EAAK5F,SAAWpB,EAAQiE,GAAQ7C,SAChC4F,EAAK3F,WAAarB,EAAQiE,GAAQ5C,WAClC2F,EAAKlC,MAAQ9E,EAAQiE,GAAQ5C,WAAarB,EAAQiE,GAAQ7C,SAC1DqH,EAAYzI,EAAQiE,GAAQ/C,MAAMmE,KAAK2B,QAItC,CACHyB,EAAYzI,EAAQiE,GAAQ/C,MAAQ,GACpC,IAAM8F,EAAO,GACbA,EAAK7F,MAAQnB,EAAQiE,GAAQ9C,MAC7B6F,EAAK5F,SAAWpB,EAAQiE,GAAQ7C,SAChC4F,EAAK3F,WAAarB,EAAQiE,GAAQ5C,WAClC2F,EAAKlC,MAAQ9E,EAAQiE,GAAQ5C,WAAarB,EAAQiE,GAAQ7C,SAC1DqH,EAAYzI,EAAQiE,GAAQ/C,MAAMmE,KAAK2B,OAI7CnB,EAASmB,KAAOuB,EAChB1C,EAASuC,QAAUI,EACnB3C,EAASlH,IAAM8J,GAEV,CACL/J,KFhJ4B,mBEiJ5BmH,SAAUA,GOlI4B1F,CAAuBH,KAC7D4I,eAAgB,SAACnE,GAAD,OAAahF,EPqIH,SAACgF,GAC7B,IAAMoE,EAAgB,GAChBC,EAAmB,GACnB/C,EAAW,GA2GjB,OAzGItB,IAEFX,OAAOC,KAAKU,GAASlE,KAAI,SAACqF,EAAQ1B,GAEhCO,EAAQmB,GAAQb,OAAOxE,KAAI,SAACwI,EAASC,GAEnC,IAAMxI,EAAO,CAAE9B,KAAMqK,EAAQrK,MACvB2C,EAA0B,IAAb2H,EAAiBvE,EAAQmB,GAAQd,MAAQ,EAQ5D,GAPAtE,EAAKuI,EAAQ7H,MAAQ,CACnBC,MAAO4H,EAAQ5H,MACfC,SAAU2H,EAAQ3H,SAClBC,WAAYA,EACZyD,MAAOiE,EAAQ3H,SAAWC,GAGV,mCAAdb,EAAK9B,KAEP,GAAImK,EAAcpE,EAAQmB,GAAQb,OAAOiE,GAAU9H,MAAO,CAGxD,IAFA,IAAIyH,GAAU,EAGRnB,EAAI,EACRA,EAAIqB,EAAcpE,EAAQmB,GAAQb,OAAOiE,GAAU9H,MAAM8D,OACzDwC,IAIEqB,EAAcpE,EAAQmB,GAAQb,OAAOiE,GAAU9H,MAAMsG,GAClDrG,QAAUX,EAAKuI,EAAQ7H,MAAMC,QAGhC0H,EAAcpE,EAAQmB,GAAQb,OAAOiE,GAAU9H,MAC7CsG,GACApG,UAAYZ,EAAKuI,EAAQ7H,MAAME,SACjCyH,EAAcpE,EAAQmB,GAAQb,OAAOiE,GAAU9H,MAC7CsG,GACAnG,YAAcb,EAAKuI,EAAQ7H,MAAMG,WACnCwH,EAAcpE,EAAQmB,GAAQb,OAAOiE,GAAU9H,MAAMsG,GAAG1C,MACtD+D,EAAcpE,EAAQmB,GAAQb,OAAOiE,GAAU9H,MAAMsG,GAClDnG,WACHwH,EAAcpE,EAAQmB,GAAQb,OAAOiE,GAAU9H,MAAMsG,GAClDpG,SACLuH,GAAU,GAITA,GACHE,EAAcpE,EAAQmB,GAAQb,OAAOiE,GAAU9H,MAAMmE,KACnD7E,EAAKuI,EAAQ7H,YAKjB2H,EAAcpE,EAAQmB,GAAQb,OAAOiE,GAAU9H,MAAQ,GACvD2H,EAAcpE,EAAQmB,GAAQb,OAAOiE,GAAU9H,MAAMmE,KACnD7E,EAAKuI,EAAQ7H,YAGZ,GAAkB,oFAAdV,EAAK9B,KACd,GAAIoK,EAAiBrE,EAAQmB,GAAQb,OAAOiE,GAAU9H,MAAO,CAE3D,IADA,IAAIyH,GAAU,EAERnB,EAAI,EACRA,EACAsB,EAAiBrE,EAAQmB,GAAQb,OAAOiE,GAAU9H,MAAM8D,OACxDwC,IAGEsB,EAAiBrE,EAAQmB,GAAQb,OAAOiE,GAAU9H,MAAMsG,GACrDrG,QAAUX,EAAKuI,EAAQ7H,MAAMC,QAEhC2H,EAAiBrE,EAAQmB,GAAQb,OAAOiE,GAAU9H,MAChDsG,GACApG,UAAYZ,EAAKuI,EAAQ7H,MAAME,SACjC0H,EAAiBrE,EAAQmB,GAAQb,OAAOiE,GAAU9H,MAChDsG,GACAnG,YAAcb,EAAKuI,EAAQ7H,MAAMG,WACnCyH,EAAiBrE,EAAQmB,GAAQb,OAAOiE,GAAU9H,MAChDsG,GACA1C,MACAgE,EAAiBrE,EAAQmB,GAAQb,OAAOiE,GAAU9H,MAAMsG,GACrDnG,WACHyH,EAAiBrE,EAAQmB,GAAQb,OAAOiE,GAAU9H,MAAMsG,GACrDpG,SACLuH,GAAU,GAGTA,GACHG,EAAiBrE,EAAQmB,GAAQb,OAAOiE,GAAU9H,MAAMmE,KACtD7E,EAAKuI,EAAQ7H,YAIjB4H,EAAiBrE,EAAQmB,GAAQb,OAAOiE,GAAU9H,MAAQ,GAC1D4H,EAAiBrE,EAAQmB,GAAQb,OAAOiE,GAAU9H,MAAMmE,KACtD7E,EAAKuI,EAAQ7H,aAMvB6E,EAASiB,KAAO6B,EAChB9C,EAASqC,QAAUU,GAGd,CACLpK,KFnQ4B,mBEoQ5BqH,SAAUA,GOrP4B5F,CAAuBsE,QAIlD3E,EA3BC,SAAAM,GAMd,OALA6I,qBAAU,WACR7I,EAAMkI,eAAelI,EAAMJ,SAC3BI,EAAMwI,eAAexI,EAAMqE,WAC1B,CAACrE,IAGF,kBAAC,IAAMgE,SAAP,KACE,kBAAC,EAAD,U,8NCPN,IAwLetE,eAhBS,SAAAC,GACtB,MAAO,CACL2E,cAAe3E,EAAMtB,KAAKiG,cAC1BzE,MAAOF,EAAMtB,KAAKwB,MAClBd,QAASY,EAAMG,KAAKf,YAIG,SAAAM,GACzB,MAAO,CACLX,iBAAkB,SAAA4F,GAAa,OAC7BjF,EAASU,EAAyBuE,KACpC/E,UAAW,SAAAC,GAAQ,OAAIH,EAASU,EAAkBP,QAIvCE,EAxLO,SAAAM,GACpB,IAAMC,EAAYD,EAAMH,MAAMK,MAAMC,KAAI,SAAAC,GACtC,OACE,4BAAQC,IAAKD,EAAME,MAAOF,GACvBA,MAKDG,EAAeP,EAAMH,MAAMW,SAASL,KAAI,SAAAC,GAC5C,OACE,4BAAQC,IAAKD,EAAME,MAAOF,GACvBA,MAKP,OACE,kBAAC,IAAD,CACES,cAAe,CACbC,KAAM,GACNkE,SAAU,CACR,CACElE,KAAM,GACNoE,WAAW,KAIjBhE,SAAU,SAAAC,GACR,IAAIC,EAAS,GACT0H,EAAwB,EAuB5B,OAtBApF,OAAOC,KAAK3D,EAAMsE,eAAenE,KAAI,SAAAE,GAC/BL,EAAMsE,cAAcjE,GAAKS,OAASK,EAAOL,MAC3CgI,OAGAA,EAAwB,IAC1B1H,EAAO2H,eAAiB,sGAEN,KAAhB5H,EAAOL,OACTM,EAAON,KAAO,iGAEZK,EAAO6D,SAASJ,OAAS,IAC3BxD,EAAO4D,SAAW,8JAEpB7D,EAAO6D,SAAS7E,KAAI,SAAC0E,EAAMf,GAEtB3C,EAAO6D,SAASlB,GAAOhD,MACQ,sEAAhCK,EAAO6D,SAASlB,GAAOhD,OAEvBM,EAAON,KAAO,0LAGXM,GAETiB,cAAc,EACdf,SAAU,SAACH,EAAD,EAAuCN,GAAmB,IAA/CU,EAA8C,EAA9CA,cAAeC,EAA+B,EAA/BA,UAClCL,EAAOM,MAAO,IAAIC,MAAOC,cAAcC,MAAM,KAAK,GAClD3D,EACG8D,KAAK,gCAAkC/B,EAAMjB,QAASoC,GACtDa,MAAK,SAAAxC,GACJyC,QAAQC,IAAI1C,GACZ+B,GAAc,GACd,IAAMyH,E,yVAAgB,IACjBhJ,EAAMsE,cADW,eAEnB9E,EAASnB,KAAKyC,KAAOK,IAExBnB,EAAMtB,iBAAiBsK,GACvBxH,EAAUX,MAEXuB,OAAM,SAAA3C,GACLO,EAAMT,UAAUE,EAAMD,cAG5BuF,OAAQ,gBAAG1C,EAAH,EAAGA,aAAclB,EAAjB,EAAiBA,OAAjB,EAAyBmB,cAAzB,OACN,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,kCACE,iEACA,kBAAC,IAAD,CAAO4C,UAAU,SAASvE,KAAI,QAC5B,4BAAQR,MAAO,qEAAf,qEACCL,IAGL,kBAAC,IAAD,CACEa,KAAK,WACLiE,OAAQ,SAAAK,GAAY,OAClB,kBAAC,IAAMpB,SAAP,KACG7C,EAAO6D,UAAY7D,EAAO6D,SAASJ,OAAS,EACzCzD,EAAO6D,SAAS7E,KAAI,SAAC0E,EAAMf,GAAP,OAClB,kBAACtB,EAAA,EAAD,CAAKnC,IAAKyD,GACR,kBAACrB,EAAA,EAAD,CAAKQ,GAAI,GACP,kCACE,mKACA,kBAAC,IAAD,CACEoC,UAAU,SACVvE,KAAI,mBAAcgD,EAAd,UAEJ,4BAAQxD,MAAO,qEAAf,qEAGCC,KAIP,kBAACkC,EAAA,EAAD,CAAKQ,GAAI,GACP,kCACE,oFACA,kBAAC,IAAD,CACEnC,KAAI,mBAAcgD,EAAd,cACJxF,KAAK,WACLgC,MAAK,mBAAcwD,EAAd,cACLpB,UAAU,eAIhB,kBAACD,EAAA,EAAD,CAAKQ,GAAI,GACP,4BACEP,UAAU,WACVpE,KAAK,SACLyF,QAAS,kBAAMqB,EAAaE,OAAOxB,KAHrC,UAUN,KACJ,kBAACtB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,4BACEnE,KAAK,SACLyF,QAAS,WACPqB,EAAaH,KAAK,CAChBnE,KAAM,GACNoE,WAAW,MALjB,yEAaJ,kBAAC1C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKQ,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IAC1B,4BACET,UAAU,aACVpE,KAAK,SACLyE,SAAUV,GAHZ,wDC5DX3C,eAhBS,SAAAC,GACtB,MAAO,CACL2E,cAAe3E,EAAMtB,KAAKiG,cAC1BiB,OAAQ5F,EAAMtB,KAAKkH,OACnBxG,QAASY,EAAMG,KAAKf,YAIG,SAAAM,GACzB,MAAO,CACLX,iBAAkB,SAAA4F,GAAa,OAC7BjF,EAASU,EAAyBuE,KACpC/E,UAAW,SAAAC,GAAQ,OAAIH,EAASU,EAAkBP,QAIvCE,EAvFQ,SAAAM,GACrB,IAAMoD,EAAmB,SAAAC,GACvB,IAAMP,EAAKO,EAAMC,OAAOR,GACxB7E,EACGsF,OAAO,sBAAwBT,EAAK,cAAgB9C,EAAMjB,SAC1DiD,MAAK,SAAAwB,GACJvB,QAAQC,IAAIsB,MAEbpB,OAAM,SAAA3C,GACLO,EAAMT,UAAUE,EAAMD,aAE1B,IAAMwJ,EAAmB,GACzB,IAAK,IAAM3I,KAAOL,EAAMsE,cAClBjE,IAAQyC,IACVkG,EAAiB3I,GAAOL,EAAMsE,cAAcjE,IAGhDL,EAAMtB,iBAAiBsK,IAGnBvF,EAAQzD,EAAMuF,OAChB7B,OAAOC,KAAK3D,EAAMsE,eACfV,UACAzD,KAAI,SAAC8I,EAAanF,GACjB,IAAMkB,EAAWhF,EAAMsE,cAAc2E,GAAajE,SAAS7E,KACzD,SAAC0E,EAAMf,GACL,OACE,wBAAIzD,IAAG,UAAK4I,EAAL,YAAoBnF,IACzB,6BACA,4BAAKe,EAAK/D,MACV,4BAAK+D,EAAKK,UAAY,qBAAQ,gBAC9B,iCAKR,OACE,2BAAO7E,IAAK4I,GACV,4BACE,4BAAKnF,EAAQ,GACb,4BAAK9D,EAAMsE,cAAc2E,GAAanI,MACtC,6BACA,4BACE,4BAAQgC,GAAImG,EAAalF,QAASX,GAAlC,OAKH4B,MAIT,KAEJ,OACE,kBAAC,IAAMhB,SAAP,KACE,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3B,+BACE,4BACE,iCACA,8DACA,8FACA,kFAGHX,OCKM/D,eAPS,SAAAC,GACtB,MAAO,CACLuJ,uBAAwBvJ,EAAMtB,KAAK6K,uBACnC3D,OAAQ5F,EAAMtB,KAAKkH,UAIR7F,EAzEiB,SAAAM,GAC9BiC,QAAQC,IAAIlC,GAEZ,IAAMyD,EAAQzD,EAAMuF,OAChBvF,EAAMkJ,uBAAuBtF,UAAUzD,KAAI,SAACyG,EAAM9C,GAChD,IAAM2D,EACJ,4BACE,4BAAK3D,EAAQ,GACb,4BAAK8C,EAAK9F,MACV,6BACA,6BACA,8BAGEqI,EAAYvC,EAAKhG,OAAOT,KAAI,SAAC8G,EAAaF,GAuB9C,MAAO,CArBL,wBAAI1G,IAAG,UAAKyD,EAAQ,EAAb,YAAkBiD,EAAY,IACnC,sCAAQjD,EAAQ,EAAhB,YAAqBiD,EAAY,IACjC,4BAAKH,EAAK9F,MACV,4BAAKmG,EAAYlG,OACjB,4BAAKkG,EAAYmC,aACjB,4BAAKnC,EAAYjG,WAIJiG,EAAYoC,MAAMlJ,KAAI,SAACC,EAAMkJ,GAC5C,OACE,wBAAIjJ,IAAG,UAAKyD,EAAQ,EAAb,YAAkBiD,EAAY,EAA9B,YAAmCuC,IACxC,6BACA,4BAAKlJ,EAAKU,MACV,6BACA,6BACA,4BAAKV,EAAKY,kBAOlB,OACE,2BAAOX,IAAKyD,GACT2D,EACA0B,MAIP,KAEJ,OACE,kBAAC,IAAMnF,SAAP,KACE,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3B,+BACE,4BACE,iCACA,8DACA,8DACA,mJACA,mIAGHX,OCSM/D,G,cAAAA,aAhBS,SAAAC,GACtB,MAAO,CACL4J,SAAU5J,EAAMG,KAChBF,QAASD,EAAMtB,KAAKuB,QACpByE,QAAS1E,EAAMtB,KAAKgG,QACpBmF,SAAU7J,EAAM8J,GAAGD,aAII,SAAAnK,GACzB,MAAO,CACLqK,UAAW,SAAA3K,GAAO,OAAIM,EdpCD,SAAAN,GACvB,OAAO,SAAAM,GACLpB,EACG0L,IAAI,eAAiB5K,GACrBiD,MAAK,SAAAwB,GACJvB,QAAQC,IAAIsB,EAAInF,MAChBgB,EAASjB,EAAWoF,EAAInF,KAAKuL,QAAQrL,MACrCc,EAASb,EAAWgF,EAAInF,KAAKuL,QAAQnL,MACrCY,EAASX,EAAiB8E,EAAInF,KAAKuL,QAAQjL,YAC3CU,EAfC,CACLf,KCjBwC,+BDkBxCuL,mBAauCrG,EAAInF,KAAKwL,wBAE7CzH,OAAM,SAAA3C,GACLJ,EAASU,EAAkBN,EAAMD,ecwBNO,CAAkBhB,KACjD+K,gBAAiB,SAAAlK,GAAO,OAAIP,EdpBD,SAAAO,GAC7B,IAAMM,EAAQ,GACRM,EAAW,GACXE,EAAO,GACPE,EAAS,GAoCf,OAlCA8C,OAAOC,KAAK/D,GAASO,KAAI,SAAAE,GACvB,OAAQT,EAAQS,GAAK/B,MACnB,IAAK,iCACG4B,EAAM6J,QAAQnK,EAAQS,GAAKS,OAAS,GACxCZ,EAAM+E,KAAKrF,EAAQS,GAAKS,MAE1B,MACF,IAAK,kFACGN,EAASuJ,QAAQnK,EAAQS,GAAKS,OAAS,GAC3CN,EAASyE,KAAKrF,EAAQS,GAAKS,MAE7B,MACF,IAAK,6CACGJ,EAAKqJ,QAAQnK,EAAQS,GAAKS,OAAS,GACvCJ,EAAKuE,KAAKrF,EAAQS,GAAKS,MAMvBF,EAAOmJ,QAAQnK,EAAQS,GAAKU,QAAU,GAC1CH,EAAOqE,KAAKrF,EAAQS,GAAKU,UAG7Bb,EAAM2G,OACNrG,EAASqG,OACTnG,EAAKmG,OACLjG,EAAOiG,OAOA,CACLvI,KC/E6B,oBDgF7BuB,MARY,CACZK,MAAOA,EACPM,SAAUA,EACVE,KAAMA,EACNE,OAAQA,IclB6Bb,CAAwBH,QAIlDF,EAxDE,SAAAM,GAaf,OAXA6I,qBAAU,WACR7I,EAAM0J,UAAU1J,EAAMuJ,SAASxK,WAC9B,CAACiB,EAAMwJ,WAGVX,qBAAU,WACJ7I,EAAMJ,SAAW8D,OAAOC,KAAK3D,EAAMJ,SAASgF,OAAS,GACvD5E,EAAM8J,gBAAgB9J,EAAMJ,WAE7B,CAACI,EAAMJ,UAGR,kBAAC,IAAMoE,SAAP,KACE,kBAACgG,EAAA,EAAD,CAAMC,iBAAiB,UAAUnH,GAAG,4BAClC,kBAACoH,EAAA,EAAD,CAAKC,SAAS,MAAMC,MAAM,8CACxB,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAACF,EAAA,EAAD,CAAKC,SAAS,MAAMC,MAAM,wCACxB,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAACF,EAAA,EAAD,CAAKC,SAAS,UAAUC,MAAM,kCAC5B,kBAAC,EAAD,OAEF,kBAACF,EAAA,EAAD,CAAKC,SAAS,YAAYC,MAAM,0DAC9B,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAACF,EAAA,EAAD,CAAKC,SAAS,qBAAqBC,MAAM,+FACvC,kBAAC,EAAD,SAGFpK,EAAMuJ,SAASc,UAAY,kBAAC,IAAD,CAAUC,GAAG,WCWjC5K,G,OAAAA,aAZS,SAAAC,GACtB,MAAO,MAKkB,SAAAN,GACzB,MAAO,CACLkL,MAAO,SAACpJ,GAAD,OAAY9B,EblBF,SAAC8B,GACpB,OAAO,SAAA9B,GACLA,EAtCK,CACLf,KDNwB,iBC4CxB6C,EAAOqJ,mBAAoB,EAC3BvM,IAAM8D,KAAK,oHAAqHZ,GAC/Ha,MAAK,SAAAxC,GACJ,IAAMiL,EAAiB,IAAI/I,MAAK,IAAIA,MAAOgJ,UAAsC,IAA1BlL,EAASnB,KAAKsM,WACrE1L,aAAa2L,QAAQ,QAASpL,EAASnB,KAAKU,SAC5CE,aAAa2L,QAAQ,SAAUpL,EAASnB,KAAKwM,SAC7C5L,aAAa2L,QAAQ,iBAAkBH,GAEvCpL,EAAST,EAAaY,EAASnB,KAAKU,QAASS,EAASnB,KAAKwM,UAC3DxL,EAASF,EAAmBK,EAASnB,KAAKsM,eAE3CvI,OAAM,SAAA3C,GACLwC,QAAQC,IAAIzC,EAAMD,UAClBH,EAASU,EAAkBN,EAAMD,WACjCH,EAtBG,CACLf,KDjC8B,2BcuDFyB,CAAcoB,QAI/BzB,EAvDF,SAACM,GAEZ,OACE,kBAACuC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,yBAAKC,UAAU,YACb,kBAAC,IAAD,CACA7B,cAAe,CACbiK,MAAO,GACPC,SAAU,IAEZzJ,SAAU,SAACH,EAAD,GAAgC,IAArBI,EAAoB,EAApBA,cACnBvB,EAAMuK,MAAMpJ,GACZI,GAAc,MAGf,gBAAGc,EAAH,EAAGA,aAAH,EAAiBlB,OAAjB,EAAyBmB,cAAzB,OACC,kBAAC,IAAD,KACM,kBAAC,IAAD,CACEhE,KAAK,QACLwC,KAAK,QACLkK,YAAY,UAGd,kBAAC,IAAD,CACE1M,KAAK,WACLwC,KAAK,WACLkK,YAAY,aAElB,4BAAQ1M,KAAK,SAASyE,SAAUV,GAAhC,sB,iDCDD3C,I,OAAAA,aAZS,SAAAC,GACtB,MAAO,CACLsL,UAAWtL,EAAMG,KAAKuK,aAIC,SAAAhL,GACzB,MAAO,CACLL,OAAQ,kBAAMK,EAASU,SAIZL,EA5BI,SAAAM,GAEjB,OACE,kBAACkL,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,QACxB,kBAAC,IAAD,CAASd,GAAG,IAAIe,OAAK,GACnB,kBAACH,EAAA,EAAOI,MAAR,KAAc,kBAACC,EAAA,EAAD,CAAOC,IAAKC,OAA1B,MAEF,kBAACC,GAAA,EAAD,CAAKhJ,UAAU,WACb,kBAAC,IAAD,CAASA,UAAU,WAAW4H,GAAG,IAAIe,OAAK,GAA1C,QACCrL,EAAMiL,WAAa,kBAAC,IAAD,CAASvI,UAAU,WAAW4H,GAAG,YAAYe,OAAK,GAAlD,aACnBrL,EAAMiL,WAAa,4BAAQvI,UAAU,SAASqB,QAAS/D,EAAMhB,QAA1C,iB,UCYb2M,GA5BY,SAAA3L,GACzB,OACE,kBAAC,KAAD,CACE3B,KAAM,CACJ,CAACuN,EAAG,EAAGC,EAAG7L,EAAM8L,UAAUvN,IAAKwN,GAAI,EAAGC,MAAO,6CAAWC,YAAajM,EAAM8L,UAAUvN,KACrF,CAACqN,EAAG,EAAGC,EAAG7L,EAAM8L,UAAUrN,IAAKsN,GAAI,EAAGC,MAAO,uCAAUC,YAAajM,EAAM8L,UAAUrN,KACpF,CAACmN,EAAG,EAAGC,EAAG7L,EAAM8L,UAAUrN,IAAKsN,GAAI/L,EAAM8L,UAAUvN,IAAKyN,MAAO,mDAAYC,YAAajM,EAAM8L,UAAUI,SAE1GC,OAAQ,CACN,CACE7I,OAAQ,OACR8I,cAAe,CACbrI,QAAS,WACP,MAAO,CAAC,CACNT,OAAQ,SACR+I,SAAU,SAACrM,GACT,OAAOA,EAAMsM,OAAN,UAAkBtM,EAAMuM,MAAMN,YAAYjJ,QAAQ,GAAlD,wBACL,KAAO,CAAEsJ,KAAK,GAAD,OAAKtM,EAAMuM,MAAMN,YAAYjJ,QAAQ,GAArC,mCC0DlBtD,I,OAAAA,aAhBS,SAAAC,GACtB,MAAO,CACL8F,SAAU9F,EAAM+F,OAAOD,SACvBE,SAAUhG,EAAM+F,OAAOC,SACvB6G,gBAAiB7M,EAAM+F,OAAO8G,gBAC9BC,UAAW9M,EAAM+F,OAAO+G,cAID,SAAApN,GACzB,MAAO,CACLqN,gBAAiB,SAACjH,EAAUE,GAAX,OAAwBtG,Ef6Md,SAACoG,EAAUE,GACxC,IAAM6G,EAAkB,CACtBjO,IAAK,CACHqI,KAAM,EACNoB,QAAS,EACTzJ,IAAK,GAEPE,IAAK,CACHmI,KAAM,EACNoB,QAAS,IAiCb,OA9BIvC,GAAY/B,OAAOC,KAAK8B,GAAUb,OAAS,GAE3ClB,OAAOC,KAAK8B,EAASmB,MAAMhC,OAAS,GACpClB,OAAOC,KAAK8B,EAASuC,SAASpD,OAAS,GACvClB,OAAOC,KAAK8B,EAASlH,KAAKqG,OAAS,GAEnClB,OAAOC,KAAK8B,GAAUtF,KAAI,SAAC7B,GACzBoF,OAAOC,KAAK8B,EAASnH,IAAO6B,KAAI,SAACC,GAC/BqF,EAASnH,GAAM8B,GAAMD,KAAI,SAACwM,GACxBH,EAAgBjO,IAAID,IAASqO,EAAY1L,oBAO/C0E,GAAYjC,OAAOC,KAAKgC,GAAUf,OAAS,GAE3ClB,OAAOC,KAAKgC,EAASiB,MAAMhC,OAAS,GACpClB,OAAOC,KAAKgC,EAASqC,SAASpD,OAAS,GAEvClB,OAAOC,KAAKgC,GAAUxF,KAAI,SAAC7B,GACzBoF,OAAOC,KAAKgC,EAASrH,IAAO6B,KAAI,SAACC,GAC/BuF,EAASrH,GAAM8B,GAAMD,KAAI,SAACwM,GACxBH,EAAgB/N,IAAIH,IAASqO,EAAY1L,oBAM5C,CACL3C,KFlT6B,oBEmT7BkO,gBAAiBA,GezPiCzM,CAAwB0F,EAAUE,KACpFiH,kBAAmB,SAACnH,EAAUE,GAAX,OAAwBtG,Ef4Pd,SAACoG,EAAUE,GAC1C,IAAMkH,EAAa,KACdlH,EAASiB,KADK,GAEdjB,EAASqC,SAER8E,EAAa,KACdrH,EAASmB,KADK,GAEdnB,EAASuC,SAERyE,EAAY,GAmBlB,OAjBA/I,OAAOC,KAAKkJ,GAAe1M,KAAI,SAAC1B,GAC9BoO,EAAcpO,GAAK0B,KAAI,SAAC4M,EAAYjJ,GAClC,GAAKgJ,EAAcrO,GAEZ,CACL,IAAIuO,GAAiB,EACrBF,EAAcrO,GAAK0B,KAAI,SAAC8M,GAClBA,EAAWlM,QAAUgM,EAAWhM,QAClCiM,GAAiB,MAGjBA,GACFP,EAAUxH,KAAV,yBAAqBxG,GAAQsO,SAT/BN,EAAUxH,KAAV,yBAAqBxG,GAAQ,UAc5B,CACLH,KFnVgC,uBEoVhCmO,UAAWA,Ge1RyC1M,CAA0B0F,EAAUE,QAI7EjG,EAtEI,SAAAM,GAAU,IAAD,EACcuE,oBAAS,GADvB,mBACnB2I,EADmB,KACLC,EADK,OAEgC5I,mBAAS,CACjEhG,IAAK,EACLE,IAAK,EACLyN,OAAQ,IALgB,mBAEnBkB,EAFmB,KAEIC,EAFJ,KAQ1BxE,qBAAU,WACR7I,EAAM0M,gBAAgB1M,EAAMyF,SAAUzF,EAAM2F,UAC5C3F,EAAM4M,kBAAkB5M,EAAMyF,SAAUzF,EAAM2F,UAC9CwH,GAAgB,KACf,CAACnN,EAAMyF,SAAUzF,EAAM2F,WAE1BkD,qBAAU,WACR,GAAIqE,EAAc,CAChB,IAAMI,EAAe,CACnB/O,IAAKyB,EAAMwM,gBAAgBjO,IAAIqI,KAAO5G,EAAMwM,gBAAgBjO,IAAIyJ,QAAUhI,EAAMwM,gBAAgBjO,IAAIA,IACpGE,IAAKuB,EAAMwM,gBAAgB/N,IAAImI,KAAO5G,EAAMwM,gBAAgB/N,IAAIuJ,QAChEkE,OAAQlM,EAAMwM,gBAAgB/N,IAAImI,KAAO5G,EAAMwM,gBAAgB/N,IAAIuJ,SAAWhI,EAAMwM,gBAAgBjO,IAAIqI,KAAO5G,EAAMwM,gBAAgBjO,IAAIyJ,QAAUhI,EAAMwM,gBAAgBjO,IAAIA,MAE/K8O,EAAyBC,MAE1B,CAACJ,IAEJ,IAAM9L,EAAS8L,EACblN,EAAMyM,UAAUtM,KAAI,SAACV,EAAOqE,GAC1B,OACE,uBAAGzD,IAAKyD,GACN,0BAAMpB,UAAU,gBAAgBgB,OAAOC,KAAKlE,GAAO8N,WAAnD,qCAAwE9N,EAAMiE,OAAOC,KAAKlE,IAAQsB,MAAlG,6DAAsHtB,EAAMiE,OAAOC,KAAKlE,IAAQuB,SAAhJ,uGAA8KvB,EAAMiE,OAAOC,KAAKlE,IAAQwB,gBAI5M,KACJ,OACE,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,yBAAKC,UAAU,SACb,kBAAC,GAAD,CAAaoJ,UAAWsB,OAI7BpN,EAAMyM,UAAU7H,OAAS,GACxB,kBAACpC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,8KACCrB,SChDEoM,I,OAJC,kBACd,yBAAK9K,UAAU,UAAf,mB,SCoCahD,I,OAAAA,aAZS,SAAAC,GACtB,MAAO,CACL8N,KAAM9N,EAAM8J,GAAGD,aAIQ,SAAAnK,GACzB,MAAO,CACLqO,UAAW,kBAAMrO,EhB1BZ,CACLf,KHQsB,mBmBqBXoB,EAjCE,SAACM,GACd,OACE,kBAAC2N,GAAA,EAAD,CACAC,cAAY,EACZC,eAAa,EACbC,GAAI9N,EAAMyN,KACVM,QAAS,IAER,SAAApO,GACC,IAAMqO,EAAuB,YAAVrO,EAAsB,eAA2B,WAAVA,EAAqB,iBAAmB,KAClG,OACE,yBACA+C,UAAS,mBAAcsL,GACvBjK,QAAS/D,EAAM0N,mBC4BVhO,I,OAAAA,aAbS,SAAAC,GACtB,MAAO,CACL8N,KAAM9N,EAAM8J,GAAGD,SACf/J,MAAOE,EAAM8J,GAAGhK,UAIO,SAAAJ,GACzB,MAAO,CACLqO,UAAW,kBAAMrO,EjBlCZ,CACLf,KHQsB,mBoB6BXoB,EAxCD,SAAAM,GACZ,OACE,kBAAC2N,GAAA,EAAD,CACEC,cAAY,EACZC,eAAa,EACbC,GAAI9N,EAAMyN,KACVM,QAAS,MAER,SAAApO,GACC,IAAMqO,EAAuB,aAAVrO,EAAuB,YAAwB,YAAVA,EAAsB,cAAgB,KAC9F,OACE,yBAAK+C,UAAS,gBAAWsL,IACvB,sFACE,6BACA,uBAAGtL,UAAU,gBAAgB1C,EAAMP,MAAMwO,QACzC,uBAAGvL,UAAU,gBAAgB1C,EAAMP,MAAMyO,aAE3C,4BAAQxL,UAAU,SAASqB,QAAS/D,EAAM0N,WACxC,kBAAC,IAAD,CAAShL,UAAU,WAAW4H,GAAG,IAAIe,OAAK,GAA1C,+EC0BC3L,I,OAAAA,aAdS,SAAAC,GACtB,MAAO,CACL4J,SAAU5J,EAAMG,KAChB0J,SAAU7J,EAAM8J,GAAGD,SACnB/J,MAAOE,EAAM8J,GAAGhK,UAIO,SAAAJ,GACzB,MAAO,CACL8O,eAAgB,kBAAM9O,GpBgBjB,SAAAA,GACL,IAAMR,EAAQI,aAAamP,QAAQ,SACnC,GAAKvP,EAEE,CACL,IAAM4L,EAAiB,IAAI/I,KAAKzC,aAAamP,QAAQ,mBACrD,GAAI3D,GAAkB,IAAI/I,KACxBrC,EAASL,SACJ,CACL,IAAMF,EAASG,aAAamP,QAAQ,UACpC/O,EAAST,EAAcC,EAAOC,IAC9BO,EAASF,GAAoBsL,EAAeC,WAAY,IAAIhJ,MAAOgJ,WAAW,YARhFrL,EAASL,YoBfAU,EAtCH,SAAAM,GAMV,OALA6I,qBAAU,WACR7I,EAAMmO,mBACL,IAID,kBAAC,IAAMnK,SAAP,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAUyJ,KAAMzN,EAAMwJ,WACtB,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6E,KAAK,aAAa,kBAAC,EAAD,OACzB,kBAAC,IAAD,CAAOA,KAAK,MACRrO,EAAMuJ,SAASc,WAAarK,EAAMuJ,SAAS+E,SAAW,kBAAC,EAAD,MACvDtO,EAAMuJ,SAAS+E,SAAW,kBAAC,GAAD,MAC1BtO,EAAMuJ,SAASc,WAAarK,EAAMuJ,SAAS+E,SAAW,kBAAC,GAAD,QAG1DtO,EAAMuJ,SAASc,UAAY,kBAAC,IAAD,CAAUC,GAAG,mBCrB3BiE,QACW,cAA7B9H,OAAOC,SAAS8H,UAEe,UAA7B/H,OAAOC,SAAS8H,UAEhB/H,OAAOC,SAAS8H,SAASC,MACvB,2D,6jBChBN,IAAMC,GAAe,CACnB9O,QAAS,GACTyE,QAAS,GACTC,cAAe,GACf4E,uBAAwB,GACxBrJ,MAAO,CACLK,MAAO,GACPM,SAAU,GACVE,KAAM,GACNE,OAAQ,IAEV2E,QAAQ,GAuCKoJ,GApCC,WAAmC,IAAlChP,EAAiC,uDAAzB+O,GAAcE,EAAW,uCAChD,OAAQA,EAAOtQ,MACb,IvBXwB,euBYtB,OAAO,MACFqB,EADL,CAEEC,QAASgP,EAAOrQ,IAChBgH,QAAQ,IAEZ,IvBhBwB,euBiBtB,OAAO,MACF5F,EADL,CAEE0E,QAASuK,EAAOnQ,IAChB8G,QAAQ,IAEZ,IvBrB8B,qBuBsB5B,OAAO,MACF5F,EADL,CAEE2E,cAAesK,EAAOjQ,UACtB4G,QAAQ,IAEZ,IvB1BwC,+BuB2BtC,OAAO,MACF5F,EADL,CAEEuJ,uBAAwB0F,EAAO/E,mBAC/BtE,QAAQ,IAEZ,IvB/B6B,oBuBgC3B,OAAO,MACF5F,EADL,CAEEE,MAAO+O,EAAO/O,QAElB,QACE,OAAOF,I,6jBC9Cb,IAAM+O,GAAe,CACnB3P,QAASE,aAAamP,QAAQ,SAC9BtP,OAAQG,aAAamP,QAAQ,UAC7B/D,UAAU,EACViE,SAAS,GAmCIK,GAhCC,WAAmC,IAAlChP,EAAiC,uDAAzB+O,GAAcE,EAAW,uCAChD,OAAQA,EAAOtQ,MACb,IxBXwB,ewBYtB,OAAO,MACFqB,EADL,CAEE2O,SAAS,IAEb,IxBb0B,iBwBcxB,OAAO,MACF3O,EADL,CAEEZ,QAAS6P,EAAO7P,QAChBD,OAAQ8P,EAAO9P,OACfuL,UAAU,EACViE,SAAS,IAEb,IxBtBmB,UwBuBjB,OAAO,MACF3O,EADL,CAEEZ,QAAS,KACTD,OAAQ,KACRuL,UAAU,IAEd,IxB3B8B,qBwB4B5B,OAAO,MACF1K,EADL,CAEE2O,SAAS,IAEb,QACE,OAAO3O,I,6jBCnCb,IAAM+O,GAAe,CACnBjJ,SAAU,GACVE,SAAU,GACV6G,gBAAiB,GACjBC,UAAW,GACXlH,QAAQ,GAgCKoJ,GA7BC,WAAmC,IAAlChP,EAAiC,uDAAzB+O,GAAcE,EAAW,uCAChD,OAAQA,EAAOtQ,MACb,IzBC4B,mByBA1B,OAAO,MACFqB,EADL,CAEE8F,SAAUmJ,EAAOnJ,SACjBF,QAAQ,IAEZ,IzBJ4B,mByBK1B,OAAO,MACF5F,EADL,CAEEgG,SAAUiJ,EAAOjJ,SACjBJ,QAAQ,IAEZ,IzBT6B,oByBU3B,OAAO,MACF5F,EADL,CAEE6M,gBAAiBoC,EAAOpC,kBAE5B,IzBbgC,uByBc9B,OAAO,MACF7M,EADL,CAEE8M,UAAWmC,EAAOnC,YAEtB,QACE,OAAO9M,I,6jBCjCb,IAAM+O,GAAe,CACnBlF,UAAU,EACV/J,MAAO,IAqBMkP,GAlBC,WAAmC,IAAlChP,EAAiC,uDAAzB+O,GAAcE,EAAW,uCAChD,OAAQA,EAAOtQ,MACb,I1BSsB,a0BRpB,OAAO,MACFqB,EADL,CAEE6J,UAAU,EACV/J,MAAOmP,EAAOnP,QAElB,I1BIsB,a0BHpB,OAAO,MACFE,EADL,CAEE6J,UAAU,IAEd,QACE,OAAO7J,ICNPkP,GAGQC,IAERC,GAAcC,YAAgB,CAClC3Q,KAAM4Q,GACNnP,KAAMoP,GACNxJ,OAAQyJ,GACR1F,GAAI2F,KAGAC,GAAQC,YACZP,GACAF,GAAiBU,YAAgBC,OAG7BC,GACJ,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAAC,IAAD,CAAeK,SAAS,eACtB,kBAAC,GAAD,QAKNC,IAAS5K,OAAO0K,GAAKG,SAASC,eAAe,SLyFvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhO,MAAK,SAAAiO,GACjCA,EAAaC,kB","file":"static/js/main.1f2617b0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.edfb4b75.jpg\";","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://sena-totem.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nexport const setDataExp = data => {\r\n  return {\r\n    type: actionTypes.SET_DATA_EXP,\r\n    exp: data\r\n  };\r\n};\r\n\r\nexport const setDataInc = data => {\r\n  return {\r\n    type: actionTypes.SET_DATA_INC,\r\n    inc: data\r\n  };\r\n};\r\n\r\nexport const setDataComplects = data => {\r\n  return {\r\n    type: actionTypes.SET_DATA_COMPLECTS,\r\n    complects: data\r\n  };\r\n};\r\n\r\nexport const setDataAvailableComplects = data => {\r\n  return {\r\n    type: actionTypes.SET_DATA_AVAILABLE_COMPLECTS,\r\n    availableComplects: data\r\n  };\r\n};\r\n\r\nexport const getDataEI = idToken => {\r\n  return dispatch => {\r\n    axios\r\n      .get(\"/.json?auth=\" + idToken)\r\n      .then(res => {\r\n        console.log(res.data);\r\n        dispatch(setDataExp(res.data.balance.exp));\r\n        dispatch(setDataInc(res.data.balance.inc));\r\n        dispatch(setDataComplects(res.data.balance.complects));\r\n        dispatch(setDataAvailableComplects(res.data.availableComplects));\r\n      })\r\n      .catch(error => {\r\n        dispatch(actions.showModal(error.response));\r\n      });\r\n  };\r\n};\r\n\r\nexport const createFormLists = expData => {\r\n  const wares = [];\r\n  const subwares = [];\r\n  const exps = [];\r\n  const colors = [];\r\n\r\n  Object.keys(expData).map(key => {\r\n    switch (expData[key].type) {\r\n      case \"Товар\":\r\n        if (!(wares.indexOf(expData[key].name) > -1)) {\r\n          wares.push(expData[key].name);\r\n        }\r\n        break;\r\n      case \"Супутній товар\":\r\n        if (!(subwares.indexOf(expData[key].name) > -1)) {\r\n          subwares.push(expData[key].name);\r\n        }\r\n        break;\r\n      case \"Витрата\":\r\n        if (!(exps.indexOf(expData[key].name) > -1)) {\r\n          exps.push(expData[key].name);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if (!(colors.indexOf(expData[key].color) > -1)) {\r\n      colors.push(expData[key].color);\r\n    }\r\n  });\r\n  wares.sort();\r\n  subwares.sort();\r\n  exps.sort();\r\n  colors.sort();\r\n  const lists = {\r\n    wares: wares,\r\n    subwares: subwares,\r\n    exps: exps,\r\n    colors: colors\r\n  };\r\n  return {\r\n    type: actionTypes.CREATE_FORM_LISTS,\r\n    lists: lists\r\n  };\r\n};\r\n","export const LOG_IN_START = \"LOG_IN_START\";\r\nexport const LOG_IN = \"LOG_IN\";\r\nexport const LOG_OUT = \"LOG_OUT\";\r\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\r\nexport const LOG_IN_LOADING_OFF = \"LOG_IN_LOADING_OFF\";\r\n\r\nexport const GET_DATA_E_I = \"GET_DATA_E_I\";\r\nexport const SET_DATA_EXP = \"SET_DATA_EXP\";\r\nexport const SET_DATA_INC = \"SET_DATA_INC\";\r\nexport const SET_DATA_COMPLECTS = \"SET_DATA_COMPLECTS\";\r\nexport const SET_DATA_AVAILABLE_COMPLECTS = \"SET_DATA_AVAILABLE_COMPLECTS\";\r\nexport const CREATE_FORM_LISTS = \"CREATE_FORM_LISTS\";\r\n\r\nexport const CREATE_EXP_TABLE = \"CREATE_EXP_TABLE\";\r\nexport const CREATE_INC_TABLE = \"CREATE_INC_TABLE\";\r\nexport const COUNT_TOTAL_STATS = \"COUNT_TOTAL_STATS\";\r\nexport const CHECK_FOR_INC_ERRORS = \"CHECK_FOR_INC_ERRORS\";\r\n\r\nexport const SHOW_MODAL = \"SHOW_MODAL\";\r\nexport const HIDE_MODAL = \"HIDE_MODAL\";\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nexport const logInStart = () => {\r\n  return {\r\n    type: actionTypes.LOG_IN_START\r\n  }\r\n}\r\n\r\nexport const loginSuccess = (token, userId) => {\r\n  return {\r\n    type: actionTypes.LOG_IN_SUCCESS,\r\n    idToken: token,\r\n    userId: userId\r\n  }\r\n}\r\n\r\nexport const logOut = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('expirationDate');\r\n  localStorage.removeItem('userId');\r\n  return {\r\n    type: actionTypes.LOG_OUT\r\n  };\r\n};\r\n\r\nexport const checkLogoutTimeout = (expirationTime) => {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(logOut());\r\n    }, expirationTime * 1000)\r\n  };\r\n};\r\n\r\nexport const logInLoadingOff = () => {\r\n  return {\r\n    type:actionTypes.LOG_IN_LOADING_OFF\r\n  }\r\n}\r\n\r\nexport const logIn = (values) => {\r\n  return dispatch => {\r\n    dispatch(logInStart());\r\n    values.returnSecureToken = true;\r\n    axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDFX9LAlOi-6ONPEXG3hw22qJT5aIo91Z4', values)\r\n    .then(response => {\r\n      const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n      localStorage.setItem('token', response.data.idToken);\r\n      localStorage.setItem('userId', response.data.localId);\r\n      localStorage.setItem('expirationDate', expirationDate);\r\n      \r\n      dispatch(loginSuccess(response.data.idToken, response.data.localId));\r\n      dispatch(checkLogoutTimeout(response.data.expiresIn));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.response);\r\n      dispatch(actions.showModal(error.response));\r\n      dispatch(logInLoadingOff());\r\n    })\r\n  };\r\n}\r\n\r\nexport const authCheckState = () => {\r\n  return dispatch => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      dispatch(logOut());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(logOut());\r\n      } else {\r\n        const userId = localStorage.getItem('userId');\r\n        dispatch(loginSuccess (token, userId));\r\n        dispatch(checkLogoutTimeout((expirationDate.getTime() - new Date().getTime())/1000));\r\n      };\r\n    };\r\n  };\r\n};","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const createExpTable = (expData) => {\r\n  const tableExpWares = {};\r\n  const tableExpSubWares = {};\r\n  const tableExpExp = {};\r\n  const expTable = {};\r\n  if (expData) {\r\n    // Iterating through expences\r\n    Object.keys(expData).map((expKey, index) => {\r\n      //Checking if is a ware\r\n      if (expData[expKey].type === \"Товар\") {\r\n        //Checking if ware is in a table\r\n        if (tableExpWares.hasOwnProperty(expData[expKey].name)) {\r\n          let isColor = false;\r\n          //Checking if ware color in a table\r\n          for (let i = 0; i < tableExpWares[expData[expKey].name].length; i++) {\r\n            //Adding to table if ware color is present\r\n            if (\r\n              expData[expKey].color ===\r\n              tableExpWares[expData[expKey].name][i].color\r\n            ) {\r\n              tableExpWares[expData[expKey].name][i].quantity +=\r\n                expData[expKey].quantity;\r\n              tableExpWares[expData[expKey].name][i].totalPrice +=\r\n                expData[expKey].totalPrice;\r\n              tableExpWares[expData[expKey].name][i].price =\r\n                tableExpWares[expData[expKey].name][i].totalPrice /\r\n                tableExpWares[expData[expKey].name][i].quantity;\r\n              isColor = true;\r\n            }\r\n          }\r\n          //Adding to table if ware color is new\r\n          if (!isColor) {\r\n            const ware = {};\r\n            ware.color = expData[expKey].color;\r\n            ware.quantity = expData[expKey].quantity;\r\n            ware.totalPrice = expData[expKey].totalPrice;\r\n            ware.price = expData[expKey].totalPrice / expData[expKey].quantity;\r\n            tableExpWares[expData[expKey].name].push(ware);\r\n            if (ware.archived) {\r\n              tableExpWares[expData[expKey].name].archived = true;\r\n            }\r\n          }\r\n        }\r\n        //Adding to table if ware is new\r\n        else {\r\n          tableExpWares[expData[expKey].name] = [];\r\n          const ware = {};\r\n          ware.color = expData[expKey].color;\r\n          ware.quantity = expData[expKey].quantity;\r\n          ware.totalPrice = expData[expKey].totalPrice;\r\n          ware.price = expData[expKey].totalPrice / expData[expKey].quantity;\r\n          tableExpWares[expData[expKey].name].push(ware);\r\n          if (ware.archived) {\r\n            tableExpWares[expData[expKey].name].archived = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      //Checking if is a subware\r\n      if (expData[expKey].type === \"Супутній товар\") {\r\n        //Checking if ware is in a table\r\n        if (tableExpSubWares.hasOwnProperty(expData[expKey].name)) {\r\n          let isColor = false;\r\n          //Checking if ware color in a table\r\n          for (\r\n            let i = 0;\r\n            i < tableExpSubWares[expData[expKey].name].length;\r\n            i++\r\n          ) {\r\n            //Adding to table if ware color is present\r\n            if (\r\n              expData[expKey].color ===\r\n              tableExpSubWares[expData[expKey].name][i].color\r\n            ) {\r\n              tableExpSubWares[expData[expKey].name][i].quantity +=\r\n                expData[expKey].quantity;\r\n              tableExpSubWares[expData[expKey].name][i].totalPrice +=\r\n                expData[expKey].totalPrice;\r\n              tableExpSubWares[expData[expKey].name][i].price =\r\n                tableExpSubWares[expData[expKey].name][i].totalPrice /\r\n                tableExpSubWares[expData[expKey].name][i].quantity;\r\n              isColor = true;\r\n            }\r\n          }\r\n          //Adding to table if ware color is new\r\n          if (!isColor) {\r\n            const ware = {};\r\n            ware.color = expData[expKey].color;\r\n            ware.quantity = expData[expKey].quantity;\r\n            ware.totalPrice = expData[expKey].totalPrice;\r\n            ware.price = expData[expKey].totalPrice / expData[expKey].quantity;\r\n            tableExpSubWares[expData[expKey].name].push(ware);\r\n          }\r\n        }\r\n        //Adding to table if ware is new\r\n        else {\r\n          tableExpSubWares[expData[expKey].name] = [];\r\n          const ware = {};\r\n          ware.color = expData[expKey].color;\r\n          ware.quantity = expData[expKey].quantity;\r\n          ware.totalPrice = expData[expKey].totalPrice;\r\n          ware.price = expData[expKey].totalPrice / expData[expKey].quantity;\r\n          tableExpSubWares[expData[expKey].name].push(ware);\r\n        }\r\n      }\r\n\r\n      //Checking if is an expence\r\n      if (expData[expKey].type === \"Витрата\") {\r\n        //Checking if ware is in a table\r\n        if (tableExpExp.hasOwnProperty(expData[expKey].name)) {\r\n          let isColor = false;\r\n          //Checking if ware color in a table\r\n          for (let i = 0; i < tableExpExp[expData[expKey].name].length; i++) {\r\n            //Adding to table if ware color is present\r\n            if (\r\n              expData[expKey].color ===\r\n              tableExpExp[expData[expKey].name][i].color\r\n            ) {\r\n              tableExpExp[expData[expKey].name][i].quantity +=\r\n                expData[expKey].quantity;\r\n              tableExpExp[expData[expKey].name][i].totalPrice +=\r\n                expData[expKey].totalPrice;\r\n              tableExpExp[expData[expKey].name][i].price =\r\n                tableExpExp[expData[expKey].name][i].totalPrice /\r\n                tableExpExp[expData[expKey].name][i].quantity;\r\n              isColor = true;\r\n            }\r\n          }\r\n          //Adding to table if ware color is new\r\n          if (!isColor) {\r\n            const ware = {};\r\n            ware.color = expData[expKey].color;\r\n            ware.quantity = expData[expKey].quantity;\r\n            ware.totalPrice = expData[expKey].totalPrice;\r\n            ware.price = expData[expKey].totalPrice / expData[expKey].quantity;\r\n            tableExpExp[expData[expKey].name].push(ware);\r\n          }\r\n        }\r\n        //Adding to table if ware is new\r\n        else {\r\n          tableExpExp[expData[expKey].name] = [];\r\n          const ware = {};\r\n          ware.color = expData[expKey].color;\r\n          ware.quantity = expData[expKey].quantity;\r\n          ware.totalPrice = expData[expKey].totalPrice;\r\n          ware.price = expData[expKey].totalPrice / expData[expKey].quantity;\r\n          tableExpExp[expData[expKey].name].push(ware);\r\n        }\r\n      }\r\n    });\r\n    expTable.ware = tableExpWares;\r\n    expTable.subware = tableExpSubWares;\r\n    expTable.exp = tableExpExp;\r\n  }\r\n  return {\r\n    type: actionTypes.CREATE_EXP_TABLE,\r\n    expTable: expTable,\r\n  };\r\n};\r\n\r\nexport const createIncTable = (incData) => {\r\n  const tableIncWares = {};\r\n  const tableIncSubWares = {};\r\n  const incTable = {};\r\n  //Check if incData received\r\n  if (incData) {\r\n    //Iteration through income instances\r\n    Object.keys(incData).map((incKey, index) => {\r\n      //Maping each income item\r\n      incData[incKey].income.map((incItem, incIndex) => {\r\n        //Creating object to push into income arrays\r\n        const item = { type: incItem.type };\r\n        const totalPrice = incIndex === 0 ? incData[incKey].price : 0;\r\n        item[incItem.name] = {\r\n          color: incItem.color,\r\n          quantity: incItem.quantity,\r\n          totalPrice: totalPrice,\r\n          price: incItem.quantity / totalPrice,\r\n        };\r\n        //Checking if object is ware\r\n        if (item.type === \"Товар\") {\r\n          //Checking if ware already exists\r\n          if (tableIncWares[incData[incKey].income[incIndex].name]) {\r\n            let isColor = false;\r\n            //Iterating through color of each ware\r\n            for (\r\n              let i = 0;\r\n              i < tableIncWares[incData[incKey].income[incIndex].name].length;\r\n              i++\r\n            ) {\r\n              //Checking if color exists\r\n              if (\r\n                tableIncWares[incData[incKey].income[incIndex].name][i]\r\n                  .color === item[incItem.name].color\r\n              ) {\r\n                //Amending item if color exist\r\n                tableIncWares[incData[incKey].income[incIndex].name][\r\n                  i\r\n                ].quantity += item[incItem.name].quantity;\r\n                tableIncWares[incData[incKey].income[incIndex].name][\r\n                  i\r\n                ].totalPrice += item[incItem.name].totalPrice;\r\n                tableIncWares[incData[incKey].income[incIndex].name][i].price =\r\n                  tableIncWares[incData[incKey].income[incIndex].name][i]\r\n                    .totalPrice /\r\n                  tableIncWares[incData[incKey].income[incIndex].name][i]\r\n                    .quantity;\r\n                isColor = true;\r\n              }\r\n            }\r\n            //Adding array item if no such color\r\n            if (!isColor) {\r\n              tableIncWares[incData[incKey].income[incIndex].name].push(\r\n                item[incItem.name]\r\n              );\r\n            }\r\n            //Adding object if no such ware\r\n          } else {\r\n            tableIncWares[incData[incKey].income[incIndex].name] = [];\r\n            tableIncWares[incData[incKey].income[incIndex].name].push(\r\n              item[incItem.name]\r\n            );\r\n          }\r\n        } else if (item.type === \"Супутній товар\") {\r\n          if (tableIncSubWares[incData[incKey].income[incIndex].name]) {\r\n            let isColor = false;\r\n            for (\r\n              let i = 0;\r\n              i <\r\n              tableIncSubWares[incData[incKey].income[incIndex].name].length;\r\n              i++\r\n            ) {\r\n              if (\r\n                tableIncSubWares[incData[incKey].income[incIndex].name][i]\r\n                  .color === item[incItem.name].color\r\n              ) {\r\n                tableIncSubWares[incData[incKey].income[incIndex].name][\r\n                  i\r\n                ].quantity += item[incItem.name].quantity;\r\n                tableIncSubWares[incData[incKey].income[incIndex].name][\r\n                  i\r\n                ].totalPrice += item[incItem.name].totalPrice;\r\n                tableIncSubWares[incData[incKey].income[incIndex].name][\r\n                  i\r\n                ].price =\r\n                  tableIncSubWares[incData[incKey].income[incIndex].name][i]\r\n                    .totalPrice /\r\n                  tableIncSubWares[incData[incKey].income[incIndex].name][i]\r\n                    .quantity;\r\n                isColor = true;\r\n              }\r\n            }\r\n            if (!isColor) {\r\n              tableIncSubWares[incData[incKey].income[incIndex].name].push(\r\n                item[incItem.name]\r\n              );\r\n            }\r\n          } else {\r\n            tableIncSubWares[incData[incKey].income[incIndex].name] = [];\r\n            tableIncSubWares[incData[incKey].income[incIndex].name].push(\r\n              item[incItem.name]\r\n            );\r\n          }\r\n        }\r\n      });\r\n    });\r\n    incTable.ware = tableIncWares;\r\n    incTable.subware = tableIncSubWares;\r\n  }\r\n\r\n  return {\r\n    type: actionTypes.CREATE_INC_TABLE,\r\n    incTable: incTable,\r\n  };\r\n};\r\n\r\nexport const countTotalStats = (expTable, incTable) => {\r\n  const totalStatsTable = {\r\n    exp: {\r\n      ware: 0,\r\n      subware: 0,\r\n      exp: 0,\r\n    },\r\n    inc: {\r\n      ware: 0,\r\n      subware: 0,\r\n    },\r\n  };\r\n  if (expTable && Object.keys(expTable).length > 0) {\r\n    if (\r\n      Object.keys(expTable.ware).length > 0 &&\r\n      Object.keys(expTable.subware).length > 0 &&\r\n      Object.keys(expTable.exp).length > 0\r\n    ) {\r\n      Object.keys(expTable).map((type) => {\r\n        Object.keys(expTable[type]).map((item) => {\r\n          expTable[type][item].map((coloredItem) => {\r\n            totalStatsTable.exp[type] += coloredItem.totalPrice;\r\n          });\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  if (incTable && Object.keys(incTable).length > 0) {\r\n    if (\r\n      Object.keys(incTable.ware).length > 0 &&\r\n      Object.keys(incTable.subware).length > 0\r\n    ) {\r\n      Object.keys(incTable).map((type) => {\r\n        Object.keys(incTable[type]).map((item) => {\r\n          incTable[type][item].map((coloredItem) => {\r\n            totalStatsTable.inc[type] += coloredItem.totalPrice;\r\n          });\r\n        });\r\n      });\r\n    }\r\n  }\r\n  return {\r\n    type: actionTypes.COUNT_TOTAL_STATS,\r\n    totalStatsTable: totalStatsTable,\r\n  };\r\n};\r\n\r\nexport const checkForIncErrors = (expTable, incTable) => {\r\n  const totalIncTable = {\r\n    ...incTable.ware,\r\n    ...incTable.subware,\r\n  };\r\n  const totalExpTable = {\r\n    ...expTable.ware,\r\n    ...expTable.subware,\r\n  };\r\n  const incErrors = [];\r\n\r\n  Object.keys(totalIncTable).map((inc) => {\r\n    totalIncTable[inc].map((coloredInc, index) => {\r\n      if (!totalExpTable[inc]) {\r\n        incErrors.push({ [`${inc}`]: 0 });\r\n      } else {\r\n        let expNotIncluded = true;\r\n        totalExpTable[inc].map((coloredExp) => {\r\n          if (coloredExp.color === coloredInc.color) {\r\n            expNotIncluded = false;\r\n          }\r\n        });\r\n        if (expNotIncluded) {\r\n          incErrors.push({ [`${inc}`]: coloredInc });\r\n        }\r\n      }\r\n    });\r\n  });\r\n  return {\r\n    type: actionTypes.CHECK_FOR_INC_ERRORS,\r\n    incErrors: incErrors,\r\n  };\r\n};\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport const showModal = (response) => {\r\n  return {\r\n    type: actionTypes.SHOW_MODAL,\r\n    error: response\r\n  };\r\n};\r\n\r\nexport const hideModal = () => {\r\n  return {\r\n    type: actionTypes.HIDE_MODAL\r\n  }\r\n}","import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport axios from \"../../axios\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nconst ExpForm = props => {\r\n  const waresList = props.lists.wares.map(item => {\r\n    return <option key={item} value={item} />;\r\n  });\r\n\r\n  const subwaresList = props.lists.subwares.map(item => {\r\n    return <option key={item} value={item} />;\r\n  });\r\n\r\n  const expsList = props.lists.exps.map(item => {\r\n    return <option key={item} value={item} />;\r\n  });\r\n\r\n  const colorsList = props.lists.colors.map(item => {\r\n    return <option key={item} value={item} />;\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        type: \"\",\r\n        name: \"\",\r\n        color: \"\",\r\n        quantity: \"\",\r\n        totalPrice: \"\"\r\n      }}\r\n      validate={values => {\r\n        let errors = {};\r\n        if (!values.type) {\r\n          errors.type = \"Необхідно обрати категорію!\";\r\n        }\r\n        if (!values.name) {\r\n          errors.name = \"Необхідно внести назву!\";\r\n        }\r\n        if (\r\n          isNaN(values.quantity) ||\r\n          ((values.quantity === 0 || values.quantity === \"\") &&\r\n            (values.type === \"Товар\" || values.type === \"Супутній товар\"))\r\n        ) {\r\n          errors.quantity = \"Невірна кількість!\";\r\n        }\r\n        if (!values.totalPrice || isNaN(values.totalPrice)) {\r\n          errors.totalPrice = \"Невірна вартість!\";\r\n        }\r\n\r\n        return errors;\r\n      }}\r\n      onSubmit={(values, { setSubmitting, resetForm }, initialValues) => {\r\n        values.time = new Date().toISOString().split(\"T\")[0];\r\n        if (values.color.trim() === \"\") {\r\n          values.color = \"н/з\";\r\n        }\r\n        values.quantity = Number(values.quantity);\r\n        values.totalPrice = Number(values.totalPrice);\r\n        axios\r\n          .post(\"/balance/exp.json?auth=\" + props.idToken, values)\r\n          .then(response => {\r\n            console.log(response);\r\n            setSubmitting(false);\r\n            const newExpData = {\r\n              ...props.expData,\r\n              [response.data.name]: values\r\n            };\r\n            props.setDataExp(newExpData);\r\n            resetForm(initialValues);\r\n          })\r\n          .catch(error => {\r\n            props.showModal(error.response);\r\n          });\r\n      }}\r\n    >\r\n      {({ isSubmitting, values, setFieldValue }) => (\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <Form>\r\n                <Row>\r\n                  <Col>\r\n                    <Field\r\n                      className=\"radioInput\"\r\n                      type=\"radio\"\r\n                      name=\"type\"\r\n                      value=\"Товар\"\r\n                      checked={values.type === \"Товар\"}\r\n                      onChange={() => setFieldValue(\"type\", \"Товар\")}\r\n                    />\r\n                    <label>Товар</label>\r\n                    <Field\r\n                      className=\"radioInput\"\r\n                      type=\"radio\"\r\n                      name=\"type\"\r\n                      value=\"Супутній товар\"\r\n                      checked={values.type === \"Супутній товар\"}\r\n                      onChange={() => setFieldValue(\"type\", \"Супутній товар\")}\r\n                    />\r\n                    <label>Супутній товар</label>\r\n                    <Field\r\n                      className=\"radioInput\"\r\n                      type=\"radio\"\r\n                      name=\"type\"\r\n                      value=\"Витрата\"\r\n                      checked={values.type === \"Витрата\"}\r\n                      onChange={() => setFieldValue(\"type\", \"Витрата\")}\r\n                    />\r\n                    <label>Витрата</label>\r\n                    <span className=\"errorMessage\">\r\n                      <ErrorMessage name=\"type\" />\r\n                    </span>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col>\r\n                    <label>Назва</label>\r\n                    <Field name=\"name\" list=\"name\" />\r\n                    <datalist id=\"name\">\r\n                      {values.type === \"Товар\" && waresList}\r\n                      {values.type === \"Супутній товар\" && subwaresList}\r\n                      {values.type === \"Витрата\" && expsList}\r\n                    </datalist>\r\n                    <span className=\"errorMessage\">\r\n                      <ErrorMessage name=\"name\" />\r\n                    </span>\r\n                    <label>Колір</label>\r\n                    <Field name=\"color\" list=\"color\" />\r\n                    <datalist id=\"color\">{colorsList}</datalist>\r\n\r\n                    <label>Кількість</label>\r\n                    <Field\r\n                      className=\"input-number\"\r\n                      name=\"quantity\"\r\n                      type=\"number\"\r\n                      disabled={values.type === \"Витрата\"}\r\n                    />\r\n                    <span className=\"errorMessage\">\r\n                      <ErrorMessage name=\"quantity\" />\r\n                    </span>\r\n                    <label>Вартість</label>\r\n                    <Field\r\n                      className=\"input-number\"\r\n                      name=\"totalPrice\"\r\n                      type=\"number\"\r\n                    />\r\n                    <span className=\"errorMessage\">\r\n                      <ErrorMessage name=\"totalPrice\" />\r\n                    </span>\r\n                    <label>Ціна за одиницю</label>\r\n                    <Field\r\n                      className=\"input-number\"\r\n                      name=\"price\"\r\n                      value={\r\n                        isNaN(values.totalPrice / values.quantity) ||\r\n                        values.type === \"Витрата\"\r\n                          ? 0\r\n                          : (values.totalPrice / values.quantity).toFixed(2)\r\n                      }\r\n                      onChange={() =>\r\n                        setFieldValue(\r\n                          \"price\",\r\n                          values.totalPrice / values.quantity\r\n                        )\r\n                      }\r\n                      disabled\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs={{ span: 3, offset: 9 }}>\r\n                    <button\r\n                      className=\"submitData\"\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                    >\r\n                      Внести\r\n                    </button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    expData: state.data.expData,\r\n    lists: state.data.lists,\r\n    idToken: state.auth.idToken\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setDataExp: expData => dispatch(actions.setDataExp(expData)),\r\n    showModal: response => dispatch(actions.showModal(response))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ExpForm);\r\n","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport axios from \"../../axios\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nconst ExpTable = props => {\r\n  const deleteRowHandler = event => {\r\n    const id = event.target.id;\r\n    axios\r\n      .delete(\"/balance/exp/\" + id + \".json?auth=\" + props.idToken)\r\n      .then(res => {\r\n        console.log(res);\r\n      })\r\n      .catch(error => {\r\n        props.showModal(error.response);\r\n      });\r\n    const newExpData = {};\r\n    for (const key in props.expData) {\r\n      if (key !== id) {\r\n        newExpData[key] = props.expData[key];\r\n      }\r\n    }\r\n    props.setDataExp(newExpData);\r\n  };\r\n\r\n  const table = !props.expData\r\n    ? null\r\n    : Object.keys(props.expData)\r\n        .reverse()\r\n        .map((expKey, index) => {\r\n          return (\r\n            <tr key={expKey}>\r\n              <td>{index + 1}</td>\r\n              <td>{props.expData[expKey].time}</td>\r\n              <td>{props.expData[expKey].type}</td>\r\n              <td>{props.expData[expKey].name}</td>\r\n              <td>{props.expData[expKey].color}</td>\r\n              <td>{props.expData[expKey].quantity}</td>\r\n              <td>{props.expData[expKey].totalPrice}</td>\r\n              <td>\r\n                {(\r\n                  props.expData[expKey].totalPrice /\r\n                  props.expData[expKey].quantity\r\n                ).toFixed(2)}\r\n              </td>\r\n              <td>\r\n                <button id={expKey} onClick={deleteRowHandler}>\r\n                  x\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          );\r\n        });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Дата</th>\r\n            <th>Тип</th>\r\n            <th>Назва</th>\r\n            <th>Колір</th>\r\n            <th>Кількість</th>\r\n            <th>Вартість</th>\r\n            <th>Ціна за одиницю</th>\r\n            <th>Видалити</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{table}</tbody>\r\n      </Table>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    expData: state.data.expData,\r\n    idToken: state.auth.idToken\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setDataExp: expData => dispatch(actions.setDataExp(expData)),\r\n    showModal: response => dispatch(actions.showModal(response))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ExpTable);\r\n","import React, { useState } from \"react\";\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from \"formik\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"../../axios\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nconst IncForm = props => {\r\n  const [complectErrorMessage, setComplectErrorMessage] = useState(null);\r\n\r\n  const waresList = props.lists.wares.map(item => {\r\n    return (\r\n      <option key={item} value={item}>\r\n        {item}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  const subwaresList = props.lists.subwares.map(item => {\r\n    return (\r\n      <option key={item} value={item}>\r\n        {item}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  const colorsList = props.lists.colors.map(item => {\r\n    return (\r\n      <option key={item} value={item}>\r\n        {item}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  const complectFormHandler = values => {\r\n    if (values.income.length > 0) {\r\n      if (values.income[0].quantity > 0 && values.income[0].color !== \"н/з\") {\r\n        if (\r\n          values.income[0].type === \"Товар\" &&\r\n          values.income.length === 1 &&\r\n          values.income[0].name !== \"\"\r\n        ) {\r\n          setComplectErrorMessage(null);\r\n          let complect = null;\r\n          Object.keys(props.complectsData).map(key => {\r\n            if (props.complectsData[key].name === values.income[0].name) {\r\n              complect = props.complectsData[key].complect;\r\n            }\r\n          });\r\n          complect.map(key => {\r\n            values.income.push({\r\n              type: \"Супутній товар\",\r\n              name: key.name,\r\n              color: key.copyColor ? values.income[0].color : \"н/з\",\r\n              quantity: values.income[0].quantity\r\n            });\r\n          });\r\n          setComplectErrorMessage(<span>Готово!</span>);\r\n        } else {\r\n          setComplectErrorMessage(\r\n            <span className=\"errorMessage\">Не обрано товар!</span>\r\n          );\r\n        }\r\n      } else {\r\n        setComplectErrorMessage(\r\n          <span className=\"errorMessage\">Не вказано кількість або колір!</span>\r\n        );\r\n      }\r\n    } else {\r\n      setComplectErrorMessage(\r\n        <span className=\"errorMessage\">Не обрано товар!</span>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        price: \"\",\r\n        income: [\r\n          {\r\n            type: \"\",\r\n            name: \"\",\r\n            color: \"н/з\",\r\n            quantity: \"\"\r\n          }\r\n        ]\r\n      }}\r\n      validate={values => {\r\n        let errors = {};\r\n        if (!values.price || isNaN(values.price)) {\r\n          errors.price = \"Невірна ціна!\";\r\n        }\r\n        if (values.income.length < 1) {\r\n          errors.income = \"Не внесено товару!\";\r\n        }\r\n        values.income.map((line, index) => {\r\n          if (!values.income[index].type) {\r\n            errors.type = \"Категорія товару не обрана!\";\r\n          }\r\n          if (\r\n            !values.income[index].name ||\r\n            values.income[index].name === \"--Обери назву--\"\r\n          ) {\r\n            errors.name = \"Назва товару не обрана!\";\r\n          }\r\n          if (\r\n            isNaN(values.income[index].quantity) ||\r\n            values.income[index].quantity === 0 ||\r\n            values.income[index].quantity === \"\"\r\n          ) {\r\n            errors.quantity = \"Невірна кількість!\";\r\n          }\r\n        });\r\n        return errors;\r\n      }}\r\n      isSubmitting={false}\r\n      onSubmit={(values, { setSubmitting, resetForm }, initialValues) => {\r\n        values.time = new Date().toISOString().split(\"T\")[0];\r\n        axios\r\n          .post(\"/balance/inc.json?auth=\" + props.idToken, values)\r\n          .then(response => {\r\n            console.log(response);\r\n            setSubmitting(false);\r\n            const newIncData = {\r\n              ...props.incData,\r\n              [response.data.name]: values\r\n            };\r\n            props.setDataInc(newIncData);\r\n            resetForm(initialValues);\r\n          })\r\n          .catch(error => {\r\n            props.showModal(error.response);\r\n          });\r\n      }}\r\n      render={({ isSubmitting, values, setFieldValue }) => (\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <Form>\r\n                <Row>\r\n                  <Col xs={2}>\r\n                    <label>\r\n                      Ціна\r\n                      <Field\r\n                        className=\"input-number\"\r\n                        name=\"price\"\r\n                        type=\"number\"\r\n                      />\r\n                      <span className=\"errorMessage\">\r\n                        <ErrorMessage name=\"price\" />\r\n                      </span>\r\n                      <span className=\"errorMessage\">\r\n                        <ErrorMessage name=\"type\" />\r\n                      </span>\r\n                      <span className=\"errorMessage\">\r\n                        <ErrorMessage name=\"name\" />\r\n                      </span>\r\n                      <span className=\"errorMessage\">\r\n                        <ErrorMessage name=\"quantity\" />\r\n                      </span>\r\n                    </label>\r\n                  </Col>\r\n                  <Col xs={10}>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => complectFormHandler(values)}\r\n                    >\r\n                      {\" \"}\r\n                      Комплект{\" \"}\r\n                    </button>\r\n                    {complectErrorMessage}\r\n                  </Col>\r\n                </Row>\r\n                <FieldArray\r\n                  name=\"income\"\r\n                  render={arrayHelpers => (\r\n                    <React.Fragment>\r\n                      {values.income && values.income.length > 0\r\n                        ? values.income.map((line, index) => (\r\n                            <Row key={index}>\r\n                              <Col>\r\n                                <fieldset>\r\n                                  <Field\r\n                                    className=\"radioInput\"\r\n                                    type=\"radio\"\r\n                                    name={`income.${index}.type`}\r\n                                    value=\"Товар\"\r\n                                    checked={\r\n                                      values.income[index].type === \"Товар\"\r\n                                    }\r\n                                    onChange={() =>\r\n                                      setFieldValue(\r\n                                        `income.${index}.type`,\r\n                                        \"Товар\"\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                  <label>Товар</label>\r\n\r\n                                  <Field\r\n                                    className=\"radioInput\"\r\n                                    type=\"radio\"\r\n                                    name={`income.${index}.type`}\r\n                                    value=\"Супутній товар\"\r\n                                    checked={\r\n                                      values.income[index].type ===\r\n                                      \"Супутній товар\"\r\n                                    }\r\n                                    onChange={() =>\r\n                                      setFieldValue(\r\n                                        `income.${index}.type`,\r\n                                        \"Супутній товар\"\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                  <label>Супутній товар</label>\r\n                                </fieldset>\r\n                                <fieldset>\r\n                                  <label>Назва</label>\r\n                                  <Field\r\n                                    component=\"select\"\r\n                                    name={`income.${index}.name`}\r\n                                  >\r\n                                    <option value={\"--Обери назву--\"}>\r\n                                      --Обери назву--\r\n                                    </option>\r\n                                    {values.income[index].type === \"Товар\" &&\r\n                                      waresList}\r\n                                    {values.income[index].type ===\r\n                                      \"Супутній товар\" && subwaresList}\r\n                                  </Field>\r\n\r\n                                  <label>Колір</label>\r\n                                  <Field\r\n                                    component=\"select\"\r\n                                    name={`income.${index}.color`}\r\n                                  >\r\n                                    {colorsList}\r\n                                  </Field>\r\n\r\n                                  <label>Кількість</label>\r\n                                  <Field\r\n                                    className=\"input-number\"\r\n                                    name={`income.${index}.quantity`}\r\n                                    type=\"number\"\r\n                                  />\r\n                                </fieldset>\r\n                                <button\r\n                                  className=\"button-x\"\r\n                                  type=\"button\"\r\n                                  onClick={() => arrayHelpers.remove(index)} // remove a friend from the list\r\n                                >\r\n                                  x\r\n                                </button>\r\n                              </Col>\r\n                            </Row>\r\n                          ))\r\n                        : null}\r\n                      <Row>\r\n                        <Col>\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                              arrayHelpers.push({\r\n                                type: \"\",\r\n                                name: \"Обери назву\",\r\n                                color: \"н/з\",\r\n                                quantity: \"\"\r\n                              });\r\n                            }}\r\n                          >\r\n                            Додати рядок\r\n                          </button>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col xs={{ span: 3, offset: 9 }}>\r\n                          <button\r\n                            className=\"submitData\"\r\n                            type=\"submit\"\r\n                            disabled={isSubmitting}\r\n                          >\r\n                            Внести\r\n                          </button>\r\n                        </Col>\r\n                      </Row>\r\n                    </React.Fragment>\r\n                  )}\r\n                />\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    incData: state.data.incData,\r\n    lists: state.data.lists,\r\n    complectsData: state.data.complectsData,\r\n    idToken: state.auth.idToken\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setDataInc: incData => dispatch(actions.setDataInc(incData)),\r\n    showModal: response => dispatch(actions.showModal(response))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(IncForm);\r\n","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"../../axios\";\r\n\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nconst IncTable = props => {\r\n  const deleteRowHandler = event => {\r\n    const id = event.target.id;\r\n    axios\r\n      .delete(\"/balance/inc/\" + id + \".json?auth=\" + props.idToken)\r\n      .then(res => {\r\n        console.log(res);\r\n      })\r\n      .catch(error => {\r\n        props.showModal(error.response);\r\n      });\r\n    const newIncData = {};\r\n    for (const key in props.incData) {\r\n      if (key !== id) {\r\n        newIncData[key] = props.incData[key];\r\n      }\r\n    }\r\n    props.setDataInc(newIncData);\r\n  };\r\n\r\n  const table = props.loaded\r\n    ? Object.keys(props.incData)\r\n        .reverse()\r\n        .map((incKey, index) => {\r\n          const complect = props.incData[incKey].income.map((line, index) => {\r\n            return (\r\n              <tr key={`${incKey}_${index}`}>\r\n                <td></td>\r\n                <td></td>\r\n                <td>{line.type}</td>\r\n                <td>{line.name}</td>\r\n                <td>{line.color}</td>\r\n                <td>{line.quantity}</td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n            );\r\n          });\r\n          return (\r\n            <tbody key={incKey}>\r\n              <tr>\r\n                <td>{index + 1}</td>\r\n                <td>{props.incData[incKey].time}</td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td>{props.incData[incKey].price}</td>\r\n                <td>\r\n                  <button id={incKey} onClick={deleteRowHandler}>\r\n                    x\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              {complect}\r\n            </tbody>\r\n          );\r\n        })\r\n    : null;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Дата</th>\r\n            <th>Тип</th>\r\n            <th>Назва</th>\r\n            <th>Колір</th>\r\n            <th>Кількість</th>\r\n            <th>Ціна</th>\r\n            <th>Видалити</th>\r\n          </tr>\r\n        </thead>\r\n        {table}\r\n      </Table>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    incData: state.data.incData,\r\n    loaded: state.data.loaded,\r\n    idToken: state.auth.idToken\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setDataInc: incData => dispatch(actions.setDataInc(incData)),\r\n    showModal: response => dispatch(actions.showModal(response))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(IncTable);\r\n","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport axios from \"../../axios\";\r\n\r\nconst StorageTable = (props) => {\r\n  //Creating form for last summing row\r\n  const lastRow = {\r\n    quantityE: 0,\r\n    totalPriceE: 0,\r\n    quantityI: 0,\r\n    totalPriceI: 0,\r\n    quantityS: 0,\r\n    totalPriceS: 0,\r\n  };\r\n\r\n  const handleArchive = async (name) => {\r\n    const wareKey = Object.keys(props.expData).find(\r\n      (key) => props.expData[key].name === name\r\n    );\r\n\r\n    await axios.put(\"/balance/exp/\" + wareKey + \".json?auth=\" + props.idToken, {\r\n      ...props.expData[wareKey],\r\n      archived: true,\r\n    });\r\n\r\n    window.location.reload();\r\n  };\r\n\r\n  //Creating storage table\r\n  const table = !props.loaded\r\n    ? null\r\n    : //Iterating through wares in expTable\r\n      Object.keys(props.expTable.ware)\r\n        .sort()\r\n        .map((wareName, wareIndex) => {\r\n          const wareKey = Object.keys(props.expData).find(\r\n            (key) => props.expData[key].name === wareName\r\n          );\r\n\r\n          if (props.expData[wareKey].archived) {\r\n            return null;\r\n          }\r\n\r\n          //Creating new ware object\r\n          const ware = {};\r\n          ware.name = wareName;\r\n          ware.colors = [];\r\n          //Pushing colors into ware object\r\n          for (\r\n            let colorIndex = 0;\r\n            colorIndex < props.expTable.ware[wareName].length;\r\n            colorIndex++\r\n          ) {\r\n            //Creating color object\r\n            const coloredWare = {};\r\n            coloredWare.color = props.expTable.ware[wareName][colorIndex].color;\r\n            coloredWare.quantityE =\r\n              props.expTable.ware[wareName][colorIndex].quantity;\r\n            coloredWare.totalPriceE =\r\n              props.expTable.ware[wareName][colorIndex].totalPrice;\r\n            coloredWare.priceE =\r\n              props.expTable.ware[wareName][colorIndex].price;\r\n            //Checking if ware is in incTable\r\n            if (props.incTable.ware[wareName]) {\r\n              //Checking if ware has same color in incTable\r\n              let incomeColorIndex = false;\r\n              for (let i = 0; i < props.incTable.ware[wareName].length; i++) {\r\n                if (\r\n                  props.incTable.ware[wareName][i].color === coloredWare.color\r\n                ) {\r\n                  incomeColorIndex = i;\r\n                }\r\n              }\r\n              //Passing income info to the colored ware\r\n              //If color exists in income\r\n              if (typeof incomeColorIndex == \"number\") {\r\n                coloredWare.quantityI =\r\n                  props.incTable.ware[wareName][incomeColorIndex].quantity;\r\n                coloredWare.totalPriceI =\r\n                  props.incTable.ware[wareName][incomeColorIndex].totalPrice;\r\n                coloredWare.priceI =\r\n                  props.incTable.ware[wareName][incomeColorIndex].price !==\r\n                  Infinity\r\n                    ? props.incTable.ware[wareName][incomeColorIndex].price\r\n                    : 0;\r\n                coloredWare.quantityS =\r\n                  coloredWare.quantityE - coloredWare.quantityI;\r\n                coloredWare.priceS = coloredWare.priceI\r\n                  ? coloredWare.priceI\r\n                  : coloredWare.priceE;\r\n                coloredWare.totalPriceS =\r\n                  coloredWare.priceS * coloredWare.quantityS;\r\n                // if(wareName === 'Planner Notebook') {\r\n                //   console.log(props.incTable.ware[wareName], coloredWare.quantityI, coloredWare.totalPriceI, coloredWare.priceI)\r\n                // }\r\n              }\r\n              //If color doesn't exist in income\r\n              else {\r\n                coloredWare.quantityI = 0;\r\n                coloredWare.totalPriceI = 0;\r\n                coloredWare.priceI = 0;\r\n                coloredWare.quantityS = coloredWare.quantityE;\r\n                coloredWare.totalPriceS = coloredWare.totalPriceE;\r\n                coloredWare.priceS = coloredWare.priceE;\r\n              }\r\n              //If ware doesn't exist in income\r\n            } else {\r\n              coloredWare.quantityI = 0;\r\n              coloredWare.totalPriceI = 0;\r\n              coloredWare.priceI = 0;\r\n              coloredWare.quantityS = coloredWare.quantityE;\r\n              coloredWare.totalPriceS = coloredWare.totalPriceE;\r\n              coloredWare.priceS = coloredWare.priceE;\r\n            }\r\n\r\n            ware.colors.push(coloredWare);\r\n          }\r\n\r\n          ware.quantityE = 0;\r\n          ware.quantityI = 0;\r\n          ware.quantityS = 0;\r\n          ware.totalPriceE = 0;\r\n          ware.totalPriceI = 0;\r\n          ware.totalPriceS = 0;\r\n          //Summing up data from colors\r\n          ware.colors.map((colorWare) => {\r\n            ware.quantityE += colorWare.quantityE;\r\n            ware.quantityI += colorWare.quantityI;\r\n            ware.quantityS += colorWare.quantityS;\r\n            ware.totalPriceE += colorWare.totalPriceE;\r\n            ware.totalPriceI += colorWare.totalPriceI;\r\n            ware.totalPriceS += colorWare.totalPriceS;\r\n          });\r\n          //Counting prices for ware\r\n          ware.priceE = ware.totalPriceE / ware.quantityE;\r\n          ware.priceI =\r\n            ware.totalPriceI === 0 || ware.quantityI === 0\r\n              ? 0\r\n              : ware.totalPriceI / ware.quantityI;\r\n          ware.priceS = ware.totalPriceS / ware.quantityS;\r\n          //Creating ware row\r\n          const topRow = (\r\n            <tr>\r\n              <th>{wareIndex + 1}</th>\r\n              <th>{ware.name}</th>\r\n              <th>\r\n                <button type=\"button\" onClick={() => handleArchive(wareName)}>\r\n                  Архівувати\r\n                </button>\r\n              </th>\r\n              <th style={{ backgroundColor: \"darkgray\" }}></th>\r\n              <th>{ware.quantityE}</th>\r\n              <th>{ware.totalPriceE.toFixed(0)}</th>\r\n              <th>{ware.priceE.toFixed(2)}</th>\r\n              <th style={{ backgroundColor: \"darkgray\" }}></th>\r\n              <th>{ware.quantityI}</th>\r\n              <th>{ware.totalPriceI.toFixed(0)}</th>\r\n              <th>{ware.priceI.toFixed(2)}</th>\r\n              <th style={{ backgroundColor: \"darkgray\" }}></th>\r\n              <th>{ware.quantityS}</th>\r\n              <th>{ware.totalPriceS.toFixed(0)}</th>\r\n              <th>{ware.priceS.toFixed(2)}</th>\r\n            </tr>\r\n          );\r\n          //Creating color rows\r\n          const rows = ware.colors.map((wareColor, wareColorIndex) => {\r\n            return (\r\n              <tr key={`${ware.name}_${wareColor.color}`}>\r\n                <td>{`${wareIndex + 1}.${wareColorIndex + 1}`}</td>\r\n                <td></td>\r\n                <td>{wareColor.color}</td>\r\n                <td style={{ backgroundColor: \"darkgray\" }}></td>\r\n                <td>{wareColor.quantityE}</td>\r\n                <td>{wareColor.totalPriceE.toFixed(0)}</td>\r\n                <td>{wareColor.priceE.toFixed(2)}</td>\r\n                <td style={{ backgroundColor: \"darkgray\" }}></td>\r\n                <td>{wareColor.quantityI}</td>\r\n                <td>{wareColor.totalPriceI.toFixed(0)}</td>\r\n                <td>{wareColor.priceI.toFixed(2)}</td>\r\n                <td style={{ backgroundColor: \"darkgray\" }}></td>\r\n                <td>{wareColor.quantityS}</td>\r\n                <td>{wareColor.totalPriceS.toFixed(0)}</td>\r\n                <td>{wareColor.priceS.toFixed(2)}</td>\r\n              </tr>\r\n            );\r\n          });\r\n          //Amending total row\r\n          lastRow.quantityE += ware.quantityE;\r\n          lastRow.totalPriceE += ware.totalPriceE;\r\n          lastRow.quantityI += ware.quantityI;\r\n          lastRow.totalPriceI += ware.totalPriceI;\r\n          lastRow.quantityS += ware.quantityS;\r\n          lastRow.totalPriceS += ware.totalPriceS;\r\n\r\n          return (\r\n            <tbody key={wareName}>\r\n              {topRow}\r\n              {rows}\r\n            </tbody>\r\n          );\r\n        });\r\n\r\n  //Creating storage subwarestable\r\n  const tableSubwares = !props.loaded\r\n    ? null\r\n    : //Iterating through wares in expTable\r\n      Object.keys(props.expTable.subware)\r\n        .sort()\r\n        .map((wareName, wareIndex) => {\r\n          const wareKey = Object.keys(props.expData).find(\r\n            (key) => props.expData[key].name === wareName\r\n          );\r\n\r\n          if (props.expData[wareKey].archived) {\r\n            return null;\r\n          }\r\n\r\n          //Creating new ware object\r\n          const ware = {};\r\n          ware.name = wareName;\r\n          ware.colors = [];\r\n          //Pushing colors into ware object\r\n          for (\r\n            let colorIndex = 0;\r\n            colorIndex < props.expTable.subware[wareName].length;\r\n            colorIndex++\r\n          ) {\r\n            //Creating color object\r\n            const coloredWare = {};\r\n            coloredWare.color =\r\n              props.expTable.subware[wareName][colorIndex].color;\r\n            coloredWare.quantityE =\r\n              props.expTable.subware[wareName][colorIndex].quantity;\r\n            coloredWare.totalPriceE =\r\n              props.expTable.subware[wareName][colorIndex].totalPrice;\r\n            coloredWare.priceE =\r\n              props.expTable.subware[wareName][colorIndex].price;\r\n            //Checking if ware is in incTable\r\n            if (props.incTable.subware[wareName]) {\r\n              //Checking if ware has same color in incTable\r\n              let incomeColorIndex = false;\r\n              for (\r\n                let i = 0;\r\n                i < props.incTable.subware[wareName].length;\r\n                i++\r\n              ) {\r\n                if (\r\n                  props.incTable.subware[wareName][i].color ===\r\n                  coloredWare.color\r\n                ) {\r\n                  incomeColorIndex = i;\r\n                }\r\n              }\r\n              //Passing income info to the colored ware\r\n              //If color exists in income\r\n              if (typeof incomeColorIndex == \"number\") {\r\n                coloredWare.quantityI =\r\n                  props.incTable.subware[wareName][incomeColorIndex].quantity;\r\n                coloredWare.totalPriceI =\r\n                  props.incTable.subware[wareName][incomeColorIndex].totalPrice;\r\n                coloredWare.priceI =\r\n                  props.incTable.subware[wareName][incomeColorIndex].price !==\r\n                  Infinity\r\n                    ? props.incTable.subware[wareName][incomeColorIndex].price\r\n                    : 0;\r\n                coloredWare.quantityS =\r\n                  coloredWare.quantityE - coloredWare.quantityI;\r\n                coloredWare.priceS = coloredWare.priceI\r\n                  ? coloredWare.priceI\r\n                  : coloredWare.priceE;\r\n                coloredWare.totalPriceS =\r\n                  coloredWare.priceS * coloredWare.quantityS;\r\n              }\r\n              //If color doesn't exist in income\r\n              else {\r\n                coloredWare.quantityI = 0;\r\n                coloredWare.totalPriceI = 0;\r\n                coloredWare.priceI = 0;\r\n                coloredWare.quantityS = coloredWare.quantityE;\r\n                coloredWare.totalPriceS = coloredWare.totalPriceE;\r\n                coloredWare.priceS = coloredWare.priceE;\r\n              }\r\n              //If ware doesn't exist in income\r\n            } else {\r\n              coloredWare.quantityI = 0;\r\n              coloredWare.totalPriceI = 0;\r\n              coloredWare.priceI = 0;\r\n              coloredWare.quantityS = coloredWare.quantityE;\r\n              coloredWare.totalPriceS = coloredWare.totalPriceE;\r\n              coloredWare.priceS = coloredWare.priceE;\r\n            }\r\n\r\n            ware.colors.push(coloredWare);\r\n          }\r\n\r\n          ware.quantityE = 0;\r\n          ware.quantityI = 0;\r\n          ware.quantityS = 0;\r\n          ware.totalPriceE = 0;\r\n          ware.totalPriceI = 0;\r\n          ware.totalPriceS = 0;\r\n          //Summing up data from colors\r\n          ware.colors.map((colorWare) => {\r\n            ware.quantityE += colorWare.quantityE;\r\n            ware.quantityI += colorWare.quantityI;\r\n            ware.quantityS += colorWare.quantityS;\r\n            ware.totalPriceE += colorWare.totalPriceE;\r\n            ware.totalPriceI += colorWare.totalPriceI;\r\n            ware.totalPriceS += colorWare.totalPriceS;\r\n          });\r\n          //Counting prices for ware\r\n          ware.priceE = ware.totalPriceE / ware.quantityE;\r\n          ware.priceI =\r\n            ware.totalPriceI === 0 || ware.quantityI === 0\r\n              ? 0\r\n              : ware.totalPriceI / ware.quantityI;\r\n          ware.priceS = ware.totalPriceS / ware.quantityS;\r\n          //Creating ware row\r\n          const topRow = (\r\n            <tr>\r\n              <th>{wareIndex + 1}</th>\r\n              <th>{ware.name}</th>\r\n              <th>\r\n                <button type=\"button\" onClick={() => handleArchive(wareName)}>\r\n                  Архівувати\r\n                </button>\r\n              </th>\r\n              <th style={{ backgroundColor: \"darkgray\" }}></th>\r\n              <th>{ware.quantityE}</th>\r\n              <th>{ware.totalPriceE.toFixed(0)}</th>\r\n              <th>{ware.priceE.toFixed(2)}</th>\r\n              <th style={{ backgroundColor: \"darkgray\" }}></th>\r\n              <th>{ware.quantityI}</th>\r\n              <th>{ware.totalPriceI.toFixed(0)}</th>\r\n              <th>{ware.priceI.toFixed(2)}</th>\r\n              <th style={{ backgroundColor: \"darkgray\" }}></th>\r\n              <th>{ware.quantityS}</th>\r\n              <th>{ware.totalPriceS.toFixed(0)}</th>\r\n              <th>{ware.priceS.toFixed(2)}</th>\r\n            </tr>\r\n          );\r\n          //Creating color rows\r\n          const rows = ware.colors.map((wareColor, wareColorIndex) => {\r\n            return (\r\n              <tr key={`${ware.name}_${wareColor.color}`}>\r\n                <td>{`${wareIndex + 1}.${wareColorIndex + 1}`}</td>\r\n                <td></td>\r\n                <td>{wareColor.color}</td>\r\n                <td style={{ backgroundColor: \"darkgray\" }}></td>\r\n                <td>{wareColor.quantityE}</td>\r\n                <td>{wareColor.totalPriceE.toFixed(0)}</td>\r\n                <td>{wareColor.priceE.toFixed(2)}</td>\r\n                <td style={{ backgroundColor: \"darkgray\" }}></td>\r\n                <td>{wareColor.quantityI}</td>\r\n                <td>{wareColor.totalPriceI.toFixed(0)}</td>\r\n                <td>{wareColor.priceI.toFixed(2)}</td>\r\n                <td style={{ backgroundColor: \"darkgray\" }}></td>\r\n                <td>{wareColor.quantityS}</td>\r\n                <td>{wareColor.totalPriceS.toFixed(0)}</td>\r\n                <td>{wareColor.priceS.toFixed(2)}</td>\r\n              </tr>\r\n            );\r\n          });\r\n          //Amending total row\r\n          lastRow.quantityE += ware.quantityE;\r\n          lastRow.totalPriceE += ware.totalPriceE;\r\n          lastRow.quantityI += ware.quantityI;\r\n          lastRow.totalPriceI += ware.totalPriceI;\r\n          lastRow.quantityS += ware.quantityS;\r\n          lastRow.totalPriceS += ware.totalPriceS;\r\n\r\n          return (\r\n            <tbody key={wareName}>\r\n              {topRow}\r\n              {rows}\r\n            </tbody>\r\n          );\r\n        });\r\n\r\n  //Creating total row\r\n  const lastRowTable = (\r\n    <tr>\r\n      <th></th>\r\n      <th>Всього</th>\r\n      <th></th>\r\n      <th style={{ backgroundColor: \"darkgray\" }}></th>\r\n      <th>{lastRow.quantityE}</th>\r\n      <th>{lastRow.totalPriceE.toFixed(2)}</th>\r\n      <th></th>\r\n      <th style={{ backgroundColor: \"darkgray\" }}></th>\r\n      <th>{lastRow.quantityI}</th>\r\n      <th>{lastRow.totalPriceI.toFixed(2)}</th>\r\n      <th></th>\r\n      <th style={{ backgroundColor: \"darkgray\" }}></th>\r\n      <th>{lastRow.quantityS}</th>\r\n      <th>{lastRow.totalPriceS.toFixed(2)}</th>\r\n      <th></th>\r\n    </tr>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Товар</th>\r\n            <th>Колір</th>\r\n            <th style={{ backgroundColor: \"darkgray\" }}></th>\r\n            <th>Кількість виготовлено</th>\r\n            <th>Вартість виготовлено</th>\r\n            <th>Собівартість одиниці</th>\r\n            <th style={{ backgroundColor: \"darkgray\" }}></th>\r\n            <th>Кількість продано</th>\r\n            <th>Вартість продано</th>\r\n            <th>Ціна одиниці продано</th>\r\n            <th style={{ backgroundColor: \"darkgray\" }}></th>\r\n            <th>Кількість на складі</th>\r\n            <th>Вартість на складі</th>\r\n            <th>Ціна одиниці на складі</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        {table}\r\n        {tableSubwares}\r\n        <tbody>{lastRowTable}</tbody>\r\n      </Table>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    expTable: state.tables.expTable,\r\n    incTable: state.tables.incTable,\r\n    loaded: state.tables.loaded,\r\n    expData: state.data.expData,\r\n    idToken: state.auth.idToken,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(StorageTable);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport StorageTable from '../../components/storage/StorageTable';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst Storage = props => {\r\n  useEffect(() => {\r\n    props.createExpTable(props.expData);\r\n    props.createIncTable(props.incData);\r\n  }, [props] )\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <StorageTable />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    expData: state.data.expData,\r\n    incData: state.data.incData\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createExpTable: (expData) => dispatch(actions.createExpTable(expData)),\r\n    createIncTable: (incData) => dispatch(actions.createIncTable(incData))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Storage);","import React from \"react\";\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from \"formik\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"../../axios\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nconst ComplectsForm = props => {\r\n  const waresList = props.lists.wares.map(item => {\r\n    return (\r\n      <option key={item} value={item}>\r\n        {item}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  const subwaresList = props.lists.subwares.map(item => {\r\n    return (\r\n      <option key={item} value={item}>\r\n        {item}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: \"\",\r\n        complect: [\r\n          {\r\n            name: \"\",\r\n            copyColor: false\r\n          }\r\n        ]\r\n      }}\r\n      validate={values => {\r\n        let errors = {};\r\n        let checkIfComplectExists = 0;\r\n        Object.keys(props.complectsData).map(key => {\r\n          if (props.complectsData[key].name === values.name) {\r\n            checkIfComplectExists++;\r\n          }\r\n        });\r\n        if (checkIfComplectExists > 0) {\r\n          errors.complectExists = \"Комплект вже існує\";\r\n        }\r\n        if (values.name === \"\") {\r\n          errors.name = \"Не внесено товару!\";\r\n        }\r\n        if (values.complect.length < 1) {\r\n          errors.complect = \"Не внесено супутнього товару!\";\r\n        }\r\n        values.complect.map((line, index) => {\r\n          if (\r\n            !values.complect[index].name ||\r\n            values.complect[index].name === \"--Обери назву--\"\r\n          ) {\r\n            errors.name = \"Назва супутнього товару не обрана!\";\r\n          }\r\n        });\r\n        return errors;\r\n      }}\r\n      isSubmitting={false}\r\n      onSubmit={(values, { setSubmitting, resetForm }, initialValues) => {\r\n        values.time = new Date().toISOString().split(\"T\")[0];\r\n        axios\r\n          .post(\"/balance/complects.json?auth=\" + props.idToken, values)\r\n          .then(response => {\r\n            console.log(response);\r\n            setSubmitting(false);\r\n            const newComplectsData = {\r\n              ...props.complectsData,\r\n              [response.data.name]: values\r\n            };\r\n            props.setDataComplects(newComplectsData);\r\n            resetForm(initialValues);\r\n          })\r\n          .catch(error => {\r\n            props.showModal(error.response);\r\n          });\r\n      }}\r\n      render={({ isSubmitting, values, setFieldValue }) => (\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <Form>\r\n                <fieldset>\r\n                  <label>Назва</label>\r\n                  <Field component=\"select\" name={`name`}>\r\n                    <option value={\"--Обери назву--\"}>--Обери назву--</option>\r\n                    {waresList}\r\n                  </Field>\r\n                </fieldset>\r\n                <FieldArray\r\n                  name=\"complect\"\r\n                  render={arrayHelpers => (\r\n                    <React.Fragment>\r\n                      {values.complect && values.complect.length > 0\r\n                        ? values.complect.map((line, index) => (\r\n                            <Row key={index}>\r\n                              <Col xs={5}>\r\n                                <fieldset>\r\n                                  <label>Назва супутнього товару</label>\r\n                                  <Field\r\n                                    component=\"select\"\r\n                                    name={`complect.${index}.name`}\r\n                                  >\r\n                                    <option value={\"--Обери назву--\"}>\r\n                                      --Обери назву--\r\n                                    </option>\r\n                                    {subwaresList}\r\n                                  </Field>\r\n                                </fieldset>\r\n                              </Col>\r\n                              <Col xs={2}>\r\n                                <fieldset>\r\n                                  <label>Має колір</label>\r\n                                  <Field\r\n                                    name={`complect.${index}.copyColor`}\r\n                                    type=\"checkbox\"\r\n                                    value={`complect.${index}.copyColor`}\r\n                                    className=\"checkbox\"\r\n                                  />\r\n                                </fieldset>\r\n                              </Col>\r\n                              <Col xs={1}>\r\n                                <button\r\n                                  className=\"button-x\"\r\n                                  type=\"button\"\r\n                                  onClick={() => arrayHelpers.remove(index)} // remove a friend from the list\r\n                                >\r\n                                  x\r\n                                </button>\r\n                              </Col>\r\n                            </Row>\r\n                          ))\r\n                        : null}\r\n                      <Row>\r\n                        <Col>\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                              arrayHelpers.push({\r\n                                name: \"\",\r\n                                copyColor: false\r\n                              });\r\n                            }}\r\n                          >\r\n                            Додати рядок\r\n                          </button>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col xs={{ span: 3, offset: 9 }}>\r\n                          <button\r\n                            className=\"submitData\"\r\n                            type=\"submit\"\r\n                            disabled={isSubmitting}\r\n                          >\r\n                            Внести\r\n                          </button>\r\n                        </Col>\r\n                      </Row>\r\n                    </React.Fragment>\r\n                  )}\r\n                />\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    complectsData: state.data.complectsData,\r\n    lists: state.data.lists,\r\n    idToken: state.auth.idToken\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setDataComplects: complectsData =>\r\n      dispatch(actions.setDataComplects(complectsData)),\r\n    showModal: response => dispatch(actions.showModal(response))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ComplectsForm);\r\n","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"../../axios\";\r\n\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nconst ComplectsTable = props => {\r\n  const deleteRowHandler = event => {\r\n    const id = event.target.id;\r\n    axios\r\n      .delete(\"/balance/complects/\" + id + \".json?auth=\" + props.idToken)\r\n      .then(res => {\r\n        console.log(res);\r\n      })\r\n      .catch(error => {\r\n        props.showModal(error.response);\r\n      });\r\n    const newComplectsData = {};\r\n    for (const key in props.complectsData) {\r\n      if (key !== id) {\r\n        newComplectsData[key] = props.complectsData[key];\r\n      }\r\n    }\r\n    props.setDataComplects(newComplectsData);\r\n  };\r\n\r\n  const table = props.loaded\r\n    ? Object.keys(props.complectsData)\r\n        .reverse()\r\n        .map((complectKey, index) => {\r\n          const complect = props.complectsData[complectKey].complect.map(\r\n            (line, index) => {\r\n              return (\r\n                <tr key={`${complectKey}_${index}`}>\r\n                  <td></td>\r\n                  <td>{line.name}</td>\r\n                  <td>{line.copyColor ? \"Так\" : \"Ні\"}</td>\r\n                  <td></td>\r\n                </tr>\r\n              );\r\n            }\r\n          );\r\n          return (\r\n            <tbody key={complectKey}>\r\n              <tr>\r\n                <td>{index + 1}</td>\r\n                <td>{props.complectsData[complectKey].name}</td>\r\n                <td></td>\r\n                <td>\r\n                  <button id={complectKey} onClick={deleteRowHandler}>\r\n                    x\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              {complect}\r\n            </tbody>\r\n          );\r\n        })\r\n    : null;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Назва</th>\r\n            <th>Чи має колір</th>\r\n            <th>Видалити</th>\r\n          </tr>\r\n        </thead>\r\n        {table}\r\n      </Table>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    complectsData: state.data.complectsData,\r\n    loaded: state.data.loaded,\r\n    idToken: state.auth.idToken\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setDataComplects: complectsData =>\r\n      dispatch(actions.setDataComplects(complectsData)),\r\n    showModal: response => dispatch(actions.showModal(response))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ComplectsTable);\r\n","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst AvailableComplectsTable = props => {\r\n  console.log(props);\r\n\r\n  const table = props.loaded\r\n    ? props.availableComplectsData.reverse().map((ware, index) => {\r\n        const topRow = (\r\n          <tr>\r\n            <th>{index + 1}</th>\r\n            <th>{ware.name}</th>\r\n            <th></th>\r\n            <th></th>\r\n            <th></th>\r\n          </tr>\r\n        );\r\n        const wareTable = ware.colors.map((coloredWare, wareIndex) => {\r\n          const wareRow = (\r\n            <tr key={`${index + 1}.${wareIndex + 1}`}>\r\n              <th>{`${index + 1}.${wareIndex + 1}`}</th>\r\n              <th>{ware.name}</th>\r\n              <th>{coloredWare.color}</th>\r\n              <th>{coloredWare.minQuantity}</th>\r\n              <th>{coloredWare.quantity}</th>\r\n            </tr>\r\n          );\r\n\r\n          const itemRows = coloredWare.items.map((item, itemIndex) => {\r\n            return (\r\n              <tr key={`${index + 1}.${wareIndex + 1}.${itemIndex}`}>\r\n                <td></td>\r\n                <td>{item.name}</td>\r\n                <td></td>\r\n                <td></td>\r\n                <td>{item.quantity}</td>\r\n              </tr>\r\n            );\r\n          });\r\n\r\n          return [wareRow, itemRows];\r\n        });\r\n        return (\r\n          <tbody key={index}>\r\n            {topRow}\r\n            {wareTable}\r\n          </tbody>\r\n        );\r\n      })\r\n    : null;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Товар</th>\r\n            <th>Колір</th>\r\n            <th>Кількість комплектів</th>\r\n            <th>Кількість одиниць</th>\r\n          </tr>\r\n        </thead>\r\n        {table}\r\n      </Table>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    availableComplectsData: state.data.availableComplectsData,\r\n    loaded: state.data.loaded\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(AvailableComplectsTable);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Tabs, Tab } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ExpForm from \"../../components/exp/ExpForm\";\r\nimport ExpTable from \"../../components/exp/ExpTable\";\r\nimport IncForm from \"../../components/inc/IncForm\";\r\nimport IncTable from \"../../components/inc/IncTable\";\r\nimport Storage from \"../storage/Storage\";\r\nimport ComplectsForm from \"../complects/ComplectsForm\";\r\nimport ComplectsTable from \"../complects/ComplectsTable\";\r\nimport AvailableComplectsTable from \"../availableComplects/availableComplectsTable\";\r\nimport \"./workArea.css\";\r\nimport \"./Forms.css\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nconst WorkArea = props => {\r\n  //З серва тягну дані для наповнення\r\n  useEffect(() => {\r\n    props.getDataEI(props.authData.idToken);\r\n  }, [props.gotError]);\r\n\r\n  //На основі даних з серва хочу замутити новий стейт\r\n  useEffect(() => {\r\n    if (props.expData && Object.keys(props.expData).length > 0) {\r\n      props.createFormLists(props.expData);\r\n    }\r\n  }, [props.expData]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Tabs defaultActiveKey=\"storage\" id=\"uncontrolled-tab-example\">\r\n        <Tab eventKey=\"exp\" title=\"Витрати\">\r\n          <ExpForm />\r\n          <ExpTable />\r\n        </Tab>\r\n        <Tab eventKey=\"inc\" title=\"Доходи\">\r\n          <IncForm />\r\n          <IncTable />\r\n        </Tab>\r\n        <Tab eventKey=\"storage\" title=\"Склад\">\r\n          <Storage />\r\n        </Tab>\r\n        <Tab eventKey=\"complects\" title=\"Комплекти\">\r\n          <ComplectsForm />\r\n          <ComplectsTable />\r\n        </Tab>\r\n        <Tab eventKey=\"availableComplects\" title=\"Наявні комплекти\">\r\n          <AvailableComplectsTable />\r\n        </Tab>\r\n      </Tabs>\r\n      {!props.authData.signedIn && <Redirect to=\"/\" />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authData: state.auth,\r\n    expData: state.data.expData,\r\n    incData: state.data.incData,\r\n    gotError: state.ui.gotError\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getDataEI: idToken => dispatch(actions.getDataEI(idToken)),\r\n    createFormLists: expData => dispatch(actions.createFormLists(expData))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WorkArea);\r\n","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './Auth.css'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst Auth = (props) => {  \r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"authForm\">\r\n            <Formik      \r\n            initialValues={{ \r\n              email: '',\r\n              password: ''\r\n            }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n              props.logIn(values);\r\n              setSubmitting(false);\r\n            }}\r\n          >\r\n            {({ isSubmitting, values, setFieldValue }) => (\r\n              <Form>\r\n                    <Field\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Email\"           \r\n                    />\r\n\r\n                    <Field\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      placeholder=\"Password\"              \r\n                    />\r\n                <button type=\"submit\" disabled={isSubmitting}>\r\n                  Log In\r\n                </button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logIn: (values) => dispatch(actions.logIn(values)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Navbar, Nav, Image } from 'react-bootstrap';\r\n\r\nimport Logo from '../../assets/images/logo.jpg';\r\nimport './Navigation.css';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst Navigation = props => {\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <NavLink to=\"/\" exact>\r\n        <Navbar.Brand><Image src={Logo}/> </Navbar.Brand>\r\n      </NavLink>\r\n      <Nav className=\"mr-auto\">\r\n        <NavLink className=\"nav-link\" to=\"/\" exact>Home</NavLink>\r\n        {props.authState && <NavLink className=\"nav-link\" to=\"/workarea\" exact>Work Area</NavLink>}\r\n        {props.authState && <button className=\"logout\" onClick={props.logOut}>Log Out</button >}\r\n      </Nav>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authState: state.auth.signedIn\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logOut: () => dispatch(actions.logOut()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);","import React from 'react';\r\nimport { VictoryBar } from 'victory';\r\n\r\nexport const TotalExpInc = props => {\r\n  return (\r\n    <VictoryBar\r\n      data={[\r\n        {x: 1, y: props.chartData.exp, y0: 0, label: \"Витрати\", labelNumber: props.chartData.exp},\r\n        {x: 2, y: props.chartData.inc, y0: 0, label: \"Доходи\", labelNumber: props.chartData.inc},     \r\n        {x: 3, y: props.chartData.inc, y0: props.chartData.exp, label: \"Прибуток\", labelNumber: props.chartData.profit},        \r\n      ]}\r\n      events={[\r\n        {\r\n          target: \"data\",\r\n          eventHandlers: {\r\n            onClick: () => {\r\n              return [{\r\n                target: \"labels\",\r\n                mutation: (props) => {\r\n                  return props.text === `${props.datum.labelNumber.toFixed(0)} грн.` ?\r\n                    null : { text: `${props.datum.labelNumber.toFixed(0)} грн.` }\r\n                }\r\n              }];\r\n            }\r\n          }\r\n        }\r\n      ]}\r\n  />\r\n  )\r\n}\r\n\r\nexport default TotalExpInc;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport TotalExpInc from './charts/TotalExpInc';\r\nimport './Statistics.css'\r\n\r\nconst Statistics = props => {\r\n  const [tablesLoaded, setTablesLoaded] = useState(false);\r\n  const [expIncProfitChartData, setExpIncProfitChartData] = useState({\r\n    exp: 0,\r\n    inc: 0,\r\n    profit: 0\r\n  })\r\n\r\n  useEffect(() => {\r\n    props.countTotalStats(props.expTable, props.incTable);\r\n    props.checkForIncErrors(props.expTable, props.incTable);\r\n    setTablesLoaded(true);\r\n  }, [props.expTable, props.incTable] )\r\n\r\n  useEffect(() => {\r\n    if (tablesLoaded) {\r\n      const newChartData = {\r\n        exp: props.totalStatsTable.exp.ware + props.totalStatsTable.exp.subware + props.totalStatsTable.exp.exp,\r\n        inc: props.totalStatsTable.inc.ware + props.totalStatsTable.inc.subware,\r\n        profit: props.totalStatsTable.inc.ware + props.totalStatsTable.inc.subware - (props.totalStatsTable.exp.ware + props.totalStatsTable.exp.subware + props.totalStatsTable.exp.exp)\r\n      }\r\n      setExpIncProfitChartData(newChartData)\r\n    }\r\n  }, [tablesLoaded])\r\n\r\n  const errors = tablesLoaded ? (\r\n    props.incErrors.map((error, index) => {\r\n      return (\r\n        <p key={index}>\r\n          <span className=\"errorMessage\">{Object.keys(error).toString()}, колір: {error[Object.keys(error)].color}, кількість: {error[Object.keys(error)].quantity}, загальна вартість {error[Object.keys(error)].totalPrice}</span>\r\n        </p>\r\n        )\r\n    })\r\n  ) : null\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"chart\">\r\n            <TotalExpInc chartData={expIncProfitChartData} />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      {props.incErrors.length > 0 &&\r\n        <Row>\r\n          <Col>\r\n            <h1>Виявлено помилки у доходах:</h1>\r\n            {errors}\r\n          </Col>\r\n        </Row> }\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    expTable: state.tables.expTable,\r\n    incTable: state.tables.incTable,\r\n    totalStatsTable: state.tables.totalStatsTable,\r\n    incErrors: state.tables.incErrors\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    countTotalStats: (expTable, incTable) => dispatch(actions.countTotalStats(expTable, incTable)),\r\n    checkForIncErrors: (expTable, incTable) => dispatch(actions.checkForIncErrors(expTable, incTable))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Statistics);","import React from 'react';\r\nimport './Spinner.css'\r\n\r\nconst spinner = () => (\r\n  <div className=\"loader\">loading... :)</div>\r\n);\r\n\r\nexport default spinner;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Transition from 'react-transition-group/Transition';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport './Backdrop.css';\r\n\r\nconst Backdrop = (props) => {    \r\n    return (\r\n      <Transition \r\n      mountOnEnter\r\n      unmountOnExit\r\n      in={props.show}\r\n      timeout={0}\r\n    >\r\n      {state => {\r\n        const cssClasses = state === 'entered' ? 'BackdropOpen' : state === 'exited' ? 'BackdropClosed' : null;\r\n        return (\r\n          <div \r\n          className={`Backdrop ${cssClasses}`} \r\n          onClick={props.hideModal}>\r\n          </div>\r\n        )\r\n      }}      \r\n    </Transition>\r\n    )     \r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    show: state.ui.gotError,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    hideModal: () => dispatch(actions.hideModal())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Backdrop);","import React from \"react\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Transition from 'react-transition-group/Transition';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport \"./Modal.css\";\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <Transition \r\n      mountOnEnter\r\n      unmountOnExit\r\n      in={props.show}\r\n      timeout={500}\r\n    >\r\n      {state => {\r\n        const cssClasses = state === 'entering' ? 'ModalOpen' : state === 'exiting' ? 'ModalClosed' : null;\r\n        return (\r\n          <div className={`Modal ${cssClasses}`}>\r\n            <h1>Проблємка</h1>\r\n              <div>\r\n              <p className=\"errorMessage\">{props.error.status}</p>\r\n              <p className=\"errorMessage\">{props.error.statusText}</p>\r\n              </div>\r\n            <button className=\"Button\" onClick={props.hideModal}>\r\n              <NavLink className=\"nav-link\" to=\"/\" exact>Повернутись</NavLink>\r\n            </button>\r\n          </div>\r\n        )\r\n      }}      \r\n    </Transition>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    show: state.ui.gotError,\r\n    error: state.ui.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    hideModal: () => dispatch(actions.hideModal())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport WorkArea from './containers/workArea/workArea';\r\nimport Auth from './containers/auth/Auth';\r\nimport Navigation from './containers/navigation/Navigation';\r\nimport Statistics from './containers/statistics/Statistics';\r\nimport Spinner from './ui/Spinner/Spinner';\r\nimport Backdrop from './ui/Backdrop/Backdrop';\r\nimport Modal from './ui/Modal/Modal';\r\nimport './App.css';\r\nimport * as actions from './store/actions/index';\r\n\r\nconst App = props => {\r\n  useEffect(() => {\r\n    props.authCheckState();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Modal />\r\n      <Backdrop show={props.gotError} />\r\n      <Navigation />\r\n      <Switch>        \r\n        <Route path=\"/workarea\" ><WorkArea /></Route>      \r\n        <Route path=\"/\" >\r\n          {!props.authData.signedIn && !props.authData.loading && <Auth /> }\r\n          {props.authData.loading && <Spinner />}\r\n          {props.authData.signedIn && !props.authData.loading && <Statistics />}\r\n        </Route>\r\n      </Switch>\r\n      {props.authData.signedIn && <Redirect to=\"/workarea\" />}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authData: state.auth,\r\n    gotError: state.ui.gotError,\r\n    error: state.ui.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    authCheckState: () => dispatch(actions.authCheckState())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  expData: {},\r\n  incData: {},\r\n  complectsData: {},\r\n  availableComplectsData: [],\r\n  lists: {\r\n    wares: [],\r\n    subwares: [],\r\n    exps: [],\r\n    colors: []\r\n  },\r\n  loaded: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_DATA_EXP:\r\n      return {\r\n        ...state,\r\n        expData: action.exp,\r\n        loaded: true\r\n      };\r\n    case actionTypes.SET_DATA_INC:\r\n      return {\r\n        ...state,\r\n        incData: action.inc,\r\n        loaded: true\r\n      };\r\n    case actionTypes.SET_DATA_COMPLECTS:\r\n      return {\r\n        ...state,\r\n        complectsData: action.complects,\r\n        loaded: true\r\n      };\r\n    case actionTypes.SET_DATA_AVAILABLE_COMPLECTS:\r\n      return {\r\n        ...state,\r\n        availableComplectsData: action.availableComplects,\r\n        loaded: true\r\n      };\r\n    case actionTypes.CREATE_FORM_LISTS:\r\n      return {\r\n        ...state,\r\n        lists: action.lists\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  idToken: localStorage.getItem('token'),\r\n  userId: localStorage.getItem('userId'),\r\n  signedIn: false,\r\n  loading: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.LOG_IN_START:\r\n      return {\r\n        ...state,        \r\n        loading: true\r\n      };\r\n    case actionTypes.LOG_IN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        idToken: action.idToken,\r\n        userId: action.userId,\r\n        signedIn: true,\r\n        loading: false\r\n      };\r\n    case actionTypes.LOG_OUT:\r\n      return {\r\n        ...state,\r\n        idToken: null,\r\n        userId: null,\r\n        signedIn: false\r\n      };\r\n    case actionTypes.LOG_IN_LOADING_OFF:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  expTable: {},\r\n  incTable: {},\r\n  totalStatsTable: {},\r\n  incErrors: [],\r\n  loaded: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CREATE_EXP_TABLE:\r\n      return {\r\n        ...state,\r\n        expTable: action.expTable,\r\n        loaded: true\r\n      };\r\n    case actionTypes.CREATE_INC_TABLE:\r\n      return {\r\n        ...state,\r\n        incTable: action.incTable,\r\n        loaded: true\r\n      };\r\n    case actionTypes.COUNT_TOTAL_STATS:\r\n      return {\r\n        ...state,\r\n        totalStatsTable: action.totalStatsTable\r\n      };\r\n    case actionTypes.CHECK_FOR_INC_ERRORS:\r\n      return {\r\n        ...state,\r\n        incErrors: action.incErrors\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  gotError: false,\r\n  error: ''\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SHOW_MODAL:\r\n      return {\r\n        ...state,\r\n        gotError: true,\r\n        error: action.error\r\n      };\r\n    case actionTypes.HIDE_MODAL:\r\n      return {\r\n        ...state,\r\n        gotError: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport dataReducer from \"./store/reducers/data\";\nimport authReducer from \"./store/reducers/auth\";\nimport tablesReducer from \"./store/reducers/tables\";\nimport uiReducer from \"./store/reducers/ui\";\n\nconst composeEnhancers =\n  process.env.NODE_ENV === \"development\"\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null || compose;\n\nconst rootReducer = combineReducers({\n  data: dataReducer,\n  auth: authReducer,\n  tables: tablesReducer,\n  ui: uiReducer\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter basename=\"/sena-totem\">\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}