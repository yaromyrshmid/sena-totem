{"version":3,"sources":["axios.js","store/actions/data.js","store/actions/actionTypes.js","store/actions/auth.js","components/exp/ExpForm.js","components/exp/ExpTable.js","containers/exp/Exp.js","components/inc/IncForm.js","components/inc/IncTable.js","containers/inc/Inc.js","components/storage/StorageTable.js","containers/storage/Storage.js","containers/workArea/workArea.js","containers/auth/Auth.js","containers/navigation/Navigation.js","ui/Spinner/Spinner.js","App.js","serviceWorker.js","store/reducers/data.js","store/reducers/auth.js","index.js","assets/images/logo.jpg"],"names":["instance","axios","create","baseURL","setDataExp","data","type","exp","setDataInc","inc","loginSuccess","token","userId","idToken","logOut","localStorage","removeItem","checkLogoutTimeout","expirationTime","dispatch","setTimeout","connect","state","expData","lists","auth","actions","props","waresList","wares","map","item","key","value","subwaresList","subwares","expsList","exps","colorsList","colors","initialValues","name","color","quantity","totalPrice","validate","values","errors","isNaN","onSubmit","setSubmitting","resetForm","time","Date","toISOString","split","trim","Number","post","then","response","console","log","newExpData","catch","error","isSubmitting","setFieldValue","Container","Row","Col","className","checked","onChange","list","id","disabled","toFixed","xs","span","offset","deleteRowHandler","event","target","delete","res","table","Object","keys","reverse","expKey","index","onClick","Fragment","Table","striped","bordered","hover","Exp","incData","price","income","length","line","newIncData","render","arrayHelpers","component","remove","push","loaded","incKey","complect","Inc","formSubmitHandler","onFormSubmitHandler","authData","onDeleteRowHandler","StorageTable","lastRow","quantityE","totalPriceE","quantityI","totalPriceI","quantityS","totalPriceS","expTable","incTable","ware","sort","wareName","wareIndex","colorIndex","coloredWare","priceE","incomeColorIndex","i","priceI","Infinity","priceS","colorWare","topRow","rows","wareColor","wareColorIndex","tableSubwares","subware","lastRowTable","useState","setExpTable","setIncTable","useEffect","tableE","countExpTable","tableI","countIncTable","tableIncWares","tablIncSubWares","incItem","incIndex","isColor","tableExpWares","tableExpSubWares","tableExpExp","hasOwnProperty","getDataEI","get","createFormLists","indexOf","setExpData","showError","setShowError","Tabs","defaultActiveKey","Tab","eventKey","title","signedIn","to","logIn","returnSecureToken","expirationDate","getTime","expiresIn","setItem","localId","email","password","placeholder","authState","Navbar","bg","variant","exact","Brand","Image","src","Logo","Nav","spinner","authCheckState","getItem","path","loading","Boolean","window","location","hostname","match","initialState","reducer","action","composeEnhancers","compose","rootReducer","combineReducers","dataReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.12944cdd.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://sena-totem.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios';\r\n\r\nexport const setDataExp = (data) => {\r\n  return {\r\n    type: actionTypes.SET_DATA_EXP,\r\n    exp: data\r\n  };\r\n};\r\n\r\nexport const setDataInc = (data) => {\r\n  return {\r\n    type: actionTypes.SET_DATA_INC,\r\n    inc: data\r\n  };\r\n};\r\n\r\nexport const getDataEI = (idToken) => {\r\n  return dispatch => {\r\n    axios.get('/.json?auth=' + idToken)\r\n    .then( res => {\r\n      console.log(res.data);\r\n      dispatch(setDataExp(res.data.exp));\r\n      dispatch(setDataInc(res.data.inc));\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  };\r\n};\r\n\r\nexport const createFormLists = (expData) => {\r\n  const wares = [];\r\n  const subwares = [];\r\n  const exps = [];\r\n  const colors = [];\r\n\r\n  Object.keys(expData).map(key => {\r\n    switch (expData[key].type) {\r\n      case 'Товар':\r\n      if (!(wares.indexOf(expData[key].name) > -1)) {\r\n        wares.push(expData[key].name)\r\n      };\r\n      break;\r\n      case 'Супутній товар':\r\n        if (!(subwares.indexOf(expData[key].name) > -1)) {\r\n          subwares.push(expData[key].name)\r\n        };\r\n      break;\r\n      case 'Витрата':\r\n        if (!(exps.indexOf(expData[key].name) > -1)) {\r\n          exps.push(expData[key].name)\r\n        };\r\n      break;\r\n      default:\r\n        break;\r\n    }\r\n    if (!(colors.indexOf(expData[key].color) > -1)) {\r\n      colors.push(expData[key].color)\r\n    };\r\n  });\r\n  wares.sort();\r\n  subwares.sort();\r\n  exps.sort();\r\n  colors.sort();\r\n  const lists = {\r\n    wares: wares,\r\n    subwares: subwares,\r\n    exps: exps,\r\n    colors: colors\r\n  }\r\n  return {\r\n    type: actionTypes.CREATE_FORM_LISTS,\r\n    lists: lists\r\n  };\r\n};","export const LOG_IN_START = 'LOG_IN_START';\r\nexport const LOG_IN = 'LOG_IN';\r\nexport const LOG_OUT = 'LOG_OUT';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\n\r\nexport const GET_DATA_E_I = 'GET_DATA_E_I';\r\nexport const SET_DATA_EXP = 'SET_DATA_EXP';\r\nexport const SET_DATA_INC = 'SET_DATA_INC';\r\nexport const CREATE_FORM_LISTS = 'CREATE_FORM_LISTS';","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const logInStart = () => {\r\n  return {\r\n    type: actionTypes.LOG_IN_START\r\n  }\r\n}\r\n\r\nexport const loginSuccess = (token, userId) => {\r\n  return {\r\n    type: actionTypes.LOG_IN_SUCCESS,\r\n    idToken: token,\r\n    userId: userId\r\n  }\r\n}\r\n\r\nexport const logOut = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('expirationDate');\r\n  localStorage.removeItem('userId');\r\n  return {\r\n    type: actionTypes.LOG_OUT\r\n  };\r\n};\r\n\r\nexport const checkLogoutTimeout = (expirationTime) => {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(logOut());\r\n    }, expirationTime * 1000)\r\n  };\r\n};\r\n\r\nexport const logIn = (values) => {\r\n  return dispatch => {\r\n    dispatch(logInStart());\r\n    values.returnSecureToken = true;\r\n    axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDFX9LAlOi-6ONPEXG3hw22qJT5aIo91Z4', values)\r\n    .then(response => {\r\n      const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n      localStorage.setItem('token', response.data.idToken);\r\n      localStorage.setItem('userId', response.data.localId);\r\n      localStorage.setItem('expirationDate', expirationDate);\r\n      \r\n      dispatch(loginSuccess(response.data.idToken, response.data.localId));\r\n      dispatch(checkLogoutTimeout(response.data.expiresIn));\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n      \r\n    })\r\n  };\r\n}\r\n\r\nexport const authCheckState = () => {\r\n  return dispatch => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      dispatch(logOut());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(logOut());\r\n      } else {\r\n        const userId = localStorage.getItem('userId');\r\n        dispatch(loginSuccess (token, userId));\r\n        dispatch(checkLogoutTimeout((expirationDate.getTime() - new Date().getTime())/1000));\r\n      };\r\n    };\r\n  };\r\n};","import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport axios from '../../axios';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst ExpForm = props => {\r\n  \r\n  const waresList = props.lists.wares.map((item) => {\r\n    return <option key={item} value={item} />\r\n  });\r\n\r\n  const subwaresList = props.lists.subwares.map((item) => {\r\n    return <option key={item} value={item} />\r\n  });\r\n\r\n  const expsList = props.lists.exps.map((item) => {\r\n    return <option key={item} value={item} />\r\n  });\r\n\r\n  const colorsList = props.lists.colors.map((item) => {\r\n    return <option key={item} value={item} />\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n    initialValues={{ \r\n      type: '',\r\n      name: '',\r\n      color: '',\r\n      quantity: '',\r\n      totalPrice: ''\r\n    }}\r\n    validate={values => {\r\n      let errors = {};\r\n      if (!values.type) {\r\n        errors.type = 'Необхідно обрати категорію!'\r\n      }\r\n      if (!values.name) {\r\n        errors.name = 'Необхідно внести назву!'\r\n      }\r\n      if (isNaN(values.quantity) || ((values.quantity === 0 || values.quantity === '') && (values.type === 'Товар' || values.type === 'Супутній товар'))) {\r\n        errors.quantity = 'Невірна кількість!'\r\n      }\r\n      if (!values.totalPrice || isNaN(values.totalPrice)) {\r\n        errors.totalPrice = 'Невірна вартість!'\r\n      }\r\n\r\n      return errors;\r\n    }}\r\n    onSubmit={(values, { setSubmitting, resetForm }, initialValues) => {\r\n      values.time = new Date().toISOString().split('T')[0];\r\n      if(values.color.trim() === '') {\r\n        values.color = 'н/з';\r\n      }\r\n      values.quantity = Number(values.quantity);\r\n      values.totalPrice = Number(values.totalPrice);\r\n      axios.post('/exp.json?auth=' + props.idToken, values)\r\n      .then(response => {\r\n        console.log(response);\r\n        setSubmitting(false);\r\n        const newExpData = {\r\n          ...props.expData,\r\n          [response.data.name]: values\r\n        };\r\n        props.setDataExp(newExpData);        \r\n        resetForm(initialValues);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n    }}\r\n  >\r\n    {({ isSubmitting, values, setFieldValue }) => (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Form>\r\n              <Row>\r\n                <Col>                  \r\n                  <Field\r\n                    className=\"radioInput\"\r\n                    type=\"radio\"\r\n                    name=\"type\"\r\n                    value=\"Товар\"\r\n                    checked={values.type === \"Товар\"}\r\n                    onChange={() => setFieldValue(\"type\", \"Товар\")}\r\n                  />\r\n                  <label>Товар</label>                  \r\n                  <Field\r\n                    className=\"radioInput\"\r\n                    type=\"radio\"\r\n                    name=\"type\"\r\n                    value=\"Супутній товар\"\r\n                    checked={values.type === \"Супутній товар\"}\r\n                    onChange={() => setFieldValue(\"type\", \"Супутній товар\")}\r\n                  />\r\n                  <label>Супутній товар</label>                  \r\n                  <Field\r\n                    className=\"radioInput\"\r\n                    type=\"radio\"\r\n                    name=\"type\"\r\n                    value=\"Витрата\"\r\n                    checked={values.type === \"Витрата\"}\r\n                    onChange={() => setFieldValue(\"type\", \"Витрата\")}\r\n                  />\r\n                  <label>Витрата</label>\r\n                  <span className=\"errorMessage\">\r\n                    <ErrorMessage name=\"type\" />\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col>\r\n                  <label>Назва</label>\r\n                  <Field name=\"name\" list=\"name\" />              \r\n                    <datalist id=\"name\">\r\n                      {values.type === 'Товар' && waresList}\r\n                      {values.type === 'Супутній товар' && subwaresList}\r\n                      {values.type === 'Витрата' && expsList}\r\n                    </datalist>\r\n                  <span className=\"errorMessage\">\r\n                    <ErrorMessage name=\"name\" />\r\n                  </span>                  \r\n                  <label>Колір</label>\r\n                  <Field name=\"color\" list=\"color\" />              \r\n                    <datalist id=\"color\">\r\n                      {colorsList}\r\n                    </datalist>        \r\n                  \r\n                  <label>Кількість</label>\r\n                  <Field \r\n                    className=\"input-number\"\r\n                    name=\"quantity\" \r\n                    type=\"number\"         \r\n                    disabled={values.type === 'Витрата'}/>  \r\n                  <span className=\"errorMessage\">\r\n                    <ErrorMessage name=\"quantity\" />\r\n                  </span>                     \r\n                  <label>Вартість</label>\r\n                  <Field className=\"input-number\" name=\"totalPrice\" type=\"number\"/>\r\n                  <span className=\"errorMessage\">\r\n                    <ErrorMessage name=\"totalPrice\" />\r\n                  </span>                        \r\n                  <label>Ціна за одиницю</label>\r\n                  <Field \r\n                    className=\"input-number\"\r\n                    name=\"price\" \r\n                    value={(isNaN(values.totalPrice / values.quantity) || values.type === 'Витрата') ? 0 : (values.totalPrice / values.quantity).toFixed(2)} \r\n                    onChange={() => setFieldValue(\"price\", values.totalPrice / values.quantity)}\r\n                    disabled/>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>                            \r\n                <Col xs={{span: 3, offset: 9}}>\r\n                  <button className=\"submitData\" type=\"submit\" disabled={isSubmitting}>\r\n                    Внести\r\n                  </button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )}\r\n  </Formik>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    expData: state.data.expData,\r\n    lists: state.data.lists,\r\n    idToken: state.auth.idToken\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setDataExp: (expData) => dispatch(actions.setDataExp(expData))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpForm);","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport axios from '../../axios';\r\nimport * as actions from '../../store/actions/index';\r\n\r\n\r\nconst ExpTable = props => {\r\n  const deleteRowHandler = (event) => {\r\n    const id = event.target.id;\r\n    axios.delete('/exp/' + id + '.json?auth=' + props.idToken)\r\n    .then( res => {\r\n      console.log(res);\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n    const newExpData = {};\r\n    for (const key in props.expData) {\r\n      if (key !== id) {\r\n        newExpData[key] = props.expData[key]\r\n      }\r\n    }\r\n    props.setDataExp(newExpData);\r\n  }\r\n\r\n  \r\n  const table = (!props.expData) ? null : (\r\n    Object.keys(props.expData).reverse().map((expKey, index) => {\r\n      return (\r\n        <tr key={expKey}>\r\n          <td>{index+1}</td>\r\n          <td>{props.expData[expKey].time}</td>\r\n          <td>{props.expData[expKey].type}</td>\r\n          <td>{props.expData[expKey].name}</td>\r\n          <td>{props.expData[expKey].color}</td>\r\n          <td>{props.expData[expKey].quantity}</td>\r\n          <td>{props.expData[expKey].totalPrice}</td>\r\n          <td>{(props.expData[expKey].totalPrice / props.expData[expKey].quantity).toFixed(2)}</td>\r\n          <td><button id={expKey} onClick={deleteRowHandler}>x</button></td>\r\n        </tr>\r\n      )\r\n    }) \r\n  )  \r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Дата</th>\r\n            <th>Тип</th>\r\n            <th>Назва</th>\r\n            <th>Колір</th>\r\n            <th>Кількість</th>\r\n            <th>Вартість</th>\r\n            <th>Ціна за одиницю</th>\r\n            <th>Видалити</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {table}\r\n        </tbody>\r\n      </Table>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    expData: state.data.expData,\r\n    idToken: state.auth.idToken\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setDataExp: (expData) => dispatch(actions.setDataExp(expData))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpTable);","import React from 'react';\r\n\r\nimport ExpForm from '../../components/exp/ExpForm';\r\nimport ExpTable from '../../components/exp/ExpTable';\r\n\r\nconst Exp = props => {\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ExpForm />\r\n      <ExpTable />\r\n    </React.Fragment>\r\n  )\r\n};\r\n\r\nexport default Exp;","import React from 'react';\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from 'formik';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport axios from '../../axios';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst IncForm = props => {\r\n  const waresList = props.lists.wares.map((item) => {\r\n    return <option key={item} value={item}>{item}</option>\r\n  });\r\n\r\n  const subwaresList = props.lists.subwares.map((item) => {\r\n    return <option key={item} value={item}>{item}</option>\r\n  });\r\n\r\n  const colorsList = props.lists.colors.map((item) => {\r\n    return <option key={item} value={item}>{item}</option>\r\n  });\r\n\r\n\r\n  return (    \r\n    <Formik\r\n      initialValues={{\r\n        price: '',\r\n        income: [\r\n          {\r\n            type: '',\r\n            name: '',\r\n            color: 'н/з',\r\n            quantity: ''\r\n          }\r\n        ]\r\n      }}\r\n      validate={values => {\r\n        let errors = {};\r\n        if (!values.price || isNaN(values.price)) {\r\n          errors.price = 'Невірна ціна!'\r\n        }\r\n        if (values.income.length < 1) {\r\n          errors.income = 'Не внесено товару!'\r\n        }\r\n        values.income.map((line, index) => {\r\n          if (!values.income[index].type) {\r\n            errors.type = 'Категорія товару не обрана!'\r\n          }\r\n          if (!values.income[index].name || values.income[index].name === '--Обери назву--' ) {\r\n            errors.name = 'Назва товару не обрана!'\r\n          }\r\n          if (isNaN(values.income[index].quantity) || values.income[index].quantity === 0 || values.income[index].quantity === '') {\r\n            errors.quantity = 'Невірна кількість!'\r\n          }\r\n        })\r\n        return errors;\r\n      }}\r\n\r\n      isSubmitting={false}\r\n\r\n      onSubmit={(values, { setSubmitting, resetForm }, initialValues) => {\r\n        values.time = new Date().toISOString().split('T')[0];\r\n        axios.post('/inc.json?auth=' + props.idToken, values)\r\n        .then(response => {\r\n          console.log(response);\r\n          setSubmitting(false);\r\n          const newIncData = {\r\n            ...props.incData,\r\n            [response.data.name]: values\r\n          };\r\n          props.setDataInc(newIncData);\r\n          resetForm(initialValues);\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        })\r\n      }}\r\n\r\n      render={({ isSubmitting, values, setFieldValue }) => (\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <Form>\r\n                <Row>\r\n                  <Col>\r\n                    <label>\r\n                      Ціна\r\n                      <Field className=\"input-number\" name=\"price\" type=\"number\"/>\r\n                      <span className=\"errorMessage\"><ErrorMessage name=\"price\" /></span>\r\n                      <span className=\"errorMessage\"><ErrorMessage name=\"type\"/></span>\r\n                      <span className=\"errorMessage\"><ErrorMessage name=\"name\"/></span>\r\n                      <span className=\"errorMessage\"><ErrorMessage name=\"quantity\"/></span>    \r\n                    </label>\r\n                  </Col>\r\n                </Row>\r\n                <FieldArray\r\n                  name=\"income\"\r\n                  render={arrayHelpers => (\r\n                    <React.Fragment>\r\n                      {values.income && values.income.length > 0 ? (\r\n                        values.income.map((line, index) => (\r\n                          <Row key={index}>\r\n                            <Col>\r\n                              <fieldset>\r\n                                <Field\r\n                                  className=\"radioInput\"\r\n                                  type=\"radio\"\r\n                                  name={`income.${index}.type`}\r\n                                  value=\"Товар\"\r\n                                  checked={values.income[index].type === \"Товар\"}\r\n                                  onChange={() => setFieldValue(`income.${index}.type`, \"Товар\")}\r\n                                />\r\n                                <label>Товар</label>\r\n\r\n                              \r\n                                <Field\r\n                                  className=\"radioInput\"\r\n                                  type=\"radio\"\r\n                                  name={`income.${index}.type`}\r\n                                  value=\"Супутній товар\"\r\n                                  checked={values.income[index].type === \"Супутній товар\"}\r\n                                  onChange={() => setFieldValue(`income.${index}.type`, \"Супутній товар\")}\r\n                                />\r\n                                <label>Супутній товар</label>\r\n                              </fieldset>\r\n                              <fieldset>\r\n                                <label>Назва</label>\r\n                                <Field component=\"select\" name={`income.${index}.name`} >\r\n                                  <option value={'--Обери назву--'}>--Обери назву--</option>\r\n                                  {values.income[index].type === 'Товар' && waresList}\r\n                                  {values.income[index].type === 'Супутній товар' && subwaresList}\r\n                                </Field>    \r\n                              \r\n                                <label>Колір</label>\r\n                                <Field component=\"select\" name={`income.${index}.color`}>\r\n                                  {colorsList}\r\n                                </Field>\r\n                                \r\n                                <label>Кількість</label>\r\n                                <Field className=\"input-number\" name={`income.${index}.quantity`} type=\"number\"/>                          \r\n                              </fieldset>\r\n                              <button\r\n                                className=\"button-x\"\r\n                                type=\"button\"\r\n                                onClick={() => arrayHelpers.remove(index)} // remove a friend from the list\r\n                              >\r\n                                x\r\n                              </button>\r\n                            </Col>\r\n                          </Row>\r\n                        ))\r\n                      ) : null \r\n                      }\r\n                      <Row>\r\n                        <Col>\r\n                          <button type=\"button\" onClick={() => {\r\n                            arrayHelpers.push({\r\n                            type: '',\r\n                            name: 'Обери назву',\r\n                            color: 'н/з',\r\n                            quantity: ''                          \r\n                            })\r\n                          }}>                    \r\n                            Додати рядок\r\n                          </button>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col xs={{ span: 3, offset: 9 }}>\r\n                          <button className=\"submitData\" type=\"submit\" disabled={isSubmitting}>Внести</button>\r\n                        </Col>\r\n                      </Row>\r\n                    </React.Fragment>\r\n                  )}\r\n                />\r\n              </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      )}\r\n    />\r\n\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    incData: state.data.incData,\r\n    lists: state.data.lists,\r\n    idToken: state.auth.idToken\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setDataInc: (incData) => dispatch(actions.setDataInc(incData))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IncForm);","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport axios from '../../axios';\r\n\r\nimport * as actions from '../../store/actions/index';\r\n\r\n\r\nconst IncTable = props => {\r\n  const deleteRowHandler = (event) => {\r\n    const id = event.target.id;\r\n    axios.delete('/inc/' + id + '.json?auth=' + props.idToken)\r\n    .then( res => {\r\n      console.log(res);\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n    const newIncData = {};\r\n    for (const key in props.incData) {\r\n      if (key !== id) {\r\n        newIncData[key] = props.incData[key]\r\n      }\r\n    }\r\n    props.setDataInc(newIncData);\r\n  }\r\n\r\n\r\n  const table = props.loaded ? (\r\n    Object.keys(props.incData).reverse().map((incKey, index) => {\r\n      const complect = props.incData[incKey].income.map((line, index) => {\r\n        return (\r\n          <tr key={`${incKey}_${index}`}>\r\n            <td></td>\r\n            <td></td>\r\n            <td>{line.type}</td>\r\n            <td>{line.name}</td>\r\n            <td>{line.color}</td>\r\n            <td>{line.quantity}</td>\r\n            <td></td>\r\n            <td></td>\r\n          </tr>\r\n        )\r\n      })\r\n      return (\r\n        <tbody key={incKey}>\r\n          <tr>\r\n            <td>{index+1}</td>\r\n            <td>{props.incData[incKey].time}</td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td>{props.incData[incKey].price}</td>\r\n            <td><button id={incKey} onClick={deleteRowHandler}>x</button></td>\r\n          </tr>\r\n          {complect}\r\n        </tbody>\r\n      )\r\n    }) \r\n  ) : null;  \r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Дата</th>\r\n            <th>Тип</th>\r\n            <th>Назва</th>\r\n            <th>Колір</th>\r\n            <th>Кількість</th>\r\n            <th>Ціна</th>\r\n            <th>Видалити</th>           \r\n          </tr>\r\n        </thead>\r\n        {table}\r\n      </Table>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    incData: state.data.incData,\r\n    loaded: state.data.loaded,\r\n    idToken: state.auth.idToken\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setDataInc: (incData) => dispatch(actions.setDataInc(incData))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IncTable);","import React from 'react';\r\n\r\nimport IncForm from '../../components/inc/IncForm';\r\nimport IncTable from '../../components/inc/IncTable';\r\n\r\nconst Inc = props => {\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <IncForm \r\n        formSubmitHandler={props.onFormSubmitHandler}\r\n        list={props.list}\r\n        authData={props.authData}\r\n        />\r\n      <IncTable deleteRowHandler={props.onDeleteRowHandler} />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Inc;","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\n\r\nconst StorageTable = props => {\r\n\r\n  //Creating form for last summing row\r\n  const lastRow = {\r\n    quantityE: 0,\r\n    totalPriceE: 0,\r\n    quantityI: 0,\r\n    totalPriceI: 0,\r\n    quantityS: 0,\r\n    totalPriceS: 0\r\n  };\r\n\r\n  //Creating storage table\r\n  const table = (!props.expTable && !props.incTable) ? null : (\r\n    //Iterating through wares in expTable\r\n    Object.keys(props.expTable.ware).sort().map((wareName, wareIndex) => {\r\n      //Creating new ware object\r\n      const ware = {};\r\n      ware.name = wareName;\r\n      ware.colors = [];\r\n      //Pushing colors into ware object\r\n      for (let colorIndex = 0; colorIndex < props.expTable.ware[wareName].length; colorIndex++ ) {\r\n        //Creating color object\r\n        const coloredWare = {};\r\n        coloredWare.color = props.expTable.ware[wareName][colorIndex].color;\r\n        coloredWare.quantityE = props.expTable.ware[wareName][colorIndex].quantity;\r\n        coloredWare.totalPriceE = props.expTable.ware[wareName][colorIndex].totalPrice;\r\n        coloredWare.priceE = props.expTable.ware[wareName][colorIndex].price;\r\n        //Checking if ware is in incTable\r\n        if (props.incTable.ware[wareName]) {\r\n          \r\n          //Checking if ware has same color in incTable\r\n          let incomeColorIndex = false;\r\n          for (let i = 0; i < props.incTable.ware[wareName].length; i++) {\r\n            if (props.incTable.ware[wareName][i].color === coloredWare.color) {\r\n              incomeColorIndex = i;\r\n            } \r\n          }\r\n          //Passing income info to the colored ware\r\n          //If color exists in income\r\n          if (typeof incomeColorIndex == 'number') {\r\n            coloredWare.quantityI = props.incTable.ware[wareName][incomeColorIndex].quantity;\r\n            coloredWare.totalPriceI =  props.incTable.ware[wareName][incomeColorIndex].totalPrice;\r\n            coloredWare.priceI = (props.incTable.ware[wareName][incomeColorIndex].price !== Infinity) ? props.incTable.ware[wareName][incomeColorIndex].price : 0;\r\n            coloredWare.quantityS = coloredWare.quantityE - coloredWare.quantityI;\r\n            coloredWare.priceS = coloredWare.priceI ? coloredWare.priceI : coloredWare.priceE;\r\n            coloredWare.totalPriceS = coloredWare.priceS * coloredWare.quantityS;\r\n          } \r\n          //If color doesn't exist in income\r\n          else {\r\n            coloredWare.quantityI = 0;\r\n            coloredWare.totalPriceI = 0;\r\n            coloredWare.priceI = 0;\r\n            coloredWare.quantityS = coloredWare.quantityE;\r\n            coloredWare.totalPriceS = coloredWare.totalPriceE;\r\n            coloredWare.priceS = coloredWare.priceE;\r\n          }          \r\n        //If ware doesn't exist in income\r\n        } else {\r\n          coloredWare.quantityI = 0;\r\n          coloredWare.totalPriceI = 0;\r\n          coloredWare.priceI = 0;\r\n          coloredWare.quantityS = coloredWare.quantityE;\r\n          coloredWare.totalPriceS = coloredWare.totalPriceE;\r\n          coloredWare.priceS = coloredWare.priceE;\r\n        }        \r\n\r\n        ware.colors.push(coloredWare);        \r\n      }\r\n\r\n      ware.quantityE = 0;\r\n      ware.quantityI = 0;\r\n      ware.quantityS = 0;\r\n      ware.totalPriceE = 0;\r\n      ware.totalPriceI = 0;\r\n      ware.totalPriceS = 0;\r\n      //Summing up data from colors\r\n      ware.colors.map(colorWare => {\r\n        ware.quantityE += colorWare.quantityE;\r\n        ware.quantityI += colorWare.quantityI;\r\n        ware.quantityS += colorWare.quantityS;\r\n        ware.totalPriceE += colorWare.totalPriceE;\r\n        ware.totalPriceI += colorWare.totalPriceI;\r\n        ware.totalPriceS += colorWare.totalPriceS;\r\n      })\r\n      //Counting prices for ware\r\n      ware.priceE = ware.totalPriceE / ware.quantityE;\r\n      ware.priceI = (ware.totalPriceI === 0 || ware.quantityI === 0) ? 0 : ware.totalPriceI / ware.quantityI;\r\n      ware.priceS = ware.totalPriceS / ware.quantityS;\r\n      //Creating ware row\r\n      const topRow = (\r\n        <tr>\r\n          <th>{wareIndex+1}</th>\r\n          <th>{ware.name}</th>\r\n          <th></th>\r\n          <th>{ware.quantityE}</th>\r\n          <th>{(ware.totalPriceE).toFixed(0)}</th>\r\n          <th>{(ware.priceE).toFixed(2)}</th>\r\n          <th>{ware.quantityI}</th>\r\n          <th>{(ware.totalPriceI).toFixed(0)}</th>\r\n          <th>{(ware.priceI).toFixed(2)}</th>\r\n          <th>{ware.quantityS}</th>\r\n          <th>{(ware.totalPriceS).toFixed(0)}</th>\r\n          <th>{(ware.priceS).toFixed(2)}</th>\r\n        </tr>\r\n      )\r\n      //Creating color rows\r\n      const rows = ware.colors.map((wareColor, wareColorIndex) => {\r\n        return (\r\n          <tr key={`${ware.name}_${wareColor.color}`}> \r\n            <td>{`${wareIndex+1}.${wareColorIndex+1}`}</td>\r\n            <td></td>\r\n            <td>{wareColor.color}</td>\r\n            <td>{wareColor.quantityE}</td>\r\n            <td>{(wareColor.totalPriceE).toFixed(0)}</td>\r\n            <td>{(wareColor.priceE).toFixed(2)}</td>\r\n            <td>{wareColor.quantityI}</td>\r\n            <td>{(wareColor.totalPriceI).toFixed(0)}</td>\r\n            <td>{(wareColor.priceI).toFixed(2)}</td>\r\n            <td>{wareColor.quantityS}</td>\r\n            <td>{(wareColor.totalPriceS).toFixed(0)}</td>\r\n            <td>{(wareColor.priceS).toFixed(2)}</td>\r\n          </tr>\r\n        )\r\n      })\r\n      //Amending total row\r\n      lastRow.quantityE += ware.quantityE;\r\n      lastRow.totalPriceE += ware.totalPriceE;\r\n      lastRow.quantityI += ware.quantityI;\r\n      lastRow.totalPriceI += ware.totalPriceI;\r\n      lastRow.quantityS += ware.quantityS;\r\n      lastRow.totalPriceS += ware.totalPriceS;\r\n\r\n      return (\r\n        <tbody key={wareName}>\r\n          {topRow}\r\n          {rows}\r\n        </tbody>\r\n      )    \r\n    })\r\n  )\r\n\r\n    //Creating storage subwarestable\r\n    const tableSubwares = (!props.expTable && !props.incTable) ? null : (\r\n      //Iterating through wares in expTable\r\n      Object.keys(props.expTable.subware).sort().map((wareName, wareIndex) => {\r\n        //Creating new ware object\r\n        const ware = {};\r\n        ware.name = wareName;\r\n        ware.colors = [];\r\n        //Pushing colors into ware object\r\n        for (let colorIndex = 0; colorIndex < props.expTable.subware[wareName].length; colorIndex++ ) {\r\n          //Creating color object\r\n          const coloredWare = {};\r\n          coloredWare.color = props.expTable.subware[wareName][colorIndex].color;\r\n          coloredWare.quantityE = props.expTable.subware[wareName][colorIndex].quantity;\r\n          coloredWare.totalPriceE = props.expTable.subware[wareName][colorIndex].totalPrice;\r\n          coloredWare.priceE = props.expTable.subware[wareName][colorIndex].price;\r\n          //Checking if ware is in incTable\r\n          if (props.incTable.ware[wareName]) {\r\n            \r\n            //Checking if ware has same color in incTable\r\n            let incomeColorIndex = false;\r\n            for (let i = 0; i < props.incTable.ware[wareName].length; i++) {\r\n              if (props.incTable.ware[wareName][i].color === coloredWare.color) {\r\n                incomeColorIndex = i;\r\n              } \r\n            }\r\n            //Passing income info to the colored ware\r\n            //If color exists in income\r\n            if (typeof incomeColorIndex == 'number') {\r\n              coloredWare.quantityI = props.incTable.ware[wareName][incomeColorIndex].quantity;\r\n              coloredWare.totalPriceI =  props.incTable.ware[wareName][incomeColorIndex].totalPrice;\r\n              coloredWare.priceI = (props.incTable.ware[wareName][incomeColorIndex].price !== Infinity) ? props.incTable.ware[wareName][incomeColorIndex].price : 0;\r\n              coloredWare.quantityS = coloredWare.quantityE - coloredWare.quantityI;\r\n              coloredWare.priceS = coloredWare.priceI ? coloredWare.priceI : coloredWare.priceE;\r\n              coloredWare.totalPriceS = coloredWare.priceS * coloredWare.quantityS;\r\n            } \r\n            //If color doesn't exist in income\r\n            else {\r\n              coloredWare.quantityI = 0;\r\n              coloredWare.totalPriceI = 0;\r\n              coloredWare.priceI = 0;\r\n              coloredWare.quantityS = coloredWare.quantityE;\r\n              coloredWare.totalPriceS = coloredWare.totalPriceE;\r\n              coloredWare.priceS = coloredWare.priceE;\r\n            }          \r\n          //If ware doesn't exist in income\r\n          } else {\r\n            coloredWare.quantityI = 0;\r\n            coloredWare.totalPriceI = 0;\r\n            coloredWare.priceI = 0;\r\n            coloredWare.quantityS = coloredWare.quantityE;\r\n            coloredWare.totalPriceS = coloredWare.totalPriceE;\r\n            coloredWare.priceS = coloredWare.priceE;\r\n          }        \r\n  \r\n          ware.colors.push(coloredWare);        \r\n        }\r\n  \r\n        ware.quantityE = 0;\r\n        ware.quantityI = 0;\r\n        ware.quantityS = 0;\r\n        ware.totalPriceE = 0;\r\n        ware.totalPriceI = 0;\r\n        ware.totalPriceS = 0;\r\n        //Summing up data from colors\r\n        ware.colors.map(colorWare => {\r\n          ware.quantityE += colorWare.quantityE;\r\n          ware.quantityI += colorWare.quantityI;\r\n          ware.quantityS += colorWare.quantityS;\r\n          ware.totalPriceE += colorWare.totalPriceE;\r\n          ware.totalPriceI += colorWare.totalPriceI;\r\n          ware.totalPriceS += colorWare.totalPriceS;\r\n        })\r\n        //Counting prices for ware\r\n        ware.priceE = ware.totalPriceE / ware.quantityE;\r\n        ware.priceI = (ware.totalPriceI === 0 || ware.quantityI === 0) ? 0 : ware.totalPriceI / ware.quantityI;\r\n        ware.priceS = ware.totalPriceS / ware.quantityS;\r\n        //Creating ware row\r\n        const topRow = (\r\n          <tr>\r\n            <th>{wareIndex+1}</th>\r\n            <th>{ware.name}</th>\r\n            <th></th>\r\n            <th>{ware.quantityE}</th>\r\n            <th>{(ware.totalPriceE).toFixed(0)}</th>\r\n            <th>{(ware.priceE).toFixed(2)}</th>\r\n            <th>{ware.quantityI}</th>\r\n            <th>{(ware.totalPriceI).toFixed(0)}</th>\r\n            <th>{(ware.priceI).toFixed(2)}</th>\r\n            <th>{ware.quantityS}</th>\r\n            <th>{(ware.totalPriceS).toFixed(0)}</th>\r\n            <th>{(ware.priceS).toFixed(2)}</th>\r\n          </tr>\r\n        )\r\n        //Creating color rows\r\n        const rows = ware.colors.map((wareColor, wareColorIndex) => {\r\n          return (\r\n            <tr key={`${ware.name}_${wareColor.color}`}> \r\n              <td>{`${wareIndex+1}.${wareColorIndex+1}`}</td>\r\n              <td></td>\r\n              <td>{wareColor.color}</td>\r\n              <td>{wareColor.quantityE}</td>\r\n              <td>{(wareColor.totalPriceE).toFixed(0)}</td>\r\n              <td>{(wareColor.priceE).toFixed(2)}</td>\r\n              <td>{wareColor.quantityI}</td>\r\n              <td>{(wareColor.totalPriceI).toFixed(0)}</td>\r\n              <td>{(wareColor.priceI).toFixed(2)}</td>\r\n              <td>{wareColor.quantityS}</td>\r\n              <td>{(wareColor.totalPriceS).toFixed(0)}</td>\r\n              <td>{(wareColor.priceS).toFixed(2)}</td>\r\n            </tr>\r\n          )\r\n        })\r\n        //Amending total row\r\n        lastRow.quantityE += ware.quantityE;\r\n        lastRow.totalPriceE += ware.totalPriceE;\r\n        lastRow.quantityI += ware.quantityI;\r\n        lastRow.totalPriceI += ware.totalPriceI;\r\n        lastRow.quantityS += ware.quantityS;\r\n        lastRow.totalPriceS += ware.totalPriceS;\r\n  \r\n        return (\r\n          <tbody key={wareName}>\r\n            {topRow}\r\n            {rows}\r\n          </tbody>\r\n        )    \r\n      })\r\n    )\r\n\r\n\r\n  //Creating total row\r\n  const lastRowTable = (\r\n    <tr>\r\n      <th></th>\r\n      <th>Всього</th>\r\n      <th></th>\r\n      <th>{lastRow.quantityE}</th>\r\n      <th>{lastRow.totalPriceE}</th>\r\n      <th></th>\r\n      <th>{lastRow.quantityI}</th>\r\n      <th>{lastRow.totalPriceI}</th>\r\n      <th></th>\r\n      <th>{lastRow.quantityS}</th>\r\n      <th>{(lastRow.totalPriceS).toFixed(2)}</th>\r\n      <th></th>\r\n    </tr>\r\n  )\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Товар</th>\r\n            <th>Колір</th>\r\n            <th>Кількість виготовлено</th>\r\n            <th>Вартість виготовлено</th>\r\n            <th>Собівартість одиниці</th>\r\n            <th>Кількість продано</th>\r\n            <th>Вартість продано</th>\r\n            <th>Ціна одиниці продано</th>\r\n            <th>Кількість на складі</th>\r\n            <th>Вартість на складі</th>\r\n            <th>Ціна одиниці на складі</th>\r\n          </tr>\r\n        </thead>\r\n\r\n          {table}\r\n          {tableSubwares}\r\n        <tbody>\r\n          {lastRowTable}\r\n        </tbody>\r\n      </Table>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default StorageTable;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport StorageTable from '../../components/storage/StorageTable';\r\n\r\nconst Storage = props => {\r\n  const [expTable, setExpTable] = useState(null);\r\n  const [incTable, setIncTable] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const tableE = countExpTable();\r\n    const tableI = countIncTable();    \r\n    setExpTable(tableE);\r\n    setIncTable(tableI);\r\n  }, [props] )\r\n  \r\n  const countIncTable = () => {\r\n    const tableIncWares = {};\r\n    const tablIncSubWares = {};\r\n    //Check if incData received\r\n    if (!props.incData || !props.expData) {\r\n      return null\r\n    } else {\r\n      //Iteration through income instances\r\n      Object.keys(props.incData).map((incKey, index) => {\r\n        //Maping each income item\r\n        props.incData[incKey].income.map((incItem, incIndex) => {\r\n          //Creating object to push into income arrays\r\n          const item = {type: incItem.type}\r\n          const totalPrice = (incIndex === 0) ? props.incData[incKey].price : 0;\r\n          item[incItem.name] = {\r\n            color: incItem.color,\r\n            quantity: incItem.quantity,\r\n            totalPrice: totalPrice,\r\n            price: incItem.quantity / totalPrice\r\n          }\r\n          //Checking if object is ware\r\n          if (item.type === \"Товар\") {\r\n            //Checking if ware already exists\r\n            if (tableIncWares[props.incData[incKey].income[incIndex].name]) {\r\n              let isColor = false;\r\n              //Iterating through color of each ware\r\n              for (let i = 0; i < tableIncWares[props.incData[incKey].income[incIndex].name].length; i++ ) {\r\n                //Checking if color exists\r\n                if (tableIncWares[props.incData[incKey].income[incIndex].name][i].color === item[incItem.name].color) {\r\n                  //Amending item if color exist\r\n                  tableIncWares[props.incData[incKey].income[incIndex].name][i].quantity += item[incItem.name].quantity;\r\n                  tableIncWares[props.incData[incKey].income[incIndex].name][i].totalPrice += item[incItem.name].totalPrice;\r\n                  tableIncWares[props.incData[incKey].income[incIndex].name][i].price = tableIncWares[props.incData[incKey].income[incIndex].name][i].totalPrice / tableIncWares[props.incData[incKey].income[incIndex].name][i].quantity;\r\n                  isColor = true\r\n                } \r\n              }\r\n              //Adding array item if no such color\r\n              if (!isColor) {\r\n                tableIncWares[props.incData[incKey].income[incIndex].name].push(item[incItem.name])  \r\n              }\r\n              //Adding object if no such ware\r\n            } else {\r\n              tableIncWares[props.incData[incKey].income[incIndex].name] = []\r\n              tableIncWares[props.incData[incKey].income[incIndex].name].push(item[incItem.name])\r\n            }\r\n            \r\n          } else if (item.type === \"Супутній товар\") {\r\n            if (tablIncSubWares[props.incData[incKey].income[incIndex].name]) {\r\n              let isColor = false;\r\n              for (let i = 0; i < tablIncSubWares[props.incData[incKey].income[incIndex].name].length; i++ ) {\r\n                if (tablIncSubWares[props.incData[incKey].income[incIndex].name][i].color === item[incItem.name].color) {\r\n                  tablIncSubWares[props.incData[incKey].income[incIndex].name][i].quantity += item[incItem.name].quantity;\r\n                  tablIncSubWares[props.incData[incKey].income[incIndex].name][i].totalPrice += item[incItem.name].totalPrice;\r\n                  tablIncSubWares[props.incData[incKey].income[incIndex].name][i].price = tablIncSubWares[props.incData[incKey].income[incIndex].name][i].totalPrice / tablIncSubWares[props.incData[incKey].income[incIndex].name][i].quantity;\r\n                  isColor = true\r\n                } \r\n              }\r\n              if (!isColor) {\r\n                tablIncSubWares[props.incData[incKey].income[incIndex].name].push(item[incItem.name])\r\n              }\r\n            } else {\r\n              tablIncSubWares[props.incData[incKey].income[incIndex].name] = []\r\n              tablIncSubWares[props.incData[incKey].income[incIndex].name].push(item[incItem.name])\r\n            }\r\n          }\r\n\r\n        })\r\n\r\n      })\r\n\r\n    }\r\n    const tableInc = {\r\n      ware: tableIncWares,\r\n      subware: tablIncSubWares\r\n    }\r\n    return tableInc;\r\n  }\r\n\r\n  const countExpTable = () => {\r\n    const tableExpWares = {};\r\n    const tableExpSubWares = {};\r\n    const tableExpExp = {};\r\n    if (!props.incData || !props.expData) {\r\n      return null\r\n    } else {\r\n      // Iterating through expences\r\n      Object.keys(props.expData).map((expKey, index) => {\r\n        //Checking if is a ware\r\n        if (props.expData[expKey].type === 'Товар') {\r\n          //Checking if ware is in a table\r\n          if (tableExpWares.hasOwnProperty(props.expData[expKey].name)) {\r\n            let isColor = false;\r\n            //Checking if ware color in a table\r\n            for (let i = 0; i < tableExpWares[props.expData[expKey].name].length; i++ ) {\r\n              //Adding to table if ware color is present\r\n              if (props.expData[expKey].color === tableExpWares[props.expData[expKey].name][i].color) {\r\n                tableExpWares[props.expData[expKey].name][i].quantity += props.expData[expKey].quantity;\r\n                tableExpWares[props.expData[expKey].name][i].totalPrice += props.expData[expKey].totalPrice;\r\n                tableExpWares[props.expData[expKey].name][i].price = tableExpWares[props.expData[expKey].name][i].totalPrice / tableExpWares[props.expData[expKey].name][i].quantity;\r\n                isColor = true\r\n              } \r\n            }\r\n            //Adding to table if ware color is new\r\n            if (!isColor) {\r\n              const ware = {};\r\n              ware.color = props.expData[expKey].color;\r\n              ware.quantity = props.expData[expKey].quantity;\r\n              ware.totalPrice = props.expData[expKey].totalPrice;\r\n              ware.price = props.expData[expKey].totalPrice / props.expData[expKey].quantity;\r\n              tableExpWares[props.expData[expKey].name].push(ware);\r\n            }\r\n          } \r\n          //Adding to table if ware is new\r\n          else {\r\n            tableExpWares[props.expData[expKey].name] = [];\r\n            const ware = {};\r\n            ware.color = props.expData[expKey].color;\r\n            ware.quantity = props.expData[expKey].quantity;\r\n            ware.totalPrice = props.expData[expKey].totalPrice;\r\n            ware.price = props.expData[expKey].totalPrice / props.expData[expKey].quantity;\r\n            tableExpWares[props.expData[expKey].name].push(ware);\r\n          }\r\n        }\r\n\r\n        //Checking if is a subware\r\n        if (props.expData[expKey].type === 'Супутній товар') {\r\n          //Checking if ware is in a table\r\n          if (tableExpSubWares.hasOwnProperty(props.expData[expKey].name)) {\r\n            let isColor = false;\r\n            //Checking if ware color in a table\r\n            for (let i = 0; i < tableExpSubWares[props.expData[expKey].name].length; i++ ) {\r\n              //Adding to table if ware color is present\r\n              if (props.expData[expKey].color === tableExpSubWares[props.expData[expKey].name][i].color) {\r\n                tableExpSubWares[props.expData[expKey].name][i].quantity += props.expData[expKey].quantity;\r\n                tableExpSubWares[props.expData[expKey].name][i].totalPrice += props.expData[expKey].totalPrice;\r\n                tableExpSubWares[props.expData[expKey].name][i].price = tableExpSubWares[props.expData[expKey].name][i].totalPrice / tableExpSubWares[props.expData[expKey].name][i].quantity;\r\n                isColor = true\r\n              } \r\n            }\r\n            //Adding to table if ware color is new\r\n            if (!isColor) {\r\n              const ware = {};\r\n              ware.color = props.expData[expKey].color;\r\n              ware.quantity = props.expData[expKey].quantity;\r\n              ware.totalPrice = props.expData[expKey].totalPrice;\r\n              ware.price = props.expData[expKey].totalPrice / props.expData[expKey].quantity;\r\n              tableExpSubWares[props.expData[expKey].name].push(ware);\r\n            }\r\n          } \r\n          //Adding to table if ware is new\r\n          else {\r\n            tableExpSubWares[props.expData[expKey].name] = [];\r\n            const ware = {};\r\n            ware.color = props.expData[expKey].color;\r\n            ware.quantity = props.expData[expKey].quantity;\r\n            ware.totalPrice = props.expData[expKey].totalPrice;\r\n            ware.price = props.expData[expKey].totalPrice / props.expData[expKey].quantity;\r\n            tableExpSubWares[props.expData[expKey].name].push(ware);\r\n          }\r\n        }\r\n\r\n        //Checking if is an expence\r\n        if (props.expData[expKey].type === 'Витрата') {\r\n          //Checking if ware is in a table\r\n          if (tableExpExp.hasOwnProperty(props.expData[expKey].name)) {\r\n            let isColor = false;\r\n            //Checking if ware color in a table\r\n            for (let i = 0; i < tableExpExp[props.expData[expKey].name].length; i++ ) {\r\n              //Adding to table if ware color is present\r\n              if (props.expData[expKey].color === tableExpExp[props.expData[expKey].name][i].color) {\r\n                tableExpExp[props.expData[expKey].name][i].quantity += props.expData[expKey].quantity;\r\n                tableExpExp[props.expData[expKey].name][i].totalPrice += props.expData[expKey].totalPrice;\r\n                tableExpExp[props.expData[expKey].name][i].price = tableExpExp[props.expData[expKey].name][i].totalPrice / tableExpExp[props.expData[expKey].name][i].quantity;\r\n                isColor = true\r\n              } \r\n            }\r\n            //Adding to table if ware color is new\r\n            if (!isColor) {\r\n              const ware = {};\r\n              ware.color = props.expData[expKey].color;\r\n              ware.quantity = props.expData[expKey].quantity;\r\n              ware.totalPrice = props.expData[expKey].totalPrice;\r\n              ware.price = props.expData[expKey].totalPrice / props.expData[expKey].quantity;\r\n              tableExpExp[props.expData[expKey].name].push(ware);\r\n            }\r\n          } \r\n          //Adding to table if ware is new\r\n          else {\r\n            tableExpExp[props.expData[expKey].name] = [];\r\n            const ware = {};\r\n            ware.color = props.expData[expKey].color;\r\n            ware.quantity = props.expData[expKey].quantity;\r\n            ware.totalPrice = props.expData[expKey].totalPrice;\r\n            ware.price = props.expData[expKey].totalPrice / props.expData[expKey].quantity;\r\n            tableExpExp[props.expData[expKey].name].push(ware);\r\n          }\r\n        }\r\n\r\n        return '';          \r\n      })      \r\n    }\r\n    const tableExp = {\r\n      ware: tableExpWares,\r\n      subware: tableExpSubWares,\r\n      exp: tableExpExp\r\n    }\r\n    return tableExp;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <StorageTable expTable={expTable} incTable={incTable}/>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    expData: state.data.expData,\r\n    incData: state.data.incData\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Storage);","import React, { useState, useEffect } from 'react';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport axios from '../../axios';\r\n\r\n\r\nimport Exp from '../exp/Exp';\r\nimport Inc from '../inc/Inc';\r\nimport Storage from '../storage/Storage';\r\nimport './workArea.css';\r\nimport './Forms.css';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst WorkArea = props => {\r\n  //Ставлю стейт нал\r\n  const [expData, setExpData] = useState({});\r\n  const [incData, setIncData] = useState(null);\r\n  const [showError, setShowError] = useState(false);\r\n\r\n  //З серва тягну дані для наповнення \r\n  useEffect(() => {\r\n    props.getDataEI(props.authData.idToken);\r\n  }, [showError] )\r\n\r\n  //На основі даних з серва хочу замутити новий стейт\r\n  useEffect(() => {\r\n    if (props.expData && Object.keys(props.expData).length > 0 ) {\r\n      props.createFormLists(props.expData)\r\n    }\r\n  }, [props.expData])\r\n\r\n  const onDeleteRowHandlerExp = (event) => {\r\n    const id = event.target.id;\r\n    axios.delete('/exp/' + id + '.json?auth=' + props.authData.idToken)\r\n    .then( res => {\r\n      console.log(res);\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n      setShowError(true);\r\n    })\r\n    const newExpData = {};\r\n    for (const key in expData) {\r\n      if (key !== id) {\r\n        newExpData[key] = expData[key]\r\n      }\r\n    }\r\n    setExpData(newExpData);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Tabs defaultActiveKey=\"storage\" id=\"uncontrolled-tab-example\">\r\n        <Tab eventKey=\"exp\" title=\"Витрати\">\r\n          <Exp \r\n            onDeleteRowHandler={onDeleteRowHandlerExp}\r\n          />\r\n        </Tab>\r\n        <Tab eventKey=\"inc\" title=\"Доходи\">\r\n          <Inc />\r\n        </Tab>\r\n        <Tab eventKey=\"storage\" title=\"Склад\">\r\n          <Storage />\r\n        </Tab>\r\n      </Tabs>\r\n      {!props.authData.signedIn && <Redirect to=\"/sena-totem\" />}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authData: state.auth,\r\n    expData: state.data.expData,\r\n    incData: state.data.incData\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getDataEI: (idToken) => dispatch(actions.getDataEI(idToken)),\r\n    createFormLists: (expData) => dispatch(actions.createFormLists(expData))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkArea);","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './Auth.css'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst Auth = (props) => {  \r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"authForm\">\r\n            <Formik      \r\n            initialValues={{ \r\n              email: '',\r\n              password: ''\r\n            }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n              props.logIn(values);\r\n              setSubmitting(false);\r\n            }}\r\n          >\r\n            {({ isSubmitting, values, setFieldValue }) => (\r\n              <Form>\r\n                    <Field\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Email\"           \r\n                    />\r\n\r\n                    <Field\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      placeholder=\"Password\"              \r\n                    />\r\n                <button type=\"submit\" disabled={isSubmitting}>\r\n                  Log In\r\n                </button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logIn: (values) => dispatch(actions.logIn(values)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Navbar, Nav, Image } from 'react-bootstrap';\r\n\r\nimport Logo from '../../assets/images/logo.jpg';\r\nimport './Navigation.css';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst Navigation = props => {\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <NavLink to=\"/sena-totem\" exact>\r\n        <Navbar.Brand><Image src={Logo}/> </Navbar.Brand>\r\n      </NavLink>\r\n      <Nav className=\"mr-auto\">\r\n        <NavLink className=\"nav-link\" to=\"/sena-totem\" exact>Home</NavLink>\r\n        {props.authState && <NavLink className=\"nav-link\" to=\"/sena-totem/workarea\" exact>Work Area</NavLink>}\r\n        {props.authState && <button className=\"logout\" onClick={props.logOut}>Log Out</button >}\r\n      </Nav>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authState: state.auth.signedIn\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logOut: () => dispatch(actions.logOut()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);","import React from 'react';\r\nimport './Spinner.css'\r\n\r\nconst spinner = () => (\r\n  <div className=\"loader\">loading... :)</div>\r\n);\r\n\r\nexport default spinner;","import React, { useEffect } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport WorkArea from './containers/workArea/workArea';\nimport Auth from './containers/auth/Auth';\nimport Navigation from './containers/navigation/Navigation';\nimport Spinner from './ui/Spinner/Spinner'\nimport './App.css';\nimport * as actions from './store/actions/index';\n\nconst App = props => {\n  useEffect(() => {\n    props.authCheckState();\n  }, []);\n\n\n  return (\n    <React.Fragment>\n      <Navigation />\n      <Switch>        \n        <Route path=\"/sena-totem/workarea\" ><WorkArea /></Route>      \n        <Route path=\"/\" >\n          {!props.authData.signedIn && !props.authData.loading && <Auth /> }\n          {props.authData.loading && <Spinner />}\n        </Route>\n      </Switch>\n      {props.authData.signedIn && <Redirect to=\"/sena-totem/workarea\" />}\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    authData: state.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    authCheckState: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  expData: {},\r\n  incData: {},\r\n  lists: {    \r\n    wares: [],\r\n    subwares: [],\r\n    exps: [],\r\n    colors: []\r\n  },\r\n  loaded: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_DATA_EXP:\r\n      return {\r\n        ...state,\r\n        expData: action.exp,\r\n        loaded: true\r\n      };\r\n    case actionTypes.SET_DATA_INC:\r\n      return {\r\n        ...state,\r\n        incData: action.inc,\r\n        loaded: true\r\n      };\r\n    case actionTypes.CREATE_FORM_LISTS:\r\n      return {        \r\n        ...state,\r\n        lists: action.lists\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  idToken: localStorage.getItem('token'),\r\n  userId: localStorage.getItem('userId'),\r\n  signedIn: false,\r\n  loading: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.LOG_IN_START:\r\n      return {\r\n        ...state,        \r\n        loading: true\r\n      };\r\n    case actionTypes.LOG_IN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        idToken: action.idToken,\r\n        userId: action.userId,\r\n        signedIn: true,\r\n        loading: false\r\n      };\r\n    case actionTypes.LOG_OUT:\r\n      return {\r\n        ...state,\r\n        idToken: null,\r\n        userId: null,\r\n        signedIn: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport dataReducer from './store/reducers/data';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ?window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers ({\n  data: dataReducer,\n  auth: authReducer\n})\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.edfb4b75.jpg\";"],"sourceRoot":""}