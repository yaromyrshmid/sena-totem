{"version":3,"sources":["assets/images/logo.jpg","axios.js","store/actions/data.js","store/actions/actionTypes.js","store/actions/auth.js","store/actions/tables.js","store/actions/ui.js","components/exp/ExpForm.js","components/exp/ExpTable.js","components/inc/IncForm.js","components/inc/IncTable.js","components/storage/StorageTable.js","containers/storage/Storage.js","containers/complects/ComplectsForm.js","containers/complects/ComplectsTable.js","containers/availableComplects/availableComplectsTable.js","containers/workArea/workArea.js","containers/auth/Auth.js","containers/navigation/Navigation.js","containers/statistics/charts/TotalExpInc.js","containers/statistics/Statistics.js","ui/Spinner/Spinner.js","ui/Backdrop/Backdrop.js","ui/Modal/Modal.js","App.js","serviceWorker.js","store/reducers/data.js","store/reducers/auth.js","store/reducers/tables.js","store/reducers/ui.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","setDataExp","data","type","exp","setDataInc","inc","setDataComplects","complects","getDataEI","idToken","dispatch","get","then","res","console","log","balance","availableComplects","catch","error","actions","response","loginSuccess","token","userId","logOut","localStorage","removeItem","checkLogoutTimeout","expirationTime","setTimeout","showModal","connect","state","expData","lists","auth","props","waresList","wares","map","item","key","value","subwaresList","subwares","expsList","exps","colorsList","colors","initialValues","name","color","quantity","totalPrice","validate","values","errors","isNaN","onSubmit","setSubmitting","resetForm","time","Date","toISOString","split","trim","Number","post","newExpData","isSubmitting","setFieldValue","Container","Row","Col","className","checked","onChange","list","id","disabled","toFixed","xs","span","offset","deleteRowHandler","event","target","delete","table","Object","keys","reverse","expKey","index","onClick","Fragment","Table","striped","bordered","hover","incData","complectsData","useState","complectErrorMessage","setComplectErrorMessage","price","income","length","line","newIncData","render","complect","push","copyColor","complectFormHandler","arrayHelpers","component","remove","loaded","incKey","expTable","tables","incTable","lastRow","quantityE","totalPriceE","quantityI","totalPriceI","quantityS","totalPriceS","handleArchive","a","wareKey","find","put","archived","ware","sort","wareName","wareIndex","colorIndex","coloredWare","priceE","incomeColorIndex","i","priceI","Infinity","priceS","colorWare","topRow","style","backgroundColor","rows","wareColor","wareColorIndex","tableSubwares","subware","lastRowTable","createExpTable","tableExpWares","tableExpSubWares","tableExpExp","hasOwnProperty","isColor","createIncTable","tableIncWares","tableIncSubWares","incItem","incIndex","useEffect","checkIfComplectExists","complectExists","newComplectsData","complectKey","availableComplectsData","wareTable","minQuantity","items","itemIndex","authData","gotError","ui","createFormLists","indexOf","Tabs","defaultActiveKey","Tab","eventKey","title","signedIn","to","logIn","returnSecureToken","expirationDate","getTime","expiresIn","setItem","localId","email","password","placeholder","authState","Navbar","bg","variant","exact","Brand","Image","src","Logo","Nav","TotalExpInc","x","y","chartData","y0","label","labelNumber","profit","events","eventHandlers","mutation","text","datum","totalStatsTable","incErrors","countTotalStats","coloredItem","checkForIncErrors","totalIncTable","totalExpTable","coloredInc","expNotIncluded","coloredExp","tablesLoaded","setTablesLoaded","expIncProfitChartData","setExpIncProfitChartData","newChartData","toString","spinner","show","hideModal","Transition","mountOnEnter","unmountOnExit","in","timeout","cssClasses","status","statusText","authCheckState","getItem","path","loading","Boolean","window","location","hostname","match","initialState","reducer","action","composeEnhancers","compose","rootReducer","combineReducers","dataReducer","authReducer","tablesReducer","uiReducer","store","createStore","applyMiddleware","thunk","app","basename","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1229410b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.edfb4b75.jpg\";","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://sena-totem.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nexport const setDataExp = data => {\r\n  return {\r\n    type: actionTypes.SET_DATA_EXP,\r\n    exp: data\r\n  };\r\n};\r\n\r\nexport const setDataInc = data => {\r\n  return {\r\n    type: actionTypes.SET_DATA_INC,\r\n    inc: data\r\n  };\r\n};\r\n\r\nexport const setDataComplects = data => {\r\n  return {\r\n    type: actionTypes.SET_DATA_COMPLECTS,\r\n    complects: data\r\n  };\r\n};\r\n\r\nexport const setDataAvailableComplects = data => {\r\n  return {\r\n    type: actionTypes.SET_DATA_AVAILABLE_COMPLECTS,\r\n    availableComplects: data\r\n  };\r\n};\r\n\r\nexport const getDataEI = idToken => {\r\n  return dispatch => {\r\n    axios\r\n      .get(\"/.json?auth=\" + idToken)\r\n      .then(res => {\r\n        console.log(res.data);\r\n        dispatch(setDataExp(res.data.balance.exp));\r\n        dispatch(setDataInc(res.data.balance.inc));\r\n        dispatch(setDataComplects(res.data.balance.complects));\r\n        dispatch(setDataAvailableComplects(res.data.availableComplects));\r\n      })\r\n      .catch(error => {\r\n        dispatch(actions.showModal(error.response));\r\n      });\r\n  };\r\n};\r\n\r\nexport const createFormLists = expData => {\r\n  const wares = [];\r\n  const subwares = [];\r\n  const exps = [];\r\n  const colors = [];\r\n\r\n  Object.keys(expData).map(key => {\r\n    switch (expData[key].type) {\r\n      case \"Товар\":\r\n        if (!(wares.indexOf(expData[key].name) > -1)) {\r\n          wares.push(expData[key].name);\r\n        }\r\n        break;\r\n      case \"Супутній товар\":\r\n        if (!(subwares.indexOf(expData[key].name) > -1)) {\r\n          subwares.push(expData[key].name);\r\n        }\r\n        break;\r\n      case \"Витрата\":\r\n        if (!(exps.indexOf(expData[key].name) > -1)) {\r\n          exps.push(expData[key].name);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if (!(colors.indexOf(expData[key].color) > -1)) {\r\n      colors.push(expData[key].color);\r\n    }\r\n  });\r\n  wares.sort();\r\n  subwares.sort();\r\n  exps.sort();\r\n  colors.sort();\r\n  const lists = {\r\n    wares: wares,\r\n    subwares: subwares,\r\n    exps: exps,\r\n    colors: colors\r\n  };\r\n  return {\r\n    type: actionTypes.CREATE_FORM_LISTS,\r\n    lists: lists\r\n  };\r\n};\r\n","export const LOG_IN_START = \"LOG_IN_START\";\r\nexport const LOG_IN = \"LOG_IN\";\r\nexport const LOG_OUT = \"LOG_OUT\";\r\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\r\nexport const LOG_IN_LOADING_OFF = \"LOG_IN_LOADING_OFF\";\r\n\r\nexport const GET_DATA_E_I = \"GET_DATA_E_I\";\r\nexport const SET_DATA_EXP = \"SET_DATA_EXP\";\r\nexport const SET_DATA_INC = \"SET_DATA_INC\";\r\nexport const SET_DATA_COMPLECTS = \"SET_DATA_COMPLECTS\";\r\nexport const SET_DATA_AVAILABLE_COMPLECTS = \"SET_DATA_AVAILABLE_COMPLECTS\";\r\nexport const CREATE_FORM_LISTS = \"CREATE_FORM_LISTS\";\r\n\r\nexport const CREATE_EXP_TABLE = \"CREATE_EXP_TABLE\";\r\nexport const CREATE_INC_TABLE = \"CREATE_INC_TABLE\";\r\nexport const COUNT_TOTAL_STATS = \"COUNT_TOTAL_STATS\";\r\nexport const CHECK_FOR_INC_ERRORS = \"CHECK_FOR_INC_ERRORS\";\r\n\r\nexport const SHOW_MODAL = \"SHOW_MODAL\";\r\nexport const HIDE_MODAL = \"HIDE_MODAL\";\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nexport const logInStart = () => {\r\n  return {\r\n    type: actionTypes.LOG_IN_START\r\n  }\r\n}\r\n\r\nexport const loginSuccess = (token, userId) => {\r\n  return {\r\n    type: actionTypes.LOG_IN_SUCCESS,\r\n    idToken: token,\r\n    userId: userId\r\n  }\r\n}\r\n\r\nexport const logOut = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('expirationDate');\r\n  localStorage.removeItem('userId');\r\n  return {\r\n    type: actionTypes.LOG_OUT\r\n  };\r\n};\r\n\r\nexport const checkLogoutTimeout = (expirationTime) => {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(logOut());\r\n    }, expirationTime * 1000)\r\n  };\r\n};\r\n\r\nexport const logInLoadingOff = () => {\r\n  return {\r\n    type:actionTypes.LOG_IN_LOADING_OFF\r\n  }\r\n}\r\n\r\nexport const logIn = (values) => {\r\n  return dispatch => {\r\n    dispatch(logInStart());\r\n    values.returnSecureToken = true;\r\n    axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDFX9LAlOi-6ONPEXG3hw22qJT5aIo91Z4', values)\r\n    .then(response => {\r\n      const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n      localStorage.setItem('token', response.data.idToken);\r\n      localStorage.setItem('userId', response.data.localId);\r\n      localStorage.setItem('expirationDate', expirationDate);\r\n      \r\n      dispatch(loginSuccess(response.data.idToken, response.data.localId));\r\n      dispatch(checkLogoutTimeout(response.data.expiresIn));\r\n    })\r\n    .catch(error => {\r\n      console.log(error.response);\r\n      dispatch(actions.showModal(error.response));\r\n      dispatch(logInLoadingOff());\r\n    })\r\n  };\r\n}\r\n\r\nexport const authCheckState = () => {\r\n  return dispatch => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      dispatch(logOut());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(logOut());\r\n      } else {\r\n        const userId = localStorage.getItem('userId');\r\n        dispatch(loginSuccess (token, userId));\r\n        dispatch(checkLogoutTimeout((expirationDate.getTime() - new Date().getTime())/1000));\r\n      };\r\n    };\r\n  };\r\n};","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const createExpTable = (expData) => {\r\n  const tableExpWares = {};\r\n  const tableExpSubWares = {};\r\n  const tableExpExp = {};\r\n  const expTable = {};\r\n  if (expData) {\r\n    // Iterating through expences\r\n    Object.keys(expData).map((expKey, index) => {\r\n      //Checking if is a ware\r\n      if (expData[expKey].type === \"Товар\") {\r\n        //Checking if ware is in a table\r\n        if (tableExpWares.hasOwnProperty(expData[expKey].name)) {\r\n          let isColor = false;\r\n          //Checking if ware color in a table\r\n          for (let i = 0; i < tableExpWares[expData[expKey].name].length; i++) {\r\n            //Adding to table if ware color is present\r\n            if (\r\n              expData[expKey].color ===\r\n              tableExpWares[expData[expKey].name][i].color\r\n            ) {\r\n              tableExpWares[expData[expKey].name][i].quantity +=\r\n                expData[expKey].quantity;\r\n              tableExpWares[expData[expKey].name][i].totalPrice +=\r\n                expData[expKey].totalPrice;\r\n              tableExpWares[expData[expKey].name][i].price =\r\n                tableExpWares[expData[expKey].name][i].totalPrice /\r\n                tableExpWares[expData[expKey].name][i].quantity;\r\n              isColor = true;\r\n            }\r\n          }\r\n          //Adding to table if ware color is new\r\n          if (!isColor) {\r\n            const ware = {};\r\n            ware.color = expData[expKey].color;\r\n            ware.quantity = expData[expKey].quantity;\r\n            ware.totalPrice = expData[expKey].totalPrice;\r\n            ware.price = expData[expKey].totalPrice / expData[expKey].quantity;\r\n            tableExpWares[expData[expKey].name].push(ware);\r\n            if (ware.archived) {\r\n              tableExpWares[expData[expKey].name].archived = true;\r\n            }\r\n          }\r\n        }\r\n        //Adding to table if ware is new\r\n        else {\r\n          tableExpWares[expData[expKey].name] = [];\r\n          const ware = {};\r\n          ware.color = expData[expKey].color;\r\n          ware.quantity = expData[expKey].quantity;\r\n          ware.totalPrice = expData[expKey].totalPrice;\r\n          ware.price = expData[expKey].totalPrice / expData[expKey].quantity;\r\n          tableExpWares[expData[expKey].name].push(ware);\r\n          if (ware.archived) {\r\n            tableExpWares[expData[expKey].name].archived = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      //Checking if is a subware\r\n      if (expData[expKey].type === \"Супутній товар\") {\r\n        //Checking if ware is in a table\r\n        if (tableExpSubWares.hasOwnProperty(expData[expKey].name)) {\r\n          let isColor = false;\r\n          //Checking if ware color in a table\r\n          for (\r\n            let i = 0;\r\n            i < tableExpSubWares[expData[expKey].name].length;\r\n            i++\r\n          ) {\r\n            //Adding to table if ware color is present\r\n            if (\r\n              expData[expKey].color ===\r\n              tableExpSubWares[expData[expKey].name][i].color\r\n            ) {\r\n              tableExpSubWares[expData[expKey].name][i].quantity +=\r\n                expData[expKey].quantity;\r\n              tableExpSubWares[expData[expKey].name][i].totalPrice +=\r\n                expData[expKey].totalPrice;\r\n              tableExpSubWares[expData[expKey].name][i].price =\r\n                tableExpSubWares[expData[expKey].name][i].totalPrice /\r\n                tableExpSubWares[expData[expKey].name][i].quantity;\r\n              isColor = true;\r\n            }\r\n          }\r\n          //Adding to table if ware color is new\r\n          if (!isColor) {\r\n            const ware = {};\r\n            ware.color = expData[expKey].color;\r\n            ware.quantity = expData[expKey].quantity;\r\n            ware.totalPrice = expData[expKey].totalPrice;\r\n            ware.price = expData[expKey].totalPrice / expData[expKey].quantity;\r\n            tableExpSubWares[expData[expKey].name].push(ware);\r\n          }\r\n        }\r\n        //Adding to table if ware is new\r\n        else {\r\n          tableExpSubWares[expData[expKey].name] = [];\r\n          const ware = {};\r\n          ware.color = expData[expKey].color;\r\n          ware.quantity = expData[expKey].quantity;\r\n          ware.totalPrice = expData[expKey].totalPrice;\r\n          ware.price = expData[expKey].totalPrice / expData[expKey].quantity;\r\n          tableExpSubWares[expData[expKey].name].push(ware);\r\n        }\r\n      }\r\n\r\n      //Checking if is an expence\r\n      if (expData[expKey].type === \"Витрата\") {\r\n        //Checking if ware is in a table\r\n        if (tableExpExp.hasOwnProperty(expData[expKey].name)) {\r\n          let isColor = false;\r\n          //Checking if ware color in a table\r\n          for (let i = 0; i < tableExpExp[expData[expKey].name].length; i++) {\r\n            //Adding to table if ware color is present\r\n            if (\r\n              expData[expKey].color ===\r\n              tableExpExp[expData[expKey].name][i].color\r\n            ) {\r\n              tableExpExp[expData[expKey].name][i].quantity +=\r\n                expData[expKey].quantity;\r\n              tableExpExp[expData[expKey].name][i].totalPrice +=\r\n                expData[expKey].totalPrice;\r\n              tableExpExp[expData[expKey].name][i].price =\r\n                tableExpExp[expData[expKey].name][i].totalPrice /\r\n                tableExpExp[expData[expKey].name][i].quantity;\r\n              isColor = true;\r\n            }\r\n          }\r\n          //Adding to table if ware color is new\r\n          if (!isColor) {\r\n            const ware = {};\r\n            ware.color = expData[expKey].color;\r\n            ware.quantity = expData[expKey].quantity;\r\n            ware.totalPrice = expData[expKey].totalPrice;\r\n            ware.price = expData[expKey].totalPrice / expData[expKey].quantity;\r\n            tableExpExp[expData[expKey].name].push(ware);\r\n          }\r\n        }\r\n        //Adding to table if ware is new\r\n        else {\r\n          tableExpExp[expData[expKey].name] = [];\r\n          const ware = {};\r\n          ware.color = expData[expKey].color;\r\n          ware.quantity = expData[expKey].quantity;\r\n          ware.totalPrice = expData[expKey].totalPrice;\r\n          ware.price = expData[expKey].totalPrice / expData[expKey].quantity;\r\n          tableExpExp[expData[expKey].name].push(ware);\r\n        }\r\n      }\r\n    });\r\n    expTable.ware = tableExpWares;\r\n    expTable.subware = tableExpSubWares;\r\n    expTable.exp = tableExpExp;\r\n  }\r\n  return {\r\n    type: actionTypes.CREATE_EXP_TABLE,\r\n    expTable: expTable,\r\n  };\r\n};\r\n\r\nexport const createIncTable = (incData) => {\r\n  const tableIncWares = {};\r\n  const tableIncSubWares = {};\r\n  const incTable = {};\r\n  //Check if incData received\r\n  if (incData) {\r\n    //Iteration through income instances\r\n    Object.keys(incData).map((incKey, index) => {\r\n      //Maping each income item\r\n      incData[incKey].income.map((incItem, incIndex) => {\r\n        //Creating object to push into income arrays\r\n        const item = { type: incItem.type };\r\n        const totalPrice = incIndex === 0 ? incData[incKey].price : 0;\r\n        item[incItem.name] = {\r\n          color: incItem.color,\r\n          quantity: incItem.quantity,\r\n          totalPrice: totalPrice,\r\n          price: incItem.quantity / totalPrice,\r\n        };\r\n        //Checking if object is ware\r\n        if (item.type === \"Товар\") {\r\n          //Checking if ware already exists\r\n          if (tableIncWares[incData[incKey].income[incIndex].name]) {\r\n            let isColor = false;\r\n            //Iterating through color of each ware\r\n            for (\r\n              let i = 0;\r\n              i < tableIncWares[incData[incKey].income[incIndex].name].length;\r\n              i++\r\n            ) {\r\n              //Checking if color exists\r\n              if (\r\n                tableIncWares[incData[incKey].income[incIndex].name][i]\r\n                  .color === item[incItem.name].color\r\n              ) {\r\n                //Amending item if color exist\r\n                tableIncWares[incData[incKey].income[incIndex].name][\r\n                  i\r\n                ].quantity += item[incItem.name].quantity;\r\n                tableIncWares[incData[incKey].income[incIndex].name][\r\n                  i\r\n                ].totalPrice += item[incItem.name].totalPrice;\r\n                tableIncWares[incData[incKey].income[incIndex].name][i].price =\r\n                  tableIncWares[incData[incKey].income[incIndex].name][i]\r\n                    .totalPrice /\r\n                  tableIncWares[incData[incKey].income[incIndex].name][i]\r\n                    .quantity;\r\n                isColor = true;\r\n              }\r\n            }\r\n            //Adding array item if no such color\r\n            if (!isColor) {\r\n              tableIncWares[incData[incKey].income[incIndex].name].push(\r\n                item[incItem.name]\r\n              );\r\n            }\r\n            //Adding object if no such ware\r\n          } else {\r\n            tableIncWares[incData[incKey].income[incIndex].name] = [];\r\n            tableIncWares[incData[incKey].income[incIndex].name].push(\r\n              item[incItem.name]\r\n            );\r\n          }\r\n        } else if (item.type === \"Супутній товар\") {\r\n          if (tableIncSubWares[incData[incKey].income[incIndex].name]) {\r\n            let isColor = false;\r\n            for (\r\n              let i = 0;\r\n              i <\r\n              tableIncSubWares[incData[incKey].income[incIndex].name].length;\r\n              i++\r\n            ) {\r\n              if (\r\n                tableIncSubWares[incData[incKey].income[incIndex].name][i]\r\n                  .color === item[incItem.name].color\r\n              ) {\r\n                tableIncSubWares[incData[incKey].income[incIndex].name][\r\n                  i\r\n                ].quantity += item[incItem.name].quantity;\r\n                tableIncSubWares[incData[incKey].income[incIndex].name][\r\n                  i\r\n                ].totalPrice += item[incItem.name].totalPrice;\r\n                tableIncSubWares[incData[incKey].income[incIndex].name][\r\n                  i\r\n                ].price =\r\n                  tableIncSubWares[incData[incKey].income[incIndex].name][i]\r\n                    .totalPrice /\r\n                  tableIncSubWares[incData[incKey].income[incIndex].name][i]\r\n                    .quantity;\r\n                isColor = true;\r\n              }\r\n            }\r\n            if (!isColor) {\r\n              tableIncSubWares[incData[incKey].income[incIndex].name].push(\r\n                item[incItem.name]\r\n              );\r\n            }\r\n          } else {\r\n            tableIncSubWares[incData[incKey].income[incIndex].name] = [];\r\n            tableIncSubWares[incData[incKey].income[incIndex].name].push(\r\n              item[incItem.name]\r\n            );\r\n          }\r\n        }\r\n      });\r\n    });\r\n    incTable.ware = tableIncWares;\r\n    incTable.subware = tableIncSubWares;\r\n  }\r\n\r\n  return {\r\n    type: actionTypes.CREATE_INC_TABLE,\r\n    incTable: incTable,\r\n  };\r\n};\r\n\r\nexport const countTotalStats = (expTable, incTable) => {\r\n  const totalStatsTable = {\r\n    exp: {\r\n      ware: 0,\r\n      subware: 0,\r\n      exp: 0,\r\n    },\r\n    inc: {\r\n      ware: 0,\r\n      subware: 0,\r\n    },\r\n  };\r\n  if (expTable && Object.keys(expTable).length > 0) {\r\n    if (\r\n      Object.keys(expTable.ware).length > 0 &&\r\n      Object.keys(expTable.subware).length > 0 &&\r\n      Object.keys(expTable.exp).length > 0\r\n    ) {\r\n      Object.keys(expTable).map((type) => {\r\n        Object.keys(expTable[type]).map((item) => {\r\n          expTable[type][item].map((coloredItem) => {\r\n            totalStatsTable.exp[type] += coloredItem.totalPrice;\r\n          });\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  if (incTable && Object.keys(incTable).length > 0) {\r\n    if (\r\n      Object.keys(incTable.ware).length > 0 &&\r\n      Object.keys(incTable.subware).length > 0\r\n    ) {\r\n      Object.keys(incTable).map((type) => {\r\n        Object.keys(incTable[type]).map((item) => {\r\n          incTable[type][item].map((coloredItem) => {\r\n            totalStatsTable.inc[type] += coloredItem.totalPrice;\r\n          });\r\n        });\r\n      });\r\n    }\r\n  }\r\n  return {\r\n    type: actionTypes.COUNT_TOTAL_STATS,\r\n    totalStatsTable: totalStatsTable,\r\n  };\r\n};\r\n\r\nexport const checkForIncErrors = (expTable, incTable) => {\r\n  const totalIncTable = {\r\n    ...incTable.ware,\r\n    ...incTable.subware,\r\n  };\r\n  const totalExpTable = {\r\n    ...expTable.ware,\r\n    ...expTable.subware,\r\n  };\r\n  const incErrors = [];\r\n\r\n  Object.keys(totalIncTable).map((inc) => {\r\n    totalIncTable[inc].map((coloredInc, index) => {\r\n      if (!totalExpTable[inc]) {\r\n        incErrors.push({ [`${inc}`]: 0 });\r\n      } else {\r\n        let expNotIncluded = true;\r\n        totalExpTable[inc].map((coloredExp) => {\r\n          if (coloredExp.color === coloredInc.color) {\r\n            expNotIncluded = false;\r\n          }\r\n        });\r\n        if (expNotIncluded) {\r\n          incErrors.push({ [`${inc}`]: coloredInc });\r\n        }\r\n      }\r\n    });\r\n  });\r\n  return {\r\n    type: actionTypes.CHECK_FOR_INC_ERRORS,\r\n    incErrors: incErrors,\r\n  };\r\n};\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport const showModal = (response) => {\r\n  return {\r\n    type: actionTypes.SHOW_MODAL,\r\n    error: response\r\n  };\r\n};\r\n\r\nexport const hideModal = () => {\r\n  return {\r\n    type: actionTypes.HIDE_MODAL\r\n  }\r\n}","import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport axios from \"../../axios\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nconst ExpForm = props => {\r\n  const waresList = props.lists.wares.map(item => {\r\n    return <option key={item} value={item} />;\r\n  });\r\n\r\n  const subwaresList = props.lists.subwares.map(item => {\r\n    return <option key={item} value={item} />;\r\n  });\r\n\r\n  const expsList = props.lists.exps.map(item => {\r\n    return <option key={item} value={item} />;\r\n  });\r\n\r\n  const colorsList = props.lists.colors.map(item => {\r\n    return <option key={item} value={item} />;\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        type: \"\",\r\n        name: \"\",\r\n        color: \"\",\r\n        quantity: \"\",\r\n        totalPrice: \"\"\r\n      }}\r\n      validate={values => {\r\n        let errors = {};\r\n        if (!values.type) {\r\n          errors.type = \"Необхідно обрати категорію!\";\r\n        }\r\n        if (!values.name) {\r\n          errors.name = \"Необхідно внести назву!\";\r\n        }\r\n        if (\r\n          isNaN(values.quantity) ||\r\n          ((values.quantity === 0 || values.quantity === \"\") &&\r\n            (values.type === \"Товар\" || values.type === \"Супутній товар\"))\r\n        ) {\r\n          errors.quantity = \"Невірна кількість!\";\r\n        }\r\n        if (!values.totalPrice || isNaN(values.totalPrice)) {\r\n          errors.totalPrice = \"Невірна вартість!\";\r\n        }\r\n\r\n        return errors;\r\n      }}\r\n      onSubmit={(values, { setSubmitting, resetForm }, initialValues) => {\r\n        values.time = new Date().toISOString().split(\"T\")[0];\r\n        if (values.color.trim() === \"\") {\r\n          values.color = \"н/з\";\r\n        }\r\n        values.quantity = Number(values.quantity);\r\n        values.totalPrice = Number(values.totalPrice);\r\n        axios\r\n          .post(\"/balance/exp.json?auth=\" + props.idToken, values)\r\n          .then(response => {\r\n            console.log(response);\r\n            setSubmitting(false);\r\n            const newExpData = {\r\n              ...props.expData,\r\n              [response.data.name]: values\r\n            };\r\n            props.setDataExp(newExpData);\r\n            resetForm(initialValues);\r\n          })\r\n          .catch(error => {\r\n            props.showModal(error.response);\r\n          });\r\n      }}\r\n    >\r\n      {({ isSubmitting, values, setFieldValue }) => (\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <Form>\r\n                <Row>\r\n                  <Col>\r\n                    <Field\r\n                      className=\"radioInput\"\r\n                      type=\"radio\"\r\n                      name=\"type\"\r\n                      value=\"Товар\"\r\n                      checked={values.type === \"Товар\"}\r\n                      onChange={() => setFieldValue(\"type\", \"Товар\")}\r\n                    />\r\n                    <label>Товар</label>\r\n                    <Field\r\n                      className=\"radioInput\"\r\n                      type=\"radio\"\r\n                      name=\"type\"\r\n                      value=\"Супутній товар\"\r\n                      checked={values.type === \"Супутній товар\"}\r\n                      onChange={() => setFieldValue(\"type\", \"Супутній товар\")}\r\n                    />\r\n                    <label>Супутній товар</label>\r\n                    <Field\r\n                      className=\"radioInput\"\r\n                      type=\"radio\"\r\n                      name=\"type\"\r\n                      value=\"Витрата\"\r\n                      checked={values.type === \"Витрата\"}\r\n                      onChange={() => setFieldValue(\"type\", \"Витрата\")}\r\n                    />\r\n                    <label>Витрата</label>\r\n                    <span className=\"errorMessage\">\r\n                      <ErrorMessage name=\"type\" />\r\n                    </span>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col>\r\n                    <label>Назва</label>\r\n                    <Field name=\"name\" list=\"name\" />\r\n                    <datalist id=\"name\">\r\n                      {values.type === \"Товар\" && waresList}\r\n                      {values.type === \"Супутній товар\" && subwaresList}\r\n                      {values.type === \"Витрата\" && expsList}\r\n                    </datalist>\r\n                    <span className=\"errorMessage\">\r\n                      <ErrorMessage name=\"name\" />\r\n                    </span>\r\n                    <label>Колір</label>\r\n                    <Field name=\"color\" list=\"color\" />\r\n                    <datalist id=\"color\">{colorsList}</datalist>\r\n\r\n                    <label>Кількість</label>\r\n                    <Field\r\n                      className=\"input-number\"\r\n                      name=\"quantity\"\r\n                      type=\"number\"\r\n                      disabled={values.type === \"Витрата\"}\r\n                    />\r\n                    <span className=\"errorMessage\">\r\n                      <ErrorMessage name=\"quantity\" />\r\n                    </span>\r\n                    <label>Вартість</label>\r\n                    <Field\r\n                      className=\"input-number\"\r\n                      name=\"totalPrice\"\r\n                      type=\"number\"\r\n                    />\r\n                    <span className=\"errorMessage\">\r\n                      <ErrorMessage name=\"totalPrice\" />\r\n                    </span>\r\n                    <label>Ціна за одиницю</label>\r\n                    <Field\r\n                      className=\"input-number\"\r\n                      name=\"price\"\r\n                      value={\r\n                        isNaN(values.totalPrice / values.quantity) ||\r\n                        values.type === \"Витрата\"\r\n                          ? 0\r\n                          : (values.totalPrice / values.quantity).toFixed(2)\r\n                      }\r\n                      onChange={() =>\r\n                        setFieldValue(\r\n                          \"price\",\r\n                          values.totalPrice / values.quantity\r\n                        )\r\n                      }\r\n                      disabled\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col xs={{ span: 3, offset: 9 }}>\r\n                    <button\r\n                      className=\"submitData\"\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                    >\r\n                      Внести\r\n                    </button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    expData: state.data.expData,\r\n    lists: state.data.lists,\r\n    idToken: state.auth.idToken\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setDataExp: expData => dispatch(actions.setDataExp(expData)),\r\n    showModal: response => dispatch(actions.showModal(response))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ExpForm);\r\n","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport axios from \"../../axios\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nconst ExpTable = props => {\r\n  const deleteRowHandler = event => {\r\n    const id = event.target.id;\r\n    axios\r\n      .delete(\"/balance/exp/\" + id + \".json?auth=\" + props.idToken)\r\n      .then(res => {\r\n        console.log(res);\r\n      })\r\n      .catch(error => {\r\n        props.showModal(error.response);\r\n      });\r\n    const newExpData = {};\r\n    for (const key in props.expData) {\r\n      if (key !== id) {\r\n        newExpData[key] = props.expData[key];\r\n      }\r\n    }\r\n    props.setDataExp(newExpData);\r\n  };\r\n\r\n  const table = !props.expData\r\n    ? null\r\n    : Object.keys(props.expData)\r\n        .reverse()\r\n        .map((expKey, index) => {\r\n          return (\r\n            <tr key={expKey}>\r\n              <td>{index + 1}</td>\r\n              <td>{props.expData[expKey].time}</td>\r\n              <td>{props.expData[expKey].type}</td>\r\n              <td>{props.expData[expKey].name}</td>\r\n              <td>{props.expData[expKey].color}</td>\r\n              <td>{props.expData[expKey].quantity}</td>\r\n              <td>{props.expData[expKey].totalPrice}</td>\r\n              <td>\r\n                {(\r\n                  props.expData[expKey].totalPrice /\r\n                  props.expData[expKey].quantity\r\n                ).toFixed(2)}\r\n              </td>\r\n              <td>\r\n                <button id={expKey} onClick={deleteRowHandler}>\r\n                  x\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          );\r\n        });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Дата</th>\r\n            <th>Тип</th>\r\n            <th>Назва</th>\r\n            <th>Колір</th>\r\n            <th>Кількість</th>\r\n            <th>Вартість</th>\r\n            <th>Ціна за одиницю</th>\r\n            <th>Видалити</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{table}</tbody>\r\n      </Table>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    expData: state.data.expData,\r\n    idToken: state.auth.idToken\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setDataExp: expData => dispatch(actions.setDataExp(expData)),\r\n    showModal: response => dispatch(actions.showModal(response))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ExpTable);\r\n","import React, { useState } from \"react\";\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from \"formik\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"../../axios\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nconst IncForm = props => {\r\n  const [complectErrorMessage, setComplectErrorMessage] = useState(null);\r\n\r\n  const waresList = props.lists.wares.map(item => {\r\n    return (\r\n      <option key={item} value={item}>\r\n        {item}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  const subwaresList = props.lists.subwares.map(item => {\r\n    return (\r\n      <option key={item} value={item}>\r\n        {item}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  const colorsList = props.lists.colors.map(item => {\r\n    return (\r\n      <option key={item} value={item}>\r\n        {item}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  const complectFormHandler = values => {\r\n    if (values.income.length > 0) {\r\n      if (values.income[0].quantity > 0 && values.income[0].color !== \"н/з\") {\r\n        if (\r\n          values.income[0].type === \"Товар\" &&\r\n          values.income.length === 1 &&\r\n          values.income[0].name !== \"\"\r\n        ) {\r\n          setComplectErrorMessage(null);\r\n          let complect = null;\r\n          Object.keys(props.complectsData).map(key => {\r\n            if (props.complectsData[key].name === values.income[0].name) {\r\n              complect = props.complectsData[key].complect;\r\n            }\r\n          });\r\n          complect.map(key => {\r\n            values.income.push({\r\n              type: \"Супутній товар\",\r\n              name: key.name,\r\n              color: key.copyColor ? values.income[0].color : \"н/з\",\r\n              quantity: values.income[0].quantity\r\n            });\r\n          });\r\n          setComplectErrorMessage(<span>Готово!</span>);\r\n        } else {\r\n          setComplectErrorMessage(\r\n            <span className=\"errorMessage\">Не обрано товар!</span>\r\n          );\r\n        }\r\n      } else {\r\n        setComplectErrorMessage(\r\n          <span className=\"errorMessage\">Не вказано кількість або колір!</span>\r\n        );\r\n      }\r\n    } else {\r\n      setComplectErrorMessage(\r\n        <span className=\"errorMessage\">Не обрано товар!</span>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        price: \"\",\r\n        income: [\r\n          {\r\n            type: \"\",\r\n            name: \"\",\r\n            color: \"н/з\",\r\n            quantity: \"\"\r\n          }\r\n        ]\r\n      }}\r\n      validate={values => {\r\n        let errors = {};\r\n        if (!values.price || isNaN(values.price)) {\r\n          errors.price = \"Невірна ціна!\";\r\n        }\r\n        if (values.income.length < 1) {\r\n          errors.income = \"Не внесено товару!\";\r\n        }\r\n        values.income.map((line, index) => {\r\n          if (!values.income[index].type) {\r\n            errors.type = \"Категорія товару не обрана!\";\r\n          }\r\n          if (\r\n            !values.income[index].name ||\r\n            values.income[index].name === \"--Обери назву--\"\r\n          ) {\r\n            errors.name = \"Назва товару не обрана!\";\r\n          }\r\n          if (\r\n            isNaN(values.income[index].quantity) ||\r\n            values.income[index].quantity === 0 ||\r\n            values.income[index].quantity === \"\"\r\n          ) {\r\n            errors.quantity = \"Невірна кількість!\";\r\n          }\r\n        });\r\n        return errors;\r\n      }}\r\n      isSubmitting={false}\r\n      onSubmit={(values, { setSubmitting, resetForm }, initialValues) => {\r\n        values.time = new Date().toISOString().split(\"T\")[0];\r\n        axios\r\n          .post(\"/balance/inc.json?auth=\" + props.idToken, values)\r\n          .then(response => {\r\n            console.log(response);\r\n            setSubmitting(false);\r\n            const newIncData = {\r\n              ...props.incData,\r\n              [response.data.name]: values\r\n            };\r\n            props.setDataInc(newIncData);\r\n            resetForm(initialValues);\r\n          })\r\n          .catch(error => {\r\n            props.showModal(error.response);\r\n          });\r\n      }}\r\n      render={({ isSubmitting, values, setFieldValue }) => (\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <Form>\r\n                <Row>\r\n                  <Col xs={2}>\r\n                    <label>\r\n                      Ціна\r\n                      <Field\r\n                        className=\"input-number\"\r\n                        name=\"price\"\r\n                        type=\"number\"\r\n                      />\r\n                      <span className=\"errorMessage\">\r\n                        <ErrorMessage name=\"price\" />\r\n                      </span>\r\n                      <span className=\"errorMessage\">\r\n                        <ErrorMessage name=\"type\" />\r\n                      </span>\r\n                      <span className=\"errorMessage\">\r\n                        <ErrorMessage name=\"name\" />\r\n                      </span>\r\n                      <span className=\"errorMessage\">\r\n                        <ErrorMessage name=\"quantity\" />\r\n                      </span>\r\n                    </label>\r\n                  </Col>\r\n                  <Col xs={10}>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => complectFormHandler(values)}\r\n                    >\r\n                      {\" \"}\r\n                      Комплект{\" \"}\r\n                    </button>\r\n                    {complectErrorMessage}\r\n                  </Col>\r\n                </Row>\r\n                <FieldArray\r\n                  name=\"income\"\r\n                  render={arrayHelpers => (\r\n                    <React.Fragment>\r\n                      {values.income && values.income.length > 0\r\n                        ? values.income.map((line, index) => (\r\n                            <Row key={index}>\r\n                              <Col>\r\n                                <fieldset>\r\n                                  <Field\r\n                                    className=\"radioInput\"\r\n                                    type=\"radio\"\r\n                                    name={`income.${index}.type`}\r\n                                    value=\"Товар\"\r\n                                    checked={\r\n                                      values.income[index].type === \"Товар\"\r\n                                    }\r\n                                    onChange={() =>\r\n                                      setFieldValue(\r\n                                        `income.${index}.type`,\r\n                                        \"Товар\"\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                  <label>Товар</label>\r\n\r\n                                  <Field\r\n                                    className=\"radioInput\"\r\n                                    type=\"radio\"\r\n                                    name={`income.${index}.type`}\r\n                                    value=\"Супутній товар\"\r\n                                    checked={\r\n                                      values.income[index].type ===\r\n                                      \"Супутній товар\"\r\n                                    }\r\n                                    onChange={() =>\r\n                                      setFieldValue(\r\n                                        `income.${index}.type`,\r\n                                        \"Супутній товар\"\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                  <label>Супутній товар</label>\r\n                                </fieldset>\r\n                                <fieldset>\r\n                                  <label>Назва</label>\r\n                                  <Field\r\n                                    component=\"select\"\r\n                                    name={`income.${index}.name`}\r\n                                  >\r\n                                    <option value={\"--Обери назву--\"}>\r\n                                      --Обери назву--\r\n                                    </option>\r\n                                    {values.income[index].type === \"Товар\" &&\r\n                                      waresList}\r\n                                    {values.income[index].type ===\r\n                                      \"Супутній товар\" && subwaresList}\r\n                                  </Field>\r\n\r\n                                  <label>Колір</label>\r\n                                  <Field\r\n                                    component=\"select\"\r\n                                    name={`income.${index}.color`}\r\n                                  >\r\n                                    {colorsList}\r\n                                  </Field>\r\n\r\n                                  <label>Кількість</label>\r\n                                  <Field\r\n                                    className=\"input-number\"\r\n                                    name={`income.${index}.quantity`}\r\n                                    type=\"number\"\r\n                                  />\r\n                                </fieldset>\r\n                                <button\r\n                                  className=\"button-x\"\r\n                                  type=\"button\"\r\n                                  onClick={() => arrayHelpers.remove(index)} // remove a friend from the list\r\n                                >\r\n                                  x\r\n                                </button>\r\n                              </Col>\r\n                            </Row>\r\n                          ))\r\n                        : null}\r\n                      <Row>\r\n                        <Col>\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                              arrayHelpers.push({\r\n                                type: \"\",\r\n                                name: \"Обери назву\",\r\n                                color: \"н/з\",\r\n                                quantity: \"\"\r\n                              });\r\n                            }}\r\n                          >\r\n                            Додати рядок\r\n                          </button>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col xs={{ span: 3, offset: 9 }}>\r\n                          <button\r\n                            className=\"submitData\"\r\n                            type=\"submit\"\r\n                            disabled={isSubmitting}\r\n                          >\r\n                            Внести\r\n                          </button>\r\n                        </Col>\r\n                      </Row>\r\n                    </React.Fragment>\r\n                  )}\r\n                />\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    incData: state.data.incData,\r\n    lists: state.data.lists,\r\n    complectsData: state.data.complectsData,\r\n    idToken: state.auth.idToken\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setDataInc: incData => dispatch(actions.setDataInc(incData)),\r\n    showModal: response => dispatch(actions.showModal(response))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(IncForm);\r\n","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"../../axios\";\r\n\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nconst IncTable = props => {\r\n  const deleteRowHandler = event => {\r\n    const id = event.target.id;\r\n    axios\r\n      .delete(\"/balance/inc/\" + id + \".json?auth=\" + props.idToken)\r\n      .then(res => {\r\n        console.log(res);\r\n      })\r\n      .catch(error => {\r\n        props.showModal(error.response);\r\n      });\r\n    const newIncData = {};\r\n    for (const key in props.incData) {\r\n      if (key !== id) {\r\n        newIncData[key] = props.incData[key];\r\n      }\r\n    }\r\n    props.setDataInc(newIncData);\r\n  };\r\n\r\n  const table = props.loaded\r\n    ? Object.keys(props.incData)\r\n        .reverse()\r\n        .map((incKey, index) => {\r\n          const complect = props.incData[incKey].income.map((line, index) => {\r\n            return (\r\n              <tr key={`${incKey}_${index}`}>\r\n                <td></td>\r\n                <td></td>\r\n                <td>{line.type}</td>\r\n                <td>{line.name}</td>\r\n                <td>{line.color}</td>\r\n                <td>{line.quantity}</td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n            );\r\n          });\r\n          return (\r\n            <tbody key={incKey}>\r\n              <tr>\r\n                <td>{index + 1}</td>\r\n                <td>{props.incData[incKey].time}</td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td>{props.incData[incKey].price}</td>\r\n                <td>\r\n                  <button id={incKey} onClick={deleteRowHandler}>\r\n                    x\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              {complect}\r\n            </tbody>\r\n          );\r\n        })\r\n    : null;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Дата</th>\r\n            <th>Тип</th>\r\n            <th>Назва</th>\r\n            <th>Колір</th>\r\n            <th>Кількість</th>\r\n            <th>Ціна</th>\r\n            <th>Видалити</th>\r\n          </tr>\r\n        </thead>\r\n        {table}\r\n      </Table>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    incData: state.data.incData,\r\n    loaded: state.data.loaded,\r\n    idToken: state.auth.idToken\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setDataInc: incData => dispatch(actions.setDataInc(incData)),\r\n    showModal: response => dispatch(actions.showModal(response))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(IncTable);\r\n","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport axios from \"../../axios\";\r\nimport { getDataEI } from \"../../store/actions\";\r\n\r\nconst StorageTable = (props) => {\r\n  //Creating form for last summing row\r\n  const lastRow = {\r\n    quantityE: 0,\r\n    totalPriceE: 0,\r\n    quantityI: 0,\r\n    totalPriceI: 0,\r\n    quantityS: 0,\r\n    totalPriceS: 0,\r\n  };\r\n\r\n  const handleArchive = async (name) => {\r\n    const wareKey = Object.keys(props.expData).find(\r\n      (key) => props.expData[key].name === name\r\n    );\r\n\r\n    await axios.put(\"/balance/exp/\" + wareKey + \".json?auth=\" + props.idToken, {\r\n      ...props.expData[wareKey],\r\n      archived: true,\r\n    });\r\n\r\n    props.getDataEI(props.idToken);\r\n  };\r\n\r\n  //Creating storage table\r\n  const table = !props.loaded\r\n    ? null\r\n    : //Iterating through wares in expTable\r\n      Object.keys(props.expTable.ware)\r\n        .sort()\r\n        .map((wareName, wareIndex) => {\r\n          const wareKey = Object.keys(props.expData).find(\r\n            (key) => props.expData[key].name === wareName\r\n          );\r\n\r\n          if (props.expData[wareKey].archived) {\r\n            return null;\r\n          }\r\n\r\n          //Creating new ware object\r\n          const ware = {};\r\n          ware.name = wareName;\r\n          ware.colors = [];\r\n          //Pushing colors into ware object\r\n          for (\r\n            let colorIndex = 0;\r\n            colorIndex < props.expTable.ware[wareName].length;\r\n            colorIndex++\r\n          ) {\r\n            //Creating color object\r\n            const coloredWare = {};\r\n            coloredWare.color = props.expTable.ware[wareName][colorIndex].color;\r\n            coloredWare.quantityE =\r\n              props.expTable.ware[wareName][colorIndex].quantity;\r\n            coloredWare.totalPriceE =\r\n              props.expTable.ware[wareName][colorIndex].totalPrice;\r\n            coloredWare.priceE =\r\n              props.expTable.ware[wareName][colorIndex].price;\r\n            //Checking if ware is in incTable\r\n            if (props.incTable.ware[wareName]) {\r\n              //Checking if ware has same color in incTable\r\n              let incomeColorIndex = false;\r\n              for (let i = 0; i < props.incTable.ware[wareName].length; i++) {\r\n                if (\r\n                  props.incTable.ware[wareName][i].color === coloredWare.color\r\n                ) {\r\n                  incomeColorIndex = i;\r\n                }\r\n              }\r\n              //Passing income info to the colored ware\r\n              //If color exists in income\r\n              if (typeof incomeColorIndex == \"number\") {\r\n                coloredWare.quantityI =\r\n                  props.incTable.ware[wareName][incomeColorIndex].quantity;\r\n                coloredWare.totalPriceI =\r\n                  props.incTable.ware[wareName][incomeColorIndex].totalPrice;\r\n                coloredWare.priceI =\r\n                  props.incTable.ware[wareName][incomeColorIndex].price !==\r\n                  Infinity\r\n                    ? props.incTable.ware[wareName][incomeColorIndex].price\r\n                    : 0;\r\n                coloredWare.quantityS =\r\n                  coloredWare.quantityE - coloredWare.quantityI;\r\n                coloredWare.priceS = coloredWare.priceI\r\n                  ? coloredWare.priceI\r\n                  : coloredWare.priceE;\r\n                coloredWare.totalPriceS =\r\n                  coloredWare.priceS * coloredWare.quantityS;\r\n                // if(wareName === 'Planner Notebook') {\r\n                //   console.log(props.incTable.ware[wareName], coloredWare.quantityI, coloredWare.totalPriceI, coloredWare.priceI)\r\n                // }\r\n              }\r\n              //If color doesn't exist in income\r\n              else {\r\n                coloredWare.quantityI = 0;\r\n                coloredWare.totalPriceI = 0;\r\n                coloredWare.priceI = 0;\r\n                coloredWare.quantityS = coloredWare.quantityE;\r\n                coloredWare.totalPriceS = coloredWare.totalPriceE;\r\n                coloredWare.priceS = coloredWare.priceE;\r\n              }\r\n              //If ware doesn't exist in income\r\n            } else {\r\n              coloredWare.quantityI = 0;\r\n              coloredWare.totalPriceI = 0;\r\n              coloredWare.priceI = 0;\r\n              coloredWare.quantityS = coloredWare.quantityE;\r\n              coloredWare.totalPriceS = coloredWare.totalPriceE;\r\n              coloredWare.priceS = coloredWare.priceE;\r\n            }\r\n\r\n            ware.colors.push(coloredWare);\r\n          }\r\n\r\n          ware.quantityE = 0;\r\n          ware.quantityI = 0;\r\n          ware.quantityS = 0;\r\n          ware.totalPriceE = 0;\r\n          ware.totalPriceI = 0;\r\n          ware.totalPriceS = 0;\r\n          //Summing up data from colors\r\n          ware.colors.map((colorWare) => {\r\n            ware.quantityE += colorWare.quantityE;\r\n            ware.quantityI += colorWare.quantityI;\r\n            ware.quantityS += colorWare.quantityS;\r\n            ware.totalPriceE += colorWare.totalPriceE;\r\n            ware.totalPriceI += colorWare.totalPriceI;\r\n            ware.totalPriceS += colorWare.totalPriceS;\r\n          });\r\n          //Counting prices for ware\r\n          ware.priceE = ware.totalPriceE / ware.quantityE;\r\n          ware.priceI =\r\n            ware.totalPriceI === 0 || ware.quantityI === 0\r\n              ? 0\r\n              : ware.totalPriceI / ware.quantityI;\r\n          ware.priceS = ware.totalPriceS / ware.quantityS;\r\n          //Creating ware row\r\n          const topRow = (\r\n            <tr>\r\n              <th>{wareIndex + 1}</th>\r\n              <th>{ware.name}</th>\r\n              <th>\r\n                <button type=\"button\" onClick={() => handleArchive(wareName)}>\r\n                  Архівувати\r\n                </button>\r\n              </th>\r\n              <th style={{ backgroundColor: \"darkgray\" }}></th>\r\n              <th>{ware.quantityE}</th>\r\n              <th>{ware.totalPriceE.toFixed(0)}</th>\r\n              <th>{ware.priceE.toFixed(2)}</th>\r\n              <th style={{ backgroundColor: \"darkgray\" }}></th>\r\n              <th>{ware.quantityI}</th>\r\n              <th>{ware.totalPriceI.toFixed(0)}</th>\r\n              <th>{ware.priceI.toFixed(2)}</th>\r\n              <th style={{ backgroundColor: \"darkgray\" }}></th>\r\n              <th>{ware.quantityS}</th>\r\n              <th>{ware.totalPriceS.toFixed(0)}</th>\r\n              <th>{ware.priceS.toFixed(2)}</th>\r\n            </tr>\r\n          );\r\n          //Creating color rows\r\n          const rows = ware.colors.map((wareColor, wareColorIndex) => {\r\n            return (\r\n              <tr key={`${ware.name}_${wareColor.color}`}>\r\n                <td>{`${wareIndex + 1}.${wareColorIndex + 1}`}</td>\r\n                <td></td>\r\n                <td>{wareColor.color}</td>\r\n                <td style={{ backgroundColor: \"darkgray\" }}></td>\r\n                <td>{wareColor.quantityE}</td>\r\n                <td>{wareColor.totalPriceE.toFixed(0)}</td>\r\n                <td>{wareColor.priceE.toFixed(2)}</td>\r\n                <td style={{ backgroundColor: \"darkgray\" }}></td>\r\n                <td>{wareColor.quantityI}</td>\r\n                <td>{wareColor.totalPriceI.toFixed(0)}</td>\r\n                <td>{wareColor.priceI.toFixed(2)}</td>\r\n                <td style={{ backgroundColor: \"darkgray\" }}></td>\r\n                <td>{wareColor.quantityS}</td>\r\n                <td>{wareColor.totalPriceS.toFixed(0)}</td>\r\n                <td>{wareColor.priceS.toFixed(2)}</td>\r\n              </tr>\r\n            );\r\n          });\r\n          //Amending total row\r\n          lastRow.quantityE += ware.quantityE;\r\n          lastRow.totalPriceE += ware.totalPriceE;\r\n          lastRow.quantityI += ware.quantityI;\r\n          lastRow.totalPriceI += ware.totalPriceI;\r\n          lastRow.quantityS += ware.quantityS;\r\n          lastRow.totalPriceS += ware.totalPriceS;\r\n\r\n          return (\r\n            <tbody key={wareName}>\r\n              {topRow}\r\n              {rows}\r\n            </tbody>\r\n          );\r\n        });\r\n\r\n  //Creating storage subwarestable\r\n  const tableSubwares = !props.loaded\r\n    ? null\r\n    : //Iterating through wares in expTable\r\n      Object.keys(props.expTable.subware)\r\n        .sort()\r\n        .map((wareName, wareIndex) => {\r\n          const wareKey = Object.keys(props.expData).find(\r\n            (key) => props.expData[key].name === wareName\r\n          );\r\n\r\n          if (props.expData[wareKey].archived) {\r\n            return null;\r\n          }\r\n\r\n          //Creating new ware object\r\n          const ware = {};\r\n          ware.name = wareName;\r\n          ware.colors = [];\r\n          //Pushing colors into ware object\r\n          for (\r\n            let colorIndex = 0;\r\n            colorIndex < props.expTable.subware[wareName].length;\r\n            colorIndex++\r\n          ) {\r\n            //Creating color object\r\n            const coloredWare = {};\r\n            coloredWare.color =\r\n              props.expTable.subware[wareName][colorIndex].color;\r\n            coloredWare.quantityE =\r\n              props.expTable.subware[wareName][colorIndex].quantity;\r\n            coloredWare.totalPriceE =\r\n              props.expTable.subware[wareName][colorIndex].totalPrice;\r\n            coloredWare.priceE =\r\n              props.expTable.subware[wareName][colorIndex].price;\r\n            //Checking if ware is in incTable\r\n            if (props.incTable.subware[wareName]) {\r\n              //Checking if ware has same color in incTable\r\n              let incomeColorIndex = false;\r\n              for (\r\n                let i = 0;\r\n                i < props.incTable.subware[wareName].length;\r\n                i++\r\n              ) {\r\n                if (\r\n                  props.incTable.subware[wareName][i].color ===\r\n                  coloredWare.color\r\n                ) {\r\n                  incomeColorIndex = i;\r\n                }\r\n              }\r\n              //Passing income info to the colored ware\r\n              //If color exists in income\r\n              if (typeof incomeColorIndex == \"number\") {\r\n                coloredWare.quantityI =\r\n                  props.incTable.subware[wareName][incomeColorIndex].quantity;\r\n                coloredWare.totalPriceI =\r\n                  props.incTable.subware[wareName][incomeColorIndex].totalPrice;\r\n                coloredWare.priceI =\r\n                  props.incTable.subware[wareName][incomeColorIndex].price !==\r\n                  Infinity\r\n                    ? props.incTable.subware[wareName][incomeColorIndex].price\r\n                    : 0;\r\n                coloredWare.quantityS =\r\n                  coloredWare.quantityE - coloredWare.quantityI;\r\n                coloredWare.priceS = coloredWare.priceI\r\n                  ? coloredWare.priceI\r\n                  : coloredWare.priceE;\r\n                coloredWare.totalPriceS =\r\n                  coloredWare.priceS * coloredWare.quantityS;\r\n              }\r\n              //If color doesn't exist in income\r\n              else {\r\n                coloredWare.quantityI = 0;\r\n                coloredWare.totalPriceI = 0;\r\n                coloredWare.priceI = 0;\r\n                coloredWare.quantityS = coloredWare.quantityE;\r\n                coloredWare.totalPriceS = coloredWare.totalPriceE;\r\n                coloredWare.priceS = coloredWare.priceE;\r\n              }\r\n              //If ware doesn't exist in income\r\n            } else {\r\n              coloredWare.quantityI = 0;\r\n              coloredWare.totalPriceI = 0;\r\n              coloredWare.priceI = 0;\r\n              coloredWare.quantityS = coloredWare.quantityE;\r\n              coloredWare.totalPriceS = coloredWare.totalPriceE;\r\n              coloredWare.priceS = coloredWare.priceE;\r\n            }\r\n\r\n            ware.colors.push(coloredWare);\r\n          }\r\n\r\n          ware.quantityE = 0;\r\n          ware.quantityI = 0;\r\n          ware.quantityS = 0;\r\n          ware.totalPriceE = 0;\r\n          ware.totalPriceI = 0;\r\n          ware.totalPriceS = 0;\r\n          //Summing up data from colors\r\n          ware.colors.map((colorWare) => {\r\n            ware.quantityE += colorWare.quantityE;\r\n            ware.quantityI += colorWare.quantityI;\r\n            ware.quantityS += colorWare.quantityS;\r\n            ware.totalPriceE += colorWare.totalPriceE;\r\n            ware.totalPriceI += colorWare.totalPriceI;\r\n            ware.totalPriceS += colorWare.totalPriceS;\r\n          });\r\n          //Counting prices for ware\r\n          ware.priceE = ware.totalPriceE / ware.quantityE;\r\n          ware.priceI =\r\n            ware.totalPriceI === 0 || ware.quantityI === 0\r\n              ? 0\r\n              : ware.totalPriceI / ware.quantityI;\r\n          ware.priceS = ware.totalPriceS / ware.quantityS;\r\n          //Creating ware row\r\n          const topRow = (\r\n            <tr>\r\n              <th>{wareIndex + 1}</th>\r\n              <th>{ware.name}</th>\r\n              <th>\r\n                <button type=\"button\" onClick={() => handleArchive(wareName)}>\r\n                  Архівувати\r\n                </button>\r\n              </th>\r\n              <th style={{ backgroundColor: \"darkgray\" }}></th>\r\n              <th>{ware.quantityE}</th>\r\n              <th>{ware.totalPriceE.toFixed(0)}</th>\r\n              <th>{ware.priceE.toFixed(2)}</th>\r\n              <th style={{ backgroundColor: \"darkgray\" }}></th>\r\n              <th>{ware.quantityI}</th>\r\n              <th>{ware.totalPriceI.toFixed(0)}</th>\r\n              <th>{ware.priceI.toFixed(2)}</th>\r\n              <th style={{ backgroundColor: \"darkgray\" }}></th>\r\n              <th>{ware.quantityS}</th>\r\n              <th>{ware.totalPriceS.toFixed(0)}</th>\r\n              <th>{ware.priceS.toFixed(2)}</th>\r\n            </tr>\r\n          );\r\n          //Creating color rows\r\n          const rows = ware.colors.map((wareColor, wareColorIndex) => {\r\n            return (\r\n              <tr key={`${ware.name}_${wareColor.color}`}>\r\n                <td>{`${wareIndex + 1}.${wareColorIndex + 1}`}</td>\r\n                <td></td>\r\n                <td>{wareColor.color}</td>\r\n                <td style={{ backgroundColor: \"darkgray\" }}></td>\r\n                <td>{wareColor.quantityE}</td>\r\n                <td>{wareColor.totalPriceE.toFixed(0)}</td>\r\n                <td>{wareColor.priceE.toFixed(2)}</td>\r\n                <td style={{ backgroundColor: \"darkgray\" }}></td>\r\n                <td>{wareColor.quantityI}</td>\r\n                <td>{wareColor.totalPriceI.toFixed(0)}</td>\r\n                <td>{wareColor.priceI.toFixed(2)}</td>\r\n                <td style={{ backgroundColor: \"darkgray\" }}></td>\r\n                <td>{wareColor.quantityS}</td>\r\n                <td>{wareColor.totalPriceS.toFixed(0)}</td>\r\n                <td>{wareColor.priceS.toFixed(2)}</td>\r\n              </tr>\r\n            );\r\n          });\r\n          //Amending total row\r\n          lastRow.quantityE += ware.quantityE;\r\n          lastRow.totalPriceE += ware.totalPriceE;\r\n          lastRow.quantityI += ware.quantityI;\r\n          lastRow.totalPriceI += ware.totalPriceI;\r\n          lastRow.quantityS += ware.quantityS;\r\n          lastRow.totalPriceS += ware.totalPriceS;\r\n\r\n          return (\r\n            <tbody key={wareName}>\r\n              {topRow}\r\n              {rows}\r\n            </tbody>\r\n          );\r\n        });\r\n\r\n  //Creating total row\r\n  const lastRowTable = (\r\n    <tr>\r\n      <th></th>\r\n      <th>Всього</th>\r\n      <th></th>\r\n      <th style={{ backgroundColor: \"darkgray\" }}></th>\r\n      <th>{lastRow.quantityE}</th>\r\n      <th>{lastRow.totalPriceE.toFixed(2)}</th>\r\n      <th></th>\r\n      <th style={{ backgroundColor: \"darkgray\" }}></th>\r\n      <th>{lastRow.quantityI}</th>\r\n      <th>{lastRow.totalPriceI.toFixed(2)}</th>\r\n      <th></th>\r\n      <th style={{ backgroundColor: \"darkgray\" }}></th>\r\n      <th>{lastRow.quantityS}</th>\r\n      <th>{lastRow.totalPriceS.toFixed(2)}</th>\r\n      <th></th>\r\n    </tr>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Товар</th>\r\n            <th>Колір</th>\r\n            <th style={{ backgroundColor: \"darkgray\" }}></th>\r\n            <th>Кількість виготовлено</th>\r\n            <th>Вартість виготовлено</th>\r\n            <th>Собівартість одиниці</th>\r\n            <th style={{ backgroundColor: \"darkgray\" }}></th>\r\n            <th>Кількість продано</th>\r\n            <th>Вартість продано</th>\r\n            <th>Ціна одиниці продано</th>\r\n            <th style={{ backgroundColor: \"darkgray\" }}></th>\r\n            <th>Кількість на складі</th>\r\n            <th>Вартість на складі</th>\r\n            <th>Ціна одиниці на складі</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        {table}\r\n        {tableSubwares}\r\n        <tbody>{lastRowTable}</tbody>\r\n      </Table>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    expTable: state.tables.expTable,\r\n    incTable: state.tables.incTable,\r\n    loaded: state.tables.loaded,\r\n    expData: state.data.expData,\r\n    idToken: state.auth.idToken,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getDataEI: (idToken) => dispatch(getDataEI(idToken)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StorageTable);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport StorageTable from '../../components/storage/StorageTable';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst Storage = props => {\r\n  useEffect(() => {\r\n    props.createExpTable(props.expData);\r\n    props.createIncTable(props.incData);\r\n  }, [props] )\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <StorageTable />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    expData: state.data.expData,\r\n    incData: state.data.incData\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createExpTable: (expData) => dispatch(actions.createExpTable(expData)),\r\n    createIncTable: (incData) => dispatch(actions.createIncTable(incData))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Storage);","import React from \"react\";\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from \"formik\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"../../axios\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nconst ComplectsForm = props => {\r\n  const waresList = props.lists.wares.map(item => {\r\n    return (\r\n      <option key={item} value={item}>\r\n        {item}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  const subwaresList = props.lists.subwares.map(item => {\r\n    return (\r\n      <option key={item} value={item}>\r\n        {item}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: \"\",\r\n        complect: [\r\n          {\r\n            name: \"\",\r\n            copyColor: false\r\n          }\r\n        ]\r\n      }}\r\n      validate={values => {\r\n        let errors = {};\r\n        let checkIfComplectExists = 0;\r\n        Object.keys(props.complectsData).map(key => {\r\n          if (props.complectsData[key].name === values.name) {\r\n            checkIfComplectExists++;\r\n          }\r\n        });\r\n        if (checkIfComplectExists > 0) {\r\n          errors.complectExists = \"Комплект вже існує\";\r\n        }\r\n        if (values.name === \"\") {\r\n          errors.name = \"Не внесено товару!\";\r\n        }\r\n        if (values.complect.length < 1) {\r\n          errors.complect = \"Не внесено супутнього товару!\";\r\n        }\r\n        values.complect.map((line, index) => {\r\n          if (\r\n            !values.complect[index].name ||\r\n            values.complect[index].name === \"--Обери назву--\"\r\n          ) {\r\n            errors.name = \"Назва супутнього товару не обрана!\";\r\n          }\r\n        });\r\n        return errors;\r\n      }}\r\n      isSubmitting={false}\r\n      onSubmit={(values, { setSubmitting, resetForm }, initialValues) => {\r\n        values.time = new Date().toISOString().split(\"T\")[0];\r\n        axios\r\n          .post(\"/balance/complects.json?auth=\" + props.idToken, values)\r\n          .then(response => {\r\n            console.log(response);\r\n            setSubmitting(false);\r\n            const newComplectsData = {\r\n              ...props.complectsData,\r\n              [response.data.name]: values\r\n            };\r\n            props.setDataComplects(newComplectsData);\r\n            resetForm(initialValues);\r\n          })\r\n          .catch(error => {\r\n            props.showModal(error.response);\r\n          });\r\n      }}\r\n      render={({ isSubmitting, values, setFieldValue }) => (\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <Form>\r\n                <fieldset>\r\n                  <label>Назва</label>\r\n                  <Field component=\"select\" name={`name`}>\r\n                    <option value={\"--Обери назву--\"}>--Обери назву--</option>\r\n                    {waresList}\r\n                  </Field>\r\n                </fieldset>\r\n                <FieldArray\r\n                  name=\"complect\"\r\n                  render={arrayHelpers => (\r\n                    <React.Fragment>\r\n                      {values.complect && values.complect.length > 0\r\n                        ? values.complect.map((line, index) => (\r\n                            <Row key={index}>\r\n                              <Col xs={5}>\r\n                                <fieldset>\r\n                                  <label>Назва супутнього товару</label>\r\n                                  <Field\r\n                                    component=\"select\"\r\n                                    name={`complect.${index}.name`}\r\n                                  >\r\n                                    <option value={\"--Обери назву--\"}>\r\n                                      --Обери назву--\r\n                                    </option>\r\n                                    {subwaresList}\r\n                                  </Field>\r\n                                </fieldset>\r\n                              </Col>\r\n                              <Col xs={2}>\r\n                                <fieldset>\r\n                                  <label>Має колір</label>\r\n                                  <Field\r\n                                    name={`complect.${index}.copyColor`}\r\n                                    type=\"checkbox\"\r\n                                    value={`complect.${index}.copyColor`}\r\n                                    className=\"checkbox\"\r\n                                  />\r\n                                </fieldset>\r\n                              </Col>\r\n                              <Col xs={1}>\r\n                                <button\r\n                                  className=\"button-x\"\r\n                                  type=\"button\"\r\n                                  onClick={() => arrayHelpers.remove(index)} // remove a friend from the list\r\n                                >\r\n                                  x\r\n                                </button>\r\n                              </Col>\r\n                            </Row>\r\n                          ))\r\n                        : null}\r\n                      <Row>\r\n                        <Col>\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                              arrayHelpers.push({\r\n                                name: \"\",\r\n                                copyColor: false\r\n                              });\r\n                            }}\r\n                          >\r\n                            Додати рядок\r\n                          </button>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col xs={{ span: 3, offset: 9 }}>\r\n                          <button\r\n                            className=\"submitData\"\r\n                            type=\"submit\"\r\n                            disabled={isSubmitting}\r\n                          >\r\n                            Внести\r\n                          </button>\r\n                        </Col>\r\n                      </Row>\r\n                    </React.Fragment>\r\n                  )}\r\n                />\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    complectsData: state.data.complectsData,\r\n    lists: state.data.lists,\r\n    idToken: state.auth.idToken\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setDataComplects: complectsData =>\r\n      dispatch(actions.setDataComplects(complectsData)),\r\n    showModal: response => dispatch(actions.showModal(response))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ComplectsForm);\r\n","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"../../axios\";\r\n\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nconst ComplectsTable = props => {\r\n  const deleteRowHandler = event => {\r\n    const id = event.target.id;\r\n    axios\r\n      .delete(\"/balance/complects/\" + id + \".json?auth=\" + props.idToken)\r\n      .then(res => {\r\n        console.log(res);\r\n      })\r\n      .catch(error => {\r\n        props.showModal(error.response);\r\n      });\r\n    const newComplectsData = {};\r\n    for (const key in props.complectsData) {\r\n      if (key !== id) {\r\n        newComplectsData[key] = props.complectsData[key];\r\n      }\r\n    }\r\n    props.setDataComplects(newComplectsData);\r\n  };\r\n\r\n  const table = props.loaded\r\n    ? Object.keys(props.complectsData)\r\n        .reverse()\r\n        .map((complectKey, index) => {\r\n          const complect = props.complectsData[complectKey].complect.map(\r\n            (line, index) => {\r\n              return (\r\n                <tr key={`${complectKey}_${index}`}>\r\n                  <td></td>\r\n                  <td>{line.name}</td>\r\n                  <td>{line.copyColor ? \"Так\" : \"Ні\"}</td>\r\n                  <td></td>\r\n                </tr>\r\n              );\r\n            }\r\n          );\r\n          return (\r\n            <tbody key={complectKey}>\r\n              <tr>\r\n                <td>{index + 1}</td>\r\n                <td>{props.complectsData[complectKey].name}</td>\r\n                <td></td>\r\n                <td>\r\n                  <button id={complectKey} onClick={deleteRowHandler}>\r\n                    x\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              {complect}\r\n            </tbody>\r\n          );\r\n        })\r\n    : null;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Назва</th>\r\n            <th>Чи має колір</th>\r\n            <th>Видалити</th>\r\n          </tr>\r\n        </thead>\r\n        {table}\r\n      </Table>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    complectsData: state.data.complectsData,\r\n    loaded: state.data.loaded,\r\n    idToken: state.auth.idToken\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setDataComplects: complectsData =>\r\n      dispatch(actions.setDataComplects(complectsData)),\r\n    showModal: response => dispatch(actions.showModal(response))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ComplectsTable);\r\n","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst AvailableComplectsTable = props => {\r\n  console.log(props);\r\n\r\n  const table = props.loaded\r\n    ? props.availableComplectsData.reverse().map((ware, index) => {\r\n        const topRow = (\r\n          <tr>\r\n            <th>{index + 1}</th>\r\n            <th>{ware.name}</th>\r\n            <th></th>\r\n            <th></th>\r\n            <th></th>\r\n          </tr>\r\n        );\r\n        const wareTable = ware.colors.map((coloredWare, wareIndex) => {\r\n          const wareRow = (\r\n            <tr key={`${index + 1}.${wareIndex + 1}`}>\r\n              <th>{`${index + 1}.${wareIndex + 1}`}</th>\r\n              <th>{ware.name}</th>\r\n              <th>{coloredWare.color}</th>\r\n              <th>{coloredWare.minQuantity}</th>\r\n              <th>{coloredWare.quantity}</th>\r\n            </tr>\r\n          );\r\n\r\n          const itemRows = coloredWare.items.map((item, itemIndex) => {\r\n            return (\r\n              <tr key={`${index + 1}.${wareIndex + 1}.${itemIndex}`}>\r\n                <td></td>\r\n                <td>{item.name}</td>\r\n                <td></td>\r\n                <td></td>\r\n                <td>{item.quantity}</td>\r\n              </tr>\r\n            );\r\n          });\r\n\r\n          return [wareRow, itemRows];\r\n        });\r\n        return (\r\n          <tbody key={index}>\r\n            {topRow}\r\n            {wareTable}\r\n          </tbody>\r\n        );\r\n      })\r\n    : null;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Товар</th>\r\n            <th>Колір</th>\r\n            <th>Кількість комплектів</th>\r\n            <th>Кількість одиниць</th>\r\n          </tr>\r\n        </thead>\r\n        {table}\r\n      </Table>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    availableComplectsData: state.data.availableComplectsData,\r\n    loaded: state.data.loaded\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(AvailableComplectsTable);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Tabs, Tab } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ExpForm from \"../../components/exp/ExpForm\";\r\nimport ExpTable from \"../../components/exp/ExpTable\";\r\nimport IncForm from \"../../components/inc/IncForm\";\r\nimport IncTable from \"../../components/inc/IncTable\";\r\nimport Storage from \"../storage/Storage\";\r\nimport ComplectsForm from \"../complects/ComplectsForm\";\r\nimport ComplectsTable from \"../complects/ComplectsTable\";\r\nimport AvailableComplectsTable from \"../availableComplects/availableComplectsTable\";\r\nimport \"./workArea.css\";\r\nimport \"./Forms.css\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nconst WorkArea = props => {\r\n  //З серва тягну дані для наповнення\r\n  useEffect(() => {\r\n    props.getDataEI(props.authData.idToken);\r\n  }, [props.gotError]);\r\n\r\n  //На основі даних з серва хочу замутити новий стейт\r\n  useEffect(() => {\r\n    if (props.expData && Object.keys(props.expData).length > 0) {\r\n      props.createFormLists(props.expData);\r\n    }\r\n  }, [props.expData]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Tabs defaultActiveKey=\"storage\" id=\"uncontrolled-tab-example\">\r\n        <Tab eventKey=\"exp\" title=\"Витрати\">\r\n          <ExpForm />\r\n          <ExpTable />\r\n        </Tab>\r\n        <Tab eventKey=\"inc\" title=\"Доходи\">\r\n          <IncForm />\r\n          <IncTable />\r\n        </Tab>\r\n        <Tab eventKey=\"storage\" title=\"Склад\">\r\n          <Storage />\r\n        </Tab>\r\n        <Tab eventKey=\"complects\" title=\"Комплекти\">\r\n          <ComplectsForm />\r\n          <ComplectsTable />\r\n        </Tab>\r\n        <Tab eventKey=\"availableComplects\" title=\"Наявні комплекти\">\r\n          <AvailableComplectsTable />\r\n        </Tab>\r\n      </Tabs>\r\n      {!props.authData.signedIn && <Redirect to=\"/\" />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authData: state.auth,\r\n    expData: state.data.expData,\r\n    incData: state.data.incData,\r\n    gotError: state.ui.gotError\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getDataEI: idToken => dispatch(actions.getDataEI(idToken)),\r\n    createFormLists: expData => dispatch(actions.createFormLists(expData))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WorkArea);\r\n","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './Auth.css'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst Auth = (props) => {  \r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"authForm\">\r\n            <Formik      \r\n            initialValues={{ \r\n              email: '',\r\n              password: ''\r\n            }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n              props.logIn(values);\r\n              setSubmitting(false);\r\n            }}\r\n          >\r\n            {({ isSubmitting, values, setFieldValue }) => (\r\n              <Form>\r\n                    <Field\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Email\"           \r\n                    />\r\n\r\n                    <Field\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      placeholder=\"Password\"              \r\n                    />\r\n                <button type=\"submit\" disabled={isSubmitting}>\r\n                  Log In\r\n                </button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logIn: (values) => dispatch(actions.logIn(values)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Navbar, Nav, Image } from 'react-bootstrap';\r\n\r\nimport Logo from '../../assets/images/logo.jpg';\r\nimport './Navigation.css';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst Navigation = props => {\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <NavLink to=\"/\" exact>\r\n        <Navbar.Brand><Image src={Logo}/> </Navbar.Brand>\r\n      </NavLink>\r\n      <Nav className=\"mr-auto\">\r\n        <NavLink className=\"nav-link\" to=\"/\" exact>Home</NavLink>\r\n        {props.authState && <NavLink className=\"nav-link\" to=\"/workarea\" exact>Work Area</NavLink>}\r\n        {props.authState && <button className=\"logout\" onClick={props.logOut}>Log Out</button >}\r\n      </Nav>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authState: state.auth.signedIn\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logOut: () => dispatch(actions.logOut()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);","import React from 'react';\r\nimport { VictoryBar } from 'victory';\r\n\r\nexport const TotalExpInc = props => {\r\n  return (\r\n    <VictoryBar\r\n      data={[\r\n        {x: 1, y: props.chartData.exp, y0: 0, label: \"Витрати\", labelNumber: props.chartData.exp},\r\n        {x: 2, y: props.chartData.inc, y0: 0, label: \"Доходи\", labelNumber: props.chartData.inc},     \r\n        {x: 3, y: props.chartData.inc, y0: props.chartData.exp, label: \"Прибуток\", labelNumber: props.chartData.profit},        \r\n      ]}\r\n      events={[\r\n        {\r\n          target: \"data\",\r\n          eventHandlers: {\r\n            onClick: () => {\r\n              return [{\r\n                target: \"labels\",\r\n                mutation: (props) => {\r\n                  return props.text === `${props.datum.labelNumber.toFixed(0)} грн.` ?\r\n                    null : { text: `${props.datum.labelNumber.toFixed(0)} грн.` }\r\n                }\r\n              }];\r\n            }\r\n          }\r\n        }\r\n      ]}\r\n  />\r\n  )\r\n}\r\n\r\nexport default TotalExpInc;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport TotalExpInc from './charts/TotalExpInc';\r\nimport './Statistics.css'\r\n\r\nconst Statistics = props => {\r\n  const [tablesLoaded, setTablesLoaded] = useState(false);\r\n  const [expIncProfitChartData, setExpIncProfitChartData] = useState({\r\n    exp: 0,\r\n    inc: 0,\r\n    profit: 0\r\n  })\r\n\r\n  useEffect(() => {\r\n    props.countTotalStats(props.expTable, props.incTable);\r\n    props.checkForIncErrors(props.expTable, props.incTable);\r\n    setTablesLoaded(true);\r\n  }, [props.expTable, props.incTable] )\r\n\r\n  useEffect(() => {\r\n    if (tablesLoaded) {\r\n      const newChartData = {\r\n        exp: props.totalStatsTable.exp.ware + props.totalStatsTable.exp.subware + props.totalStatsTable.exp.exp,\r\n        inc: props.totalStatsTable.inc.ware + props.totalStatsTable.inc.subware,\r\n        profit: props.totalStatsTable.inc.ware + props.totalStatsTable.inc.subware - (props.totalStatsTable.exp.ware + props.totalStatsTable.exp.subware + props.totalStatsTable.exp.exp)\r\n      }\r\n      setExpIncProfitChartData(newChartData)\r\n    }\r\n  }, [tablesLoaded])\r\n\r\n  const errors = tablesLoaded ? (\r\n    props.incErrors.map((error, index) => {\r\n      return (\r\n        <p key={index}>\r\n          <span className=\"errorMessage\">{Object.keys(error).toString()}, колір: {error[Object.keys(error)].color}, кількість: {error[Object.keys(error)].quantity}, загальна вартість {error[Object.keys(error)].totalPrice}</span>\r\n        </p>\r\n        )\r\n    })\r\n  ) : null\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"chart\">\r\n            <TotalExpInc chartData={expIncProfitChartData} />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      {props.incErrors.length > 0 &&\r\n        <Row>\r\n          <Col>\r\n            <h1>Виявлено помилки у доходах:</h1>\r\n            {errors}\r\n          </Col>\r\n        </Row> }\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    expTable: state.tables.expTable,\r\n    incTable: state.tables.incTable,\r\n    totalStatsTable: state.tables.totalStatsTable,\r\n    incErrors: state.tables.incErrors\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    countTotalStats: (expTable, incTable) => dispatch(actions.countTotalStats(expTable, incTable)),\r\n    checkForIncErrors: (expTable, incTable) => dispatch(actions.checkForIncErrors(expTable, incTable))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Statistics);","import React from 'react';\r\nimport './Spinner.css'\r\n\r\nconst spinner = () => (\r\n  <div className=\"loader\">loading... :)</div>\r\n);\r\n\r\nexport default spinner;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Transition from 'react-transition-group/Transition';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport './Backdrop.css';\r\n\r\nconst Backdrop = (props) => {    \r\n    return (\r\n      <Transition \r\n      mountOnEnter\r\n      unmountOnExit\r\n      in={props.show}\r\n      timeout={0}\r\n    >\r\n      {state => {\r\n        const cssClasses = state === 'entered' ? 'BackdropOpen' : state === 'exited' ? 'BackdropClosed' : null;\r\n        return (\r\n          <div \r\n          className={`Backdrop ${cssClasses}`} \r\n          onClick={props.hideModal}>\r\n          </div>\r\n        )\r\n      }}      \r\n    </Transition>\r\n    )     \r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    show: state.ui.gotError,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    hideModal: () => dispatch(actions.hideModal())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Backdrop);","import React from \"react\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Transition from 'react-transition-group/Transition';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport \"./Modal.css\";\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <Transition \r\n      mountOnEnter\r\n      unmountOnExit\r\n      in={props.show}\r\n      timeout={500}\r\n    >\r\n      {state => {\r\n        const cssClasses = state === 'entering' ? 'ModalOpen' : state === 'exiting' ? 'ModalClosed' : null;\r\n        return (\r\n          <div className={`Modal ${cssClasses}`}>\r\n            <h1>Проблємка</h1>\r\n              <div>\r\n              <p className=\"errorMessage\">{props.error.status}</p>\r\n              <p className=\"errorMessage\">{props.error.statusText}</p>\r\n              </div>\r\n            <button className=\"Button\" onClick={props.hideModal}>\r\n              <NavLink className=\"nav-link\" to=\"/\" exact>Повернутись</NavLink>\r\n            </button>\r\n          </div>\r\n        )\r\n      }}      \r\n    </Transition>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    show: state.ui.gotError,\r\n    error: state.ui.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    hideModal: () => dispatch(actions.hideModal())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport WorkArea from './containers/workArea/workArea';\r\nimport Auth from './containers/auth/Auth';\r\nimport Navigation from './containers/navigation/Navigation';\r\nimport Statistics from './containers/statistics/Statistics';\r\nimport Spinner from './ui/Spinner/Spinner';\r\nimport Backdrop from './ui/Backdrop/Backdrop';\r\nimport Modal from './ui/Modal/Modal';\r\nimport './App.css';\r\nimport * as actions from './store/actions/index';\r\n\r\nconst App = props => {\r\n  useEffect(() => {\r\n    props.authCheckState();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Modal />\r\n      <Backdrop show={props.gotError} />\r\n      <Navigation />\r\n      <Switch>        \r\n        <Route path=\"/workarea\" ><WorkArea /></Route>      \r\n        <Route path=\"/\" >\r\n          {!props.authData.signedIn && !props.authData.loading && <Auth /> }\r\n          {props.authData.loading && <Spinner />}\r\n          {props.authData.signedIn && !props.authData.loading && <Statistics />}\r\n        </Route>\r\n      </Switch>\r\n      {props.authData.signedIn && <Redirect to=\"/workarea\" />}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authData: state.auth,\r\n    gotError: state.ui.gotError,\r\n    error: state.ui.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    authCheckState: () => dispatch(actions.authCheckState())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  expData: {},\r\n  incData: {},\r\n  complectsData: {},\r\n  availableComplectsData: [],\r\n  lists: {\r\n    wares: [],\r\n    subwares: [],\r\n    exps: [],\r\n    colors: []\r\n  },\r\n  loaded: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_DATA_EXP:\r\n      return {\r\n        ...state,\r\n        expData: action.exp,\r\n        loaded: true\r\n      };\r\n    case actionTypes.SET_DATA_INC:\r\n      return {\r\n        ...state,\r\n        incData: action.inc,\r\n        loaded: true\r\n      };\r\n    case actionTypes.SET_DATA_COMPLECTS:\r\n      return {\r\n        ...state,\r\n        complectsData: action.complects,\r\n        loaded: true\r\n      };\r\n    case actionTypes.SET_DATA_AVAILABLE_COMPLECTS:\r\n      return {\r\n        ...state,\r\n        availableComplectsData: action.availableComplects,\r\n        loaded: true\r\n      };\r\n    case actionTypes.CREATE_FORM_LISTS:\r\n      return {\r\n        ...state,\r\n        lists: action.lists\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  idToken: localStorage.getItem('token'),\r\n  userId: localStorage.getItem('userId'),\r\n  signedIn: false,\r\n  loading: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.LOG_IN_START:\r\n      return {\r\n        ...state,        \r\n        loading: true\r\n      };\r\n    case actionTypes.LOG_IN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        idToken: action.idToken,\r\n        userId: action.userId,\r\n        signedIn: true,\r\n        loading: false\r\n      };\r\n    case actionTypes.LOG_OUT:\r\n      return {\r\n        ...state,\r\n        idToken: null,\r\n        userId: null,\r\n        signedIn: false\r\n      };\r\n    case actionTypes.LOG_IN_LOADING_OFF:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  expTable: {},\r\n  incTable: {},\r\n  totalStatsTable: {},\r\n  incErrors: [],\r\n  loaded: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CREATE_EXP_TABLE:\r\n      return {\r\n        ...state,\r\n        expTable: action.expTable,\r\n        loaded: true\r\n      };\r\n    case actionTypes.CREATE_INC_TABLE:\r\n      return {\r\n        ...state,\r\n        incTable: action.incTable,\r\n        loaded: true\r\n      };\r\n    case actionTypes.COUNT_TOTAL_STATS:\r\n      return {\r\n        ...state,\r\n        totalStatsTable: action.totalStatsTable\r\n      };\r\n    case actionTypes.CHECK_FOR_INC_ERRORS:\r\n      return {\r\n        ...state,\r\n        incErrors: action.incErrors\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  gotError: false,\r\n  error: ''\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SHOW_MODAL:\r\n      return {\r\n        ...state,\r\n        gotError: true,\r\n        error: action.error\r\n      };\r\n    case actionTypes.HIDE_MODAL:\r\n      return {\r\n        ...state,\r\n        gotError: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport dataReducer from \"./store/reducers/data\";\nimport authReducer from \"./store/reducers/auth\";\nimport tablesReducer from \"./store/reducers/tables\";\nimport uiReducer from \"./store/reducers/ui\";\n\nconst composeEnhancers =\n  process.env.NODE_ENV === \"development\"\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null || compose;\n\nconst rootReducer = combineReducers({\n  data: dataReducer,\n  auth: authReducer,\n  tables: tablesReducer,\n  ui: uiReducer\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter basename=\"/sena-totem\">\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}