{"version":3,"sources":["axios.js","components/exp/ExpForm.js","components/exp/ExpTable.js","containers/exp/Exp.js","components/inc/IncForm.js","components/inc/IncTable.js","containers/inc/Inc.js","components/storage/StorageTable.js","containers/storage/Storage.js","containers/workArea/workArea.js","containers/auth/Auth.js","containers/navigation/Navigation.js","App.js","serviceWorker.js","index.js","assets/images/logo.jpg"],"names":["instance","axios","create","baseURL","ExpForm","props","waresList","list","wares","map","item","key","value","subwaresList","subwares","expsList","exps","colorsList","colors","initialValues","type","name","color","quantity","totalPrice","validate","values","errors","isNaN","onSubmit","setSubmitting","time","Date","toISOString","split","trim","Number","formSubmitHandler","isSubmitting","setFieldValue","Container","Row","Col","className","checked","onChange","id","disabled","xs","span","offset","ExpTable","table","expData","Object","keys","reverse","expKey","index","toFixed","onClick","deleteRowHandler","Fragment","Table","striped","bordered","hover","Exp","useEffect","onFormSubmitHandler","onDeleteRowHandler","price","income","line","console","log","render","arrayHelpers","length","component","remove","push","IncTable","incData","incKey","complect","Inc","IncForm","StorageTable","lastRow","quantityE","totalPriceE","quantityI","totalPriceI","quantityS","totalPriceS","expTable","incTable","ware","sort","wareName","wareIndex","colorIndex","coloredWare","priceE","incomeColorIndex","i","priceI","Infinity","priceS","colorWare","topRow","rows","wareColor","wareColorIndex","tableSubwares","subware","lastRowTable","Storage","useState","setExpTable","setIncTable","tableE","countExpTable","tableI","countIncTable","tableIncWares","tablIncSubWares","incItem","incIndex","isColor","tableExpWares","tableExpSubWares","tableExpExp","hasOwnProperty","exp","WorkArea","setExpData","setIncData","showError","setShowError","formList","setFormList","get","authData","idToken","then","res","data","inc","catch","error","indexOf","Tabs","defaultActiveKey","Tab","eventKey","title","post","response","newExpData","event","target","delete","newIncData","signedIn","to","Auth","email","password","submitHandler","placeholder","Navigation","Navbar","bg","variant","exact","Brand","Image","src","Logo","Nav","authState","onLogout","App","localStorage","getItem","userId","setAuthData","logoutHandler","removeItem","path","returnSecureToken","expirationDate","getTime","expiresIn","setItem","localId","newAuthData","refreshToken","setTimeout","token","Boolean","window","location","hostname","match","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.78774b98.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://sena-totem.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst ExpForm = props => {\r\n  \r\n  const waresList = props.list.wares.map((item) => {\r\n    return <option key={item} value={item} />\r\n  });\r\n\r\n  const subwaresList = props.list.subwares.map((item) => {\r\n    return <option key={item} value={item} />\r\n  });\r\n\r\n  const expsList = props.list.exps.map((item) => {\r\n    return <option key={item} value={item} />\r\n  });\r\n\r\n  const colorsList = props.list.colors.map((item) => {\r\n    return <option key={item} value={item} />\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n    initialValues={{ \r\n      type: '',\r\n      name: '',\r\n      color: '',\r\n      quantity: '',\r\n      totalPrice: ''\r\n    }}\r\n    validate={values => {\r\n      let errors = {};\r\n      if (!values.type) {\r\n        errors.type = 'Необхідно обрати категорію!'\r\n      }\r\n      if (!values.name) {\r\n        errors.name = 'Необхідно внести назву!'\r\n      }\r\n      if (isNaN(values.quantity) || ((values.quantity === 0 || values.quantity === '') && (values.type === 'Товар' || values.type === 'Супутній товар'))) {\r\n        errors.quantity = 'Невірна кількість!'\r\n      }\r\n      if (!values.totalPrice || isNaN(values.totalPrice)) {\r\n        errors.totalPrice = 'Невірна вартість!'\r\n      }\r\n\r\n      return errors;\r\n    }}\r\n    onSubmit={(values, { setSubmitting }, initialValues) => {\r\n      values.time = new Date().toISOString().split('T')[0];\r\n      if(values.color.trim() === '') {\r\n        values.color = 'н/з';\r\n      }\r\n      values.quantity = Number(values.quantity);\r\n      values.totalPrice = Number(values.totalPrice)\r\n      props.formSubmitHandler(values);\r\n      setSubmitting(false);\r\n    }}\r\n  >\r\n    {({ isSubmitting, values, setFieldValue }) => (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Form>\r\n              <Row>\r\n                <Col>                  \r\n                  <Field\r\n                    className=\"radioInput\"\r\n                    type=\"radio\"\r\n                    name=\"type\"\r\n                    value=\"Товар\"\r\n                    checked={values.type === \"Товар\"}\r\n                    onChange={() => setFieldValue(\"type\", \"Товар\")}\r\n                  />\r\n                  <label>Товар</label>                  \r\n                  <Field\r\n                    className=\"radioInput\"\r\n                    type=\"radio\"\r\n                    name=\"type\"\r\n                    value=\"Супутній товар\"\r\n                    checked={values.type === \"Супутній товар\"}\r\n                    onChange={() => setFieldValue(\"type\", \"Супутній товар\")}\r\n                  />\r\n                  <label>Супутній товар</label>                  \r\n                  <Field\r\n                    className=\"radioInput\"\r\n                    type=\"radio\"\r\n                    name=\"type\"\r\n                    value=\"Витрата\"\r\n                    checked={values.type === \"Витрата\"}\r\n                    onChange={() => setFieldValue(\"type\", \"Витрата\")}\r\n                  />\r\n                  <label>Витрата</label>\r\n                  <span className=\"errorMessage\">\r\n                    <ErrorMessage name=\"type\" />\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col>\r\n                  <label>Назва</label>\r\n                  <Field name=\"name\" list=\"name\" />              \r\n                    <datalist id=\"name\">\r\n                      {values.type === 'Товар' && waresList}\r\n                      {values.type === 'Супутній товар' && subwaresList}\r\n                      {values.type === 'Витрата' && expsList}\r\n                    </datalist>\r\n                  <span className=\"errorMessage\">\r\n                    <ErrorMessage name=\"name\" />\r\n                  </span>                  \r\n                  <label>Колір</label>\r\n                  <Field name=\"color\" list=\"color\" />              \r\n                    <datalist id=\"color\">\r\n                      {colorsList}\r\n                    </datalist>        \r\n                  \r\n                  <label>Кількість</label>\r\n                  <Field \r\n                    className=\"input-number\"\r\n                    name=\"quantity\" \r\n                    type=\"number\"         \r\n                    disabled={values.type === 'Витрата'}/>  \r\n                  <span className=\"errorMessage\">\r\n                    <ErrorMessage name=\"quantity\" />\r\n                  </span>                     \r\n                  <label>Вартість</label>\r\n                  <Field className=\"input-number\" name=\"totalPrice\" type=\"number\"/>\r\n                  <span className=\"errorMessage\">\r\n                    <ErrorMessage name=\"totalPrice\" />\r\n                  </span>                        \r\n                  <label>Ціна за одиницю</label>\r\n                  <Field \r\n                    className=\"input-number\"\r\n                    name=\"price\" \r\n                    value={(isNaN(values.totalPrice / values.quantity) || values.type === 'Витрата') ? 0 : values.totalPrice / values.quantity} \r\n                    onChange={() => setFieldValue(\"price\", values.totalPrice / values.quantity)}\r\n                    disabled/>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>                            \r\n                <Col xs={{span: 3, offset: 9}}>\r\n                  <button className=\"submitData\" type=\"submit\" disabled={isSubmitting}>\r\n                    Внести\r\n                  </button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )}\r\n  </Formik>\r\n  )\r\n}\r\n\r\nexport default ExpForm;","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\n\r\nconst ExpTable = props => {\r\n  \r\n  const table = (!props.expData) ? null : (\r\n    Object.keys(props.expData).reverse().map((expKey, index) => {\r\n      return (\r\n        <tr key={expKey}>\r\n          <td>{index+1}</td>\r\n          <td>{props.expData[expKey].time}</td>\r\n          <td>{props.expData[expKey].type}</td>\r\n          <td>{props.expData[expKey].name}</td>\r\n          <td>{props.expData[expKey].color}</td>\r\n          <td>{props.expData[expKey].quantity}</td>\r\n          <td>{props.expData[expKey].totalPrice}</td>\r\n          <td>{(props.expData[expKey].totalPrice / props.expData[expKey].quantity).toFixed(2)}</td>\r\n          <td><button id={expKey} onClick={props.deleteRowHandler}>x</button></td>\r\n        </tr>\r\n      )\r\n    }) \r\n  )  \r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Дата</th>\r\n            <th>Тип</th>\r\n            <th>Назва</th>\r\n            <th>Колір</th>\r\n            <th>Кількість</th>\r\n            <th>Вартість</th>\r\n            <th>Ціна за одиницю</th>\r\n            <th>Видалити</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {table}\r\n        </tbody>\r\n      </Table>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ExpTable;","import React, { useState, useEffect } from 'react';\r\n\r\nimport ExpForm from '../../components/exp/ExpForm';\r\nimport ExpTable from '../../components/exp/ExpTable';\r\n\r\nconst Exp = props => {\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n  }, [props])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ExpForm \r\n        formSubmitHandler={props.onFormSubmitHandler} \r\n        list={props.list}\r\n        />\r\n      <ExpTable expData={props.expData} deleteRowHandler={props.onDeleteRowHandler} />\r\n    </React.Fragment>\r\n  )\r\n};\r\n\r\nexport default Exp;","import React from 'react';\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from 'formik';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst ExpForm = props => {\r\n  const waresList = props.list.wares.map((item) => {\r\n    return <option key={item} value={item}>{item}</option>\r\n  });\r\n\r\n  const subwaresList = props.list.subwares.map((item) => {\r\n    return <option key={item} value={item}>{item}</option>\r\n  });\r\n\r\n  const colorsList = props.list.colors.map((item) => {\r\n    return <option key={item} value={item}>{item}</option>\r\n  });\r\n\r\n\r\n  return (    \r\n    <Formik\r\n      initialValues={{\r\n        price: '',\r\n        income: [\r\n          {\r\n            type: '',\r\n            name: '',\r\n            color: 'н/з',\r\n            quantity: ''\r\n          }\r\n        ]\r\n      }}\r\n      validate={values => {\r\n        let errors = {};\r\n        if (!values.price || isNaN(values.price)) {\r\n          errors.price = 'Невірна ціна!'\r\n        }        \r\n        values.income.map((line, index) => {\r\n          if (!values.income[index].type) {\r\n            errors.type = 'Категорія товару не обрана!'\r\n          }\r\n          if (!values.income[index].name) {\r\n            errors.name = 'Назва товару не обрана!'\r\n          }\r\n          if (isNaN(values.income[index].quantity) || values.income[index].quantity === 0 || values.income[index].quantity === '') {\r\n            errors.quantity = 'Невірна кількість!'\r\n          }\r\n        })\r\n        return errors;\r\n      }}\r\n      onSubmit={(values, { setSubmitting }, initialValues) => {\r\n        values.time = new Date().toISOString().split('T')[0];\r\n        props.formSubmitHandler(values);\r\n        console.log(values)\r\n        setSubmitting(false);\r\n      }}\r\n      render={({ isSubmitting, values, setFieldValue, errors }) => (\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <Form>\r\n                <Row>\r\n                  <Col>\r\n                    <label>\r\n                      Ціна\r\n                      <Field className=\"input-number\" name=\"price\" type=\"number\"/>\r\n                      <span className=\"errorMessage\"><ErrorMessage name=\"price\" /></span>\r\n                      <span className=\"errorMessage\"><ErrorMessage name=\"type\"/></span>\r\n                      <span className=\"errorMessage\"><ErrorMessage name=\"name\"/></span>\r\n                      <span className=\"errorMessage\"><ErrorMessage name=\"quantity\"/></span>    \r\n                    </label>\r\n                  </Col>\r\n                </Row>\r\n                <FieldArray\r\n                  name=\"income\"\r\n                  render={arrayHelpers => (\r\n                    <React.Fragment>\r\n                      {values.income && values.income.length > 0 ? (\r\n                        values.income.map((line, index) => (\r\n                          <Row key={index}>\r\n                            <Col>\r\n                              <fieldset>\r\n                                <Field\r\n                                  className=\"radioInput\"\r\n                                  type=\"radio\"\r\n                                  name={`income.${index}.type`}\r\n                                  value=\"Товар\"\r\n                                  checked={values.income[index].type === \"Товар\"}\r\n                                  onChange={() => setFieldValue(`income.${index}.type`, \"Товар\")}\r\n                                />\r\n                                <label>Товар</label>\r\n\r\n                              \r\n                                <Field\r\n                                  className=\"radioInput\"\r\n                                  type=\"radio\"\r\n                                  name={`income.${index}.type`}\r\n                                  value=\"Супутній товар\"\r\n                                  checked={values.income[index].type === \"Супутній товар\"}\r\n                                  onChange={() => setFieldValue(`income.${index}.type`, \"Супутній товар\")}\r\n                                />\r\n                                <label>Супутній товар</label>\r\n                              </fieldset>\r\n                              <fieldset>\r\n                                <label>Назва</label>\r\n                                <Field component=\"select\" name={`income.${index}.name`}>\r\n                                  {values.income[index].type === 'Товар' && waresList}\r\n                                  {values.income[index].type === 'Супутній товар' && subwaresList}\r\n                                </Field>    \r\n                              \r\n                                <label>Колір</label>\r\n                                <Field component=\"select\" name={`income.${index}.color`}>\r\n                                  {colorsList}\r\n                                </Field>\r\n                                \r\n                                <label>Кількість</label>\r\n                                <Field className=\"input-number\" name={`income.${index}.quantity`} type=\"number\"/>                          \r\n                              </fieldset>\r\n                              <button\r\n                                className=\"button-x\"\r\n                                type=\"button\"\r\n                                onClick={() => arrayHelpers.remove(index)} // remove a friend from the list\r\n                              >\r\n                                x\r\n                              </button>\r\n                            </Col>\r\n                          </Row>\r\n                        ))\r\n                      ) : null \r\n                      }\r\n                      <Row>\r\n                        <Col>\r\n                          <button type=\"button\" onClick={() => arrayHelpers.push({\r\n                            type: '',\r\n                            name: '',\r\n                            color: 'н/з',\r\n                            quantity: ''\r\n                          })}>                    \r\n                            Додати рядок\r\n                          </button>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col xs={{ span: 3, offset: 9 }}>\r\n                          <button className=\"submitData\" type=\"submit\" disabled={isSubmitting}>Внести</button>\r\n                        </Col>\r\n                      </Row>\r\n                    </React.Fragment>\r\n                  )}\r\n                />\r\n              </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      )}\r\n    />\r\n\r\n  )\r\n}\r\n\r\nexport default ExpForm;","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\n\r\nconst IncTable = props => {\r\n  const table = (!props.incData) ? null : (\r\n    Object.keys(props.incData).reverse().map((incKey, index) => {\r\n      const complect = props.incData[incKey].income.map((line, index) => {\r\n        return (\r\n          <tr key={`${incKey}_${index}`}>\r\n            <td></td>\r\n            <td></td>\r\n            <td>{line.type}</td>\r\n            <td>{line.name}</td>\r\n            <td>{line.color}</td>\r\n            <td>{line.quantity}</td>\r\n            <td></td>\r\n            <td></td>\r\n          </tr>\r\n        )\r\n      })\r\n      return (\r\n        <tbody key={incKey}>\r\n          <tr>\r\n            <td>{index+1}</td>\r\n            <td>{props.incData[incKey].time}</td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td>{props.incData[incKey].price}</td>\r\n            <td><button id={incKey} onClick={props.deleteRowHandler}>x</button></td>\r\n          </tr>\r\n          {complect}\r\n        </tbody>\r\n      )\r\n    }) \r\n  )  \r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Дата</th>\r\n            <th>Тип</th>\r\n            <th>Назва</th>\r\n            <th>Колір</th>\r\n            <th>Кількість</th>\r\n            <th>Ціна</th>\r\n            <th>Видалити</th>           \r\n          </tr>\r\n        </thead>\r\n        {table}\r\n      </Table>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default IncTable;","import React from 'react';\r\n\r\nimport IncForm from '../../components/inc/IncForm';\r\nimport IncTable from '../../components/inc/IncTable';\r\n\r\nconst Inc = props => {\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <IncForm \r\n        formSubmitHandler={props.onFormSubmitHandler}\r\n        list={props.list} \r\n        />\r\n      <IncTable incData={props.incData} deleteRowHandler={props.onDeleteRowHandler} />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Inc;","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\n\r\nconst StorageTable = props => {\r\n\r\n  //Creating form for last summing row\r\n  const lastRow = {\r\n    quantityE: 0,\r\n    totalPriceE: 0,\r\n    quantityI: 0,\r\n    totalPriceI: 0,\r\n    quantityS: 0,\r\n    totalPriceS: 0\r\n  };\r\n\r\n  //Creating storage table\r\n  const table = (!props.expTable && !props.incTable) ? null : (\r\n    //Iterating through wares in expTable\r\n    Object.keys(props.expTable.ware).sort().map((wareName, wareIndex) => {\r\n      //Creating new ware object\r\n      const ware = {};\r\n      ware.name = wareName;\r\n      ware.colors = [];\r\n      //Pushing colors into ware object\r\n      for (let colorIndex = 0; colorIndex < props.expTable.ware[wareName].length; colorIndex++ ) {\r\n        //Creating color object\r\n        const coloredWare = {};\r\n        coloredWare.color = props.expTable.ware[wareName][colorIndex].color;\r\n        coloredWare.quantityE = props.expTable.ware[wareName][colorIndex].quantity;\r\n        coloredWare.totalPriceE = props.expTable.ware[wareName][colorIndex].totalPrice;\r\n        coloredWare.priceE = props.expTable.ware[wareName][colorIndex].price;\r\n        //Checking if ware is in incTable\r\n        if (props.incTable.ware[wareName]) {\r\n          \r\n          //Checking if ware has same color in incTable\r\n          let incomeColorIndex = false;\r\n          for (let i = 0; i < props.incTable.ware[wareName].length; i++) {\r\n            if (props.incTable.ware[wareName][i].color === coloredWare.color) {\r\n              incomeColorIndex = i;\r\n            } \r\n          }\r\n          //Passing income info to the colored ware\r\n          //If color exists in income\r\n          if (typeof incomeColorIndex == 'number') {\r\n            coloredWare.quantityI = props.incTable.ware[wareName][incomeColorIndex].quantity;\r\n            coloredWare.totalPriceI =  props.incTable.ware[wareName][incomeColorIndex].totalPrice;\r\n            coloredWare.priceI = (props.incTable.ware[wareName][incomeColorIndex].price !== Infinity) ? props.incTable.ware[wareName][incomeColorIndex].price : 0;\r\n            coloredWare.quantityS = coloredWare.quantityE - coloredWare.quantityI;\r\n            coloredWare.priceS = coloredWare.priceI ? coloredWare.priceI : coloredWare.priceE;\r\n            coloredWare.totalPriceS = coloredWare.priceS * coloredWare.quantityS;\r\n          } \r\n          //If color doesn't exist in income\r\n          else {\r\n            coloredWare.quantityI = 0;\r\n            coloredWare.totalPriceI = 0;\r\n            coloredWare.priceI = 0;\r\n            coloredWare.quantityS = coloredWare.quantityE;\r\n            coloredWare.totalPriceS = coloredWare.totalPriceE;\r\n            coloredWare.priceS = coloredWare.priceE;\r\n          }          \r\n        //If ware doesn't exist in income\r\n        } else {\r\n          coloredWare.quantityI = 0;\r\n          coloredWare.totalPriceI = 0;\r\n          coloredWare.priceI = 0;\r\n          coloredWare.quantityS = coloredWare.quantityE;\r\n          coloredWare.totalPriceS = coloredWare.totalPriceE;\r\n          coloredWare.priceS = coloredWare.priceE;\r\n        }        \r\n\r\n        ware.colors.push(coloredWare);        \r\n      }\r\n\r\n      ware.quantityE = 0;\r\n      ware.quantityI = 0;\r\n      ware.quantityS = 0;\r\n      ware.totalPriceE = 0;\r\n      ware.totalPriceI = 0;\r\n      ware.totalPriceS = 0;\r\n      //Summing up data from colors\r\n      ware.colors.map(colorWare => {\r\n        ware.quantityE += colorWare.quantityE;\r\n        ware.quantityI += colorWare.quantityI;\r\n        ware.quantityS += colorWare.quantityS;\r\n        ware.totalPriceE += colorWare.totalPriceE;\r\n        ware.totalPriceI += colorWare.totalPriceI;\r\n        ware.totalPriceS += colorWare.totalPriceS;\r\n      })\r\n      //Counting prices for ware\r\n      ware.priceE = ware.totalPriceE / ware.quantityE;\r\n      ware.priceI = (ware.totalPriceI === 0 || ware.quantityI === 0) ? 0 : ware.totalPriceI / ware.quantityI;\r\n      ware.priceS = ware.totalPriceS / ware.quantityS;\r\n      //Creating ware row\r\n      const topRow = (\r\n        <tr>\r\n          <th>{wareIndex+1}</th>\r\n          <th>{ware.name}</th>\r\n          <th></th>\r\n          <th>{ware.quantityE}</th>\r\n          <th>{(ware.totalPriceE).toFixed(0)}</th>\r\n          <th>{(ware.priceE).toFixed(2)}</th>\r\n          <th>{ware.quantityI}</th>\r\n          <th>{(ware.totalPriceI).toFixed(0)}</th>\r\n          <th>{(ware.priceI).toFixed(2)}</th>\r\n          <th>{ware.quantityS}</th>\r\n          <th>{(ware.totalPriceS).toFixed(0)}</th>\r\n          <th>{(ware.priceS).toFixed(2)}</th>\r\n        </tr>\r\n      )\r\n      //Creating color rows\r\n      const rows = ware.colors.map((wareColor, wareColorIndex) => {\r\n        return (\r\n          <tr key={`${ware.name}_${wareColor.color}`}> \r\n            <td>{`${wareIndex+1}.${wareColorIndex+1}`}</td>\r\n            <td></td>\r\n            <td>{wareColor.color}</td>\r\n            <td>{wareColor.quantityE}</td>\r\n            <td>{(wareColor.totalPriceE).toFixed(0)}</td>\r\n            <td>{(wareColor.priceE).toFixed(2)}</td>\r\n            <td>{wareColor.quantityI}</td>\r\n            <td>{(wareColor.totalPriceI).toFixed(0)}</td>\r\n            <td>{(wareColor.priceI).toFixed(2)}</td>\r\n            <td>{wareColor.quantityS}</td>\r\n            <td>{(wareColor.totalPriceS).toFixed(0)}</td>\r\n            <td>{(wareColor.priceS).toFixed(2)}</td>\r\n          </tr>\r\n        )\r\n      })\r\n      //Amending total row\r\n      lastRow.quantityE += ware.quantityE;\r\n      lastRow.totalPriceE += ware.totalPriceE;\r\n      lastRow.quantityI += ware.quantityI;\r\n      lastRow.totalPriceI += ware.totalPriceI;\r\n      lastRow.quantityS += ware.quantityS;\r\n      lastRow.totalPriceS += ware.totalPriceS;\r\n\r\n      return (\r\n        <tbody key={wareName}>\r\n          {topRow}\r\n          {rows}\r\n        </tbody>\r\n      )    \r\n    })\r\n  )\r\n\r\n    //Creating storage subwarestable\r\n    const tableSubwares = (!props.expTable && !props.incTable) ? null : (\r\n      //Iterating through wares in expTable\r\n      Object.keys(props.expTable.subware).sort().map((wareName, wareIndex) => {\r\n        //Creating new ware object\r\n        const ware = {};\r\n        ware.name = wareName;\r\n        ware.colors = [];\r\n        //Pushing colors into ware object\r\n        for (let colorIndex = 0; colorIndex < props.expTable.subware[wareName].length; colorIndex++ ) {\r\n          //Creating color object\r\n          const coloredWare = {};\r\n          coloredWare.color = props.expTable.subware[wareName][colorIndex].color;\r\n          coloredWare.quantityE = props.expTable.subware[wareName][colorIndex].quantity;\r\n          coloredWare.totalPriceE = props.expTable.subware[wareName][colorIndex].totalPrice;\r\n          coloredWare.priceE = props.expTable.subware[wareName][colorIndex].price;\r\n          //Checking if ware is in incTable\r\n          if (props.incTable.ware[wareName]) {\r\n            \r\n            //Checking if ware has same color in incTable\r\n            let incomeColorIndex = false;\r\n            for (let i = 0; i < props.incTable.ware[wareName].length; i++) {\r\n              if (props.incTable.ware[wareName][i].color === coloredWare.color) {\r\n                incomeColorIndex = i;\r\n              } \r\n            }\r\n            //Passing income info to the colored ware\r\n            //If color exists in income\r\n            if (typeof incomeColorIndex == 'number') {\r\n              coloredWare.quantityI = props.incTable.ware[wareName][incomeColorIndex].quantity;\r\n              coloredWare.totalPriceI =  props.incTable.ware[wareName][incomeColorIndex].totalPrice;\r\n              coloredWare.priceI = (props.incTable.ware[wareName][incomeColorIndex].price !== Infinity) ? props.incTable.ware[wareName][incomeColorIndex].price : 0;\r\n              coloredWare.quantityS = coloredWare.quantityE - coloredWare.quantityI;\r\n              coloredWare.priceS = coloredWare.priceI ? coloredWare.priceI : coloredWare.priceE;\r\n              coloredWare.totalPriceS = coloredWare.priceS * coloredWare.quantityS;\r\n            } \r\n            //If color doesn't exist in income\r\n            else {\r\n              coloredWare.quantityI = 0;\r\n              coloredWare.totalPriceI = 0;\r\n              coloredWare.priceI = 0;\r\n              coloredWare.quantityS = coloredWare.quantityE;\r\n              coloredWare.totalPriceS = coloredWare.totalPriceE;\r\n              coloredWare.priceS = coloredWare.priceE;\r\n            }          \r\n          //If ware doesn't exist in income\r\n          } else {\r\n            coloredWare.quantityI = 0;\r\n            coloredWare.totalPriceI = 0;\r\n            coloredWare.priceI = 0;\r\n            coloredWare.quantityS = coloredWare.quantityE;\r\n            coloredWare.totalPriceS = coloredWare.totalPriceE;\r\n            coloredWare.priceS = coloredWare.priceE;\r\n          }        \r\n  \r\n          ware.colors.push(coloredWare);        \r\n        }\r\n  \r\n        ware.quantityE = 0;\r\n        ware.quantityI = 0;\r\n        ware.quantityS = 0;\r\n        ware.totalPriceE = 0;\r\n        ware.totalPriceI = 0;\r\n        ware.totalPriceS = 0;\r\n        //Summing up data from colors\r\n        ware.colors.map(colorWare => {\r\n          ware.quantityE += colorWare.quantityE;\r\n          ware.quantityI += colorWare.quantityI;\r\n          ware.quantityS += colorWare.quantityS;\r\n          ware.totalPriceE += colorWare.totalPriceE;\r\n          ware.totalPriceI += colorWare.totalPriceI;\r\n          ware.totalPriceS += colorWare.totalPriceS;\r\n        })\r\n        //Counting prices for ware\r\n        ware.priceE = ware.totalPriceE / ware.quantityE;\r\n        ware.priceI = (ware.totalPriceI === 0 || ware.quantityI === 0) ? 0 : ware.totalPriceI / ware.quantityI;\r\n        ware.priceS = ware.totalPriceS / ware.quantityS;\r\n        //Creating ware row\r\n        const topRow = (\r\n          <tr>\r\n            <th>{wareIndex+1}</th>\r\n            <th>{ware.name}</th>\r\n            <th></th>\r\n            <th>{ware.quantityE}</th>\r\n            <th>{(ware.totalPriceE).toFixed(0)}</th>\r\n            <th>{(ware.priceE).toFixed(2)}</th>\r\n            <th>{ware.quantityI}</th>\r\n            <th>{(ware.totalPriceI).toFixed(0)}</th>\r\n            <th>{(ware.priceI).toFixed(2)}</th>\r\n            <th>{ware.quantityS}</th>\r\n            <th>{(ware.totalPriceS).toFixed(0)}</th>\r\n            <th>{(ware.priceS).toFixed(2)}</th>\r\n          </tr>\r\n        )\r\n        //Creating color rows\r\n        const rows = ware.colors.map((wareColor, wareColorIndex) => {\r\n          return (\r\n            <tr key={`${ware.name}_${wareColor.color}`}> \r\n              <td>{`${wareIndex+1}.${wareColorIndex+1}`}</td>\r\n              <td></td>\r\n              <td>{wareColor.color}</td>\r\n              <td>{wareColor.quantityE}</td>\r\n              <td>{(wareColor.totalPriceE).toFixed(0)}</td>\r\n              <td>{(wareColor.priceE).toFixed(2)}</td>\r\n              <td>{wareColor.quantityI}</td>\r\n              <td>{(wareColor.totalPriceI).toFixed(0)}</td>\r\n              <td>{(wareColor.priceI).toFixed(2)}</td>\r\n              <td>{wareColor.quantityS}</td>\r\n              <td>{(wareColor.totalPriceS).toFixed(0)}</td>\r\n              <td>{(wareColor.priceS).toFixed(2)}</td>\r\n            </tr>\r\n          )\r\n        })\r\n        //Amending total row\r\n        lastRow.quantityE += ware.quantityE;\r\n        lastRow.totalPriceE += ware.totalPriceE;\r\n        lastRow.quantityI += ware.quantityI;\r\n        lastRow.totalPriceI += ware.totalPriceI;\r\n        lastRow.quantityS += ware.quantityS;\r\n        lastRow.totalPriceS += ware.totalPriceS;\r\n  \r\n        return (\r\n          <tbody key={wareName}>\r\n            {topRow}\r\n            {rows}\r\n          </tbody>\r\n        )    \r\n      })\r\n    )\r\n\r\n\r\n  //Creating total row\r\n  const lastRowTable = (\r\n    <tr>\r\n      <th></th>\r\n      <th>Всього</th>\r\n      <th></th>\r\n      <th>{lastRow.quantityE}</th>\r\n      <th>{lastRow.totalPriceE}</th>\r\n      <th></th>\r\n      <th>{lastRow.quantityI}</th>\r\n      <th>{lastRow.totalPriceI}</th>\r\n      <th></th>\r\n      <th>{lastRow.quantityS}</th>\r\n      <th>{(lastRow.totalPriceS).toFixed(2)}</th>\r\n      <th></th>\r\n    </tr>\r\n  )\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Товар</th>\r\n            <th>Колір</th>\r\n            <th>Кількість виготовлено</th>\r\n            <th>Вартість виготовлено</th>\r\n            <th>Собівартість одиниці</th>\r\n            <th>Кількість продано</th>\r\n            <th>Вартість продано</th>\r\n            <th>Ціна одиниці продано</th>\r\n            <th>Кількість на складі</th>\r\n            <th>Вартість на складі</th>\r\n            <th>Ціна одиниці на складі</th>\r\n          </tr>\r\n        </thead>\r\n\r\n          {table}\r\n          {tableSubwares}\r\n        <tbody>\r\n          {lastRowTable}\r\n        </tbody>\r\n      </Table>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default StorageTable;","import React, { useState, useEffect } from 'react';\r\n\r\nimport StorageTable from '../../components/storage/StorageTable';\r\n\r\nconst Storage = props => {\r\n  const [expTable, setExpTable] = useState(null);\r\n  const [incTable, setIncTable] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const tableE = countExpTable();\r\n    const tableI = countIncTable();    \r\n    setExpTable(tableE);\r\n    setIncTable(tableI);\r\n  }, [props] )\r\n  \r\n  const countIncTable = () => {\r\n    const tableIncWares = {};\r\n    const tablIncSubWares = {};\r\n    //Check if incData received\r\n    if (!props.incData || !props.expData) {\r\n      return null\r\n    } else {\r\n      //Iteration through income instances\r\n      Object.keys(props.incData).map((incKey, index) => {\r\n        //Maping each income item\r\n        props.incData[incKey].income.map((incItem, incIndex) => {\r\n          //Creating object to push into income arrays\r\n          const item = {type: incItem.type}\r\n          const totalPrice = (incIndex === 0) ? props.incData[incKey].price : 0;\r\n          item[incItem.name] = {\r\n            color: incItem.color,\r\n            quantity: incItem.quantity,\r\n            totalPrice: totalPrice,\r\n            price: incItem.quantity / totalPrice\r\n          }\r\n          //Checking if object is ware\r\n          if (item.type === \"Товар\") {\r\n            //Checking if ware already exists\r\n            if (tableIncWares[props.incData[incKey].income[incIndex].name]) {\r\n              let isColor = false;\r\n              //Iterating through color of each ware\r\n              for (let i = 0; i < tableIncWares[props.incData[incKey].income[incIndex].name].length; i++ ) {\r\n                //Checking if color exists\r\n                if (tableIncWares[props.incData[incKey].income[incIndex].name][i].color === item[incItem.name].color) {\r\n                  //Amending item if color exist\r\n                  tableIncWares[props.incData[incKey].income[incIndex].name][i].quantity += item[incItem.name].quantity;\r\n                  tableIncWares[props.incData[incKey].income[incIndex].name][i].totalPrice += item[incItem.name].totalPrice;\r\n                  tableIncWares[props.incData[incKey].income[incIndex].name][i].price = tableIncWares[props.incData[incKey].income[incIndex].name][i].totalPrice / tableIncWares[props.incData[incKey].income[incIndex].name][i].quantity;\r\n                  isColor = true\r\n                } \r\n              }\r\n              //Adding array item if no such color\r\n              if (!isColor) {\r\n                tableIncWares[props.incData[incKey].income[incIndex].name].push(item[incItem.name])  \r\n              }\r\n              //Adding object if no such ware\r\n            } else {\r\n              tableIncWares[props.incData[incKey].income[incIndex].name] = []\r\n              tableIncWares[props.incData[incKey].income[incIndex].name].push(item[incItem.name])\r\n            }\r\n            \r\n          } else if (item.type === \"Супутній товар\") {\r\n            if (tablIncSubWares[props.incData[incKey].income[incIndex].name]) {\r\n              let isColor = false;\r\n              for (let i = 0; i < tablIncSubWares[props.incData[incKey].income[incIndex].name].length; i++ ) {\r\n                if (tablIncSubWares[props.incData[incKey].income[incIndex].name][i].color === item[incItem.name].color) {\r\n                  tablIncSubWares[props.incData[incKey].income[incIndex].name][i].quantity += item[incItem.name].quantity;\r\n                  tablIncSubWares[props.incData[incKey].income[incIndex].name][i].totalPrice += item[incItem.name].totalPrice;\r\n                  tablIncSubWares[props.incData[incKey].income[incIndex].name][i].price = tablIncSubWares[props.incData[incKey].income[incIndex].name][i].totalPrice / tablIncSubWares[props.incData[incKey].income[incIndex].name][i].quantity;\r\n                  isColor = true\r\n                } \r\n              }\r\n              if (!isColor) {\r\n                tablIncSubWares[props.incData[incKey].income[incIndex].name].push(item[incItem.name])\r\n              }\r\n            } else {\r\n              tablIncSubWares[props.incData[incKey].income[incIndex].name] = []\r\n              tablIncSubWares[props.incData[incKey].income[incIndex].name].push(item[incItem.name])\r\n            }\r\n          }\r\n\r\n        })\r\n\r\n      })\r\n\r\n    }\r\n    const tableInc = {\r\n      ware: tableIncWares,\r\n      subware: tablIncSubWares\r\n    }\r\n    return tableInc;\r\n  }\r\n\r\n  const countExpTable = () => {\r\n    const tableExpWares = {};\r\n    const tableExpSubWares = {};\r\n    const tableExpExp = {};\r\n    if (!props.incData || !props.expData) {\r\n      return null\r\n    } else {\r\n      // Iterating through expences\r\n      Object.keys(props.expData).map((expKey, index) => {\r\n        //Checking if is a ware\r\n        if (props.expData[expKey].type === 'Товар') {\r\n          //Checking if ware is in a table\r\n          if (tableExpWares.hasOwnProperty(props.expData[expKey].name)) {\r\n            let isColor = false;\r\n            //Checking if ware color in a table\r\n            for (let i = 0; i < tableExpWares[props.expData[expKey].name].length; i++ ) {\r\n              //Adding to table if ware color is present\r\n              if (props.expData[expKey].color === tableExpWares[props.expData[expKey].name][i].color) {\r\n                tableExpWares[props.expData[expKey].name][i].quantity += props.expData[expKey].quantity;\r\n                tableExpWares[props.expData[expKey].name][i].totalPrice += props.expData[expKey].totalPrice;\r\n                tableExpWares[props.expData[expKey].name][i].price = tableExpWares[props.expData[expKey].name][i].totalPrice / tableExpWares[props.expData[expKey].name][i].quantity;\r\n                isColor = true\r\n              } \r\n            }\r\n            //Adding to table if ware color is new\r\n            if (!isColor) {\r\n              const ware = {};\r\n              ware.color = props.expData[expKey].color;\r\n              ware.quantity = props.expData[expKey].quantity;\r\n              ware.totalPrice = props.expData[expKey].totalPrice;\r\n              ware.price = props.expData[expKey].totalPrice / props.expData[expKey].quantity;\r\n              tableExpWares[props.expData[expKey].name].push(ware);\r\n            }\r\n          } \r\n          //Adding to table if ware is new\r\n          else {\r\n            tableExpWares[props.expData[expKey].name] = [];\r\n            const ware = {};\r\n            ware.color = props.expData[expKey].color;\r\n            ware.quantity = props.expData[expKey].quantity;\r\n            ware.totalPrice = props.expData[expKey].totalPrice;\r\n            ware.price = props.expData[expKey].totalPrice / props.expData[expKey].quantity;\r\n            tableExpWares[props.expData[expKey].name].push(ware);\r\n          }\r\n        }\r\n\r\n        //Checking if is a subware\r\n        if (props.expData[expKey].type === 'Супутній товар') {\r\n          //Checking if ware is in a table\r\n          if (tableExpSubWares.hasOwnProperty(props.expData[expKey].name)) {\r\n            let isColor = false;\r\n            //Checking if ware color in a table\r\n            for (let i = 0; i < tableExpSubWares[props.expData[expKey].name].length; i++ ) {\r\n              //Adding to table if ware color is present\r\n              if (props.expData[expKey].color === tableExpSubWares[props.expData[expKey].name][i].color) {\r\n                tableExpSubWares[props.expData[expKey].name][i].quantity += props.expData[expKey].quantity;\r\n                tableExpSubWares[props.expData[expKey].name][i].totalPrice += props.expData[expKey].totalPrice;\r\n                tableExpSubWares[props.expData[expKey].name][i].price = tableExpSubWares[props.expData[expKey].name][i].totalPrice / tableExpSubWares[props.expData[expKey].name][i].quantity;\r\n                isColor = true\r\n              } \r\n            }\r\n            //Adding to table if ware color is new\r\n            if (!isColor) {\r\n              const ware = {};\r\n              ware.color = props.expData[expKey].color;\r\n              ware.quantity = props.expData[expKey].quantity;\r\n              ware.totalPrice = props.expData[expKey].totalPrice;\r\n              ware.price = props.expData[expKey].totalPrice / props.expData[expKey].quantity;\r\n              tableExpSubWares[props.expData[expKey].name].push(ware);\r\n            }\r\n          } \r\n          //Adding to table if ware is new\r\n          else {\r\n            tableExpSubWares[props.expData[expKey].name] = [];\r\n            const ware = {};\r\n            ware.color = props.expData[expKey].color;\r\n            ware.quantity = props.expData[expKey].quantity;\r\n            ware.totalPrice = props.expData[expKey].totalPrice;\r\n            ware.price = props.expData[expKey].totalPrice / props.expData[expKey].quantity;\r\n            tableExpSubWares[props.expData[expKey].name].push(ware);\r\n          }\r\n        }\r\n\r\n        //Checking if is an expence\r\n        if (props.expData[expKey].type === 'Витрата') {\r\n          //Checking if ware is in a table\r\n          if (tableExpExp.hasOwnProperty(props.expData[expKey].name)) {\r\n            let isColor = false;\r\n            //Checking if ware color in a table\r\n            for (let i = 0; i < tableExpExp[props.expData[expKey].name].length; i++ ) {\r\n              //Adding to table if ware color is present\r\n              if (props.expData[expKey].color === tableExpExp[props.expData[expKey].name][i].color) {\r\n                tableExpExp[props.expData[expKey].name][i].quantity += props.expData[expKey].quantity;\r\n                tableExpExp[props.expData[expKey].name][i].totalPrice += props.expData[expKey].totalPrice;\r\n                tableExpExp[props.expData[expKey].name][i].price = tableExpExp[props.expData[expKey].name][i].totalPrice / tableExpExp[props.expData[expKey].name][i].quantity;\r\n                isColor = true\r\n              } \r\n            }\r\n            //Adding to table if ware color is new\r\n            if (!isColor) {\r\n              const ware = {};\r\n              ware.color = props.expData[expKey].color;\r\n              ware.quantity = props.expData[expKey].quantity;\r\n              ware.totalPrice = props.expData[expKey].totalPrice;\r\n              ware.price = props.expData[expKey].totalPrice / props.expData[expKey].quantity;\r\n              tableExpExp[props.expData[expKey].name].push(ware);\r\n            }\r\n          } \r\n          //Adding to table if ware is new\r\n          else {\r\n            tableExpExp[props.expData[expKey].name] = [];\r\n            const ware = {};\r\n            ware.color = props.expData[expKey].color;\r\n            ware.quantity = props.expData[expKey].quantity;\r\n            ware.totalPrice = props.expData[expKey].totalPrice;\r\n            ware.price = props.expData[expKey].totalPrice / props.expData[expKey].quantity;\r\n            tableExpExp[props.expData[expKey].name].push(ware);\r\n          }\r\n        }\r\n\r\n        return '';          \r\n      })      \r\n    }\r\n    const tableExp = {\r\n      ware: tableExpWares,\r\n      subware: tableExpSubWares,\r\n      exp: tableExpExp\r\n    }\r\n    return tableExp;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <StorageTable expTable={expTable} incTable={incTable}/>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Storage;","import React, { useState, useEffect } from 'react';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from '../../axios';\r\n\r\nimport Exp from '../exp/Exp';\r\nimport Inc from '../inc/Inc';\r\nimport Storage from '../storage/Storage';\r\nimport './workArea.css';\r\nimport './Forms.css'\r\n\r\nconst WorkArea = props => {\r\n  //Ставлю стейт нал\r\n  const [expData, setExpData] = useState({});\r\n  const [incData, setIncData] = useState(null);\r\n  const [showError, setShowError] = useState(false);\r\n  const [formList, setFormList] = useState({\r\n    wares: [],\r\n    subwares: [],\r\n    exps: [],\r\n    colors: []\r\n  });\r\n  //З серва тягну дані для наповнення \r\n  useEffect(() => {\r\n    axios.get('/.json?auth=' + props.authData.idToken)\r\n    .then( res => {\r\n      console.log(res);\r\n      setExpData(res.data.exp);\r\n      setIncData(res.data.inc);\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }, [showError] )\r\n  //На основі даних з серва хочу замутити новий стейт\r\n  useEffect(() => {\r\n    if (expData && Object.keys(expData).length > 0 ) {\r\n      const list = {\r\n        wares: [],\r\n        subwares: [],\r\n        exps: [],\r\n        colors: []\r\n      }\r\n      Object.keys(expData).map(key => {\r\n        switch (expData[key].type) {\r\n          case 'Товар':\r\n          if (!(list.wares.indexOf(expData[key].name) > -1)) {\r\n            list.wares.push(expData[key].name)\r\n          };\r\n          break;\r\n          case 'Супутній товар':\r\n            if (!(list.subwares.indexOf(expData[key].name) > -1)) {\r\n              list.subwares.push(expData[key].name)\r\n            };\r\n          break;\r\n          case 'Витрата':\r\n            if (!(list.exps.indexOf(expData[key].name) > -1)) {\r\n              list.exps.push(expData[key].name)\r\n            };\r\n          break;\r\n          default:\r\n            break;\r\n        }\r\n        if (!(list.colors.indexOf(expData[key].color) > -1)) {\r\n          list.colors.push(expData[key].color)\r\n        };\r\n      });\r\n      list.wares.sort();\r\n      list.subwares.sort();\r\n      list.exps.sort();\r\n      list.colors.sort();\r\n      setFormList(list);\r\n    }\r\n  }, [expData])\r\n\r\n  const onFormSubmitHandlerExp = (values)  => {\r\n    axios.post('/exp.json?auth=' + props.authData.idToken, values)\r\n    .then(response => {\r\n      console.log(response);\r\n      const newExpData = {\r\n        ...expData,\r\n        [response.data.name]: values\r\n      };\r\n      setExpData(newExpData);\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n      setShowError(true);\r\n    })\r\n  }\r\n\r\n  const onFormSubmitHandlerInc = (values)  => {\r\n    axios.post('/inc.json?auth=' + props.authData.idToken, values)\r\n    .then(response => {\r\n      console.log(response);\r\n      const newIncData = {\r\n        ...incData,\r\n        [response.data.name]: values\r\n      };\r\n      setIncData(newIncData);\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n      setShowError(true);\r\n    })\r\n  }\r\n\r\n  const onDeleteRowHandlerExp = (event) => {\r\n    const id = event.target.id;\r\n    axios.delete('/exp/' + id + '.json?auth=' + props.authData.idToken)\r\n    .then( res => {\r\n      console.log(res);\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n      setShowError(true);\r\n    })\r\n    const newExpData = {};\r\n    for (const key in expData) {\r\n      if (key !== id) {\r\n        newExpData[key] = expData[key]\r\n      }\r\n    }\r\n    setExpData(newExpData);\r\n  }\r\n\r\n  const onDeleteRowHandlerInc = (event) => {\r\n    const id = event.target.id;\r\n    axios.delete('/inc/' + id + '.json?auth=' + props.authData.idToken)\r\n    .then( res => {\r\n      console.log(res);\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n      setShowError(true);\r\n    })\r\n    const newIncData = {};\r\n    for (const key in incData) {\r\n      if (key !== id) {\r\n        newIncData[key] = incData[key]\r\n      }\r\n    }\r\n    setIncData(newIncData);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Tabs defaultActiveKey=\"storage\" id=\"uncontrolled-tab-example\">\r\n        <Tab eventKey=\"exp\" title=\"Витрати\">\r\n          <Exp \r\n            expData={expData}\r\n            onFormSubmitHandler={onFormSubmitHandlerExp}\r\n            onDeleteRowHandler={onDeleteRowHandlerExp}\r\n            list={formList}\r\n          />\r\n        </Tab>\r\n        <Tab eventKey=\"inc\" title=\"Доходи\">\r\n          <Inc\r\n            incData={incData}\r\n            onFormSubmitHandler={onFormSubmitHandlerInc}\r\n            onDeleteRowHandler={onDeleteRowHandlerInc}\r\n            list={formList}\r\n          />\r\n        </Tab>\r\n        <Tab eventKey=\"storage\" title=\"Склад\">\r\n          <Storage expData={expData} incData={incData}/>\r\n        </Tab>\r\n      </Tabs>\r\n      {!props.authData.signedIn && <Redirect to=\"/\" />}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default WorkArea;","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\n\r\nimport './Auth.css'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Auth = (props) => {  \r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"authForm\">\r\n            <Formik      \r\n            initialValues={{ \r\n              email: '',\r\n              password: ''\r\n            }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n\r\n              props.submitHandler(values);\r\n              setSubmitting(false);\r\n            }}\r\n          >\r\n            {({ isSubmitting, values, setFieldValue }) => (\r\n              <Form>\r\n                    <Field\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Email\"           \r\n                    />\r\n\r\n                    <Field\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      placeholder=\"Password\"              \r\n                    />\r\n                <button type=\"submit\" disabled={isSubmitting}>\r\n                  Log In\r\n                </button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n  )\r\n}\r\n\r\nexport default Auth;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Navbar, Nav, Image } from 'react-bootstrap';\r\n\r\nimport Logo from '../../assets/images/logo.jpg';\r\nimport './Navigation.css'\r\n\r\nconst Navigation = props => {\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <NavLink to=\"/index\" exact>\r\n        <Navbar.Brand><Image src={Logo}/> </Navbar.Brand>\r\n      </NavLink>\r\n      <Nav className=\"mr-auto\">\r\n        {!props.authState && <NavLink className=\"nav-link\" to=\"/index\" exact>Home</NavLink>}\r\n        {props.authState && <NavLink className=\"nav-link\" to=\"/workarea\" exact>Work Area</NavLink>}\r\n        {props.authState && <button className=\"logout\" onClick={props.onLogout}>Log Out</button >}\r\n      </Nav>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Navigation;","import React, { useState, useEffect } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\nimport WorkArea from './containers/workArea/workArea';\nimport Auth from './containers/auth/Auth';\nimport Navigation from './containers/navigation/Navigation';\nimport './App.css';\n\nconst App = () => {\n  const [authData, setAuthData] = useState({\n    idToken: localStorage.getItem('token'),\n    userId: localStorage.getItem('userId'),\n    signedIn: localStorage.getItem('signedIn'),\n  });\n\n  const loginHandler = (values)  => {\n    values.returnSecureToken = true;\n    axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDFX9LAlOi-6ONPEXG3hw22qJT5aIo91Z4', values)\n    .then(response => {\n      const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n      localStorage.setItem('token', response.data.idToken);\n      localStorage.setItem('expirationDate', expirationDate);\n      localStorage.setItem('userId', response.data.localId);\n      localStorage.setItem('signedIn', true)\n      const newAuthData = {\n        idToken: response.data.idToken,\n        userId: response.data.localId,\n        refreshToken: response.data.refreshToken,\n        signedIn: true\n      }\n      setAuthData(newAuthData);\n      setTimeout(() => {logoutHandler()}, response.data.expiresIn * 1000);\n\n    })\n    .catch(error => {\n      console.log(error);\n      \n    })\n  }\n\n  const logoutHandler = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('signedIn');\n    setAuthData({\n      idToken: '',\n      userId: '',\n      signedIn: ''\n    });\n    console.log('logout', authData)\n  }\n\n  return (\n    <React.Fragment>\n      <Navigation authState={authData.signedIn} onLogout={logoutHandler}/>\n      <Switch>        \n        <Route path=\"/workarea\" ><WorkArea authData={authData}/></Route>      \n        <Route path=\"/\" ><Auth submitHandler={loginHandler} token={authData.idToken}/></Route>\n      </Switch>\n      {authData.signedIn && <Redirect to=\"/workarea\" />}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst app = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.edfb4b75.jpg\";"],"sourceRoot":""}