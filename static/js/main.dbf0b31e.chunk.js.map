{"version":3,"sources":["axios.js","components/exp/ExpForm.js","components/exp/ExpTable.js","containers/exp/Exp.js","components/inc/IncForm.js","components/inc/IncTable.js","containers/inc/Inc.js","components/storage/StorageTable.js","containers/storage/Storage.js","containers/workArea/workArea.js","containers/auth/Auth.js","containers/navigation/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["instance","axios","create","baseURL","ExpForm","props","waresList","list","wares","map","item","key","value","subwaresList","subwares","expsList","exps","colorsList","colors","initialValues","type","name","color","quantity","totalPrice","validate","values","errors","isNaN","onSubmit","setSubmitting","time","Date","toISOString","split","trim","Number","formSubmitHandler","isSubmitting","setFieldValue","checked","onChange","className","id","disabled","ExpTable","table","expData","Object","keys","reverse","expKey","index","toFixed","onClick","deleteRowHandler","Fragment","Table","striped","bordered","hover","Exp","useEffect","onFormSubmitHandler","onDeleteRowHandler","price","income","line","console","log","render","arrayHelpers","length","component","remove","push","IncTable","incData","incKey","complect","Inc","IncForm","StorageTable","lastRow","quantityE","totalPriceE","quantityI","totalPriceI","quantityS","totalPriceS","expTable","incTable","ware","sort","wareName","wareIndex","colorIndex","coloredWare","priceE","incomeColorIndex","i","priceI","Infinity","priceS","colorWare","topRow","rows","wareColor","wareColorIndex","tableSubwares","subware","lastRowTable","Storage","useState","setExpTable","setIncTable","tableE","countExpTable","tableI","countIncTable","tableIncWares","tablIncSubWares","incItem","incIndex","isColor","tableExpWares","tableExpSubWares","tableExpExp","hasOwnProperty","exp","WorkArea","setExpData","setIncData","showError","setShowError","formList","setFormList","get","authData","idToken","then","res","data","inc","catch","error","indexOf","Tabs","defaultActiveKey","Tab","eventKey","title","post","response","newExpData","event","target","delete","newIncData","Auth","email","password","submitHandler","placeholder","Navigation","to","exact","authState","onLogout","App","localStorage","getItem","userId","signedIn","setAuthData","logoutHandler","removeItem","path","returnSecureToken","expirationDate","getTime","expiresIn","setItem","localId","newAuthData","refreshToken","setTimeout","token","Boolean","window","location","hostname","match","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dbf0b31e.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://sena-totem.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nconst ExpForm = props => {\r\n  \r\n  const waresList = props.list.wares.map((item) => {\r\n    return <option key={item} value={item} />\r\n  });\r\n\r\n  const subwaresList = props.list.subwares.map((item) => {\r\n    return <option key={item} value={item} />\r\n  });\r\n\r\n  const expsList = props.list.exps.map((item) => {\r\n    return <option key={item} value={item} />\r\n  });\r\n\r\n  const colorsList = props.list.colors.map((item) => {\r\n    return <option key={item} value={item} />\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n    initialValues={{ \r\n      type: '',\r\n      name: '',\r\n      color: '',\r\n      quantity: '',\r\n      totalPrice: ''\r\n    }}\r\n    validate={values => {\r\n      let errors = {};\r\n      if (!values.type) {\r\n        errors.type = 'Необхідно обрати категорію!'\r\n      }\r\n      if (!values.name) {\r\n        errors.name = 'Необхідно внести назву!'\r\n      }\r\n      if (isNaN(values.quantity) || ((values.quantity === 0 || values.quantity === '') && (values.type === 'Товар' || values.type === 'Супутній товар'))) {\r\n        errors.quantity = 'Невірна кількість!'\r\n      }\r\n      if (!values.totalPrice || isNaN(values.totalPrice)) {\r\n        errors.totalPrice = 'Невірна вартість!'\r\n      }\r\n\r\n      return errors;\r\n    }}\r\n    onSubmit={(values, { setSubmitting }, initialValues) => {\r\n      values.time = new Date().toISOString().split('T')[0];\r\n      if(values.color.trim() === '') {\r\n        values.color = 'н/з';\r\n      }\r\n      values.quantity = Number(values.quantity);\r\n      values.totalPrice = Number(values.totalPrice)\r\n      props.formSubmitHandler(values);\r\n      setSubmitting(false);\r\n    }}\r\n  >\r\n    {({ isSubmitting, values, setFieldValue }) => (\r\n      <Form>\r\n        <div>\r\n          <label>\r\n            <Field\r\n              type=\"radio\"\r\n              name=\"type\"\r\n              value=\"Товар\"\r\n              checked={values.type === \"Товар\"}\r\n              onChange={() => setFieldValue(\"type\", \"Товар\")}\r\n            />Товар\r\n          </label>\r\n          <label>\r\n            <Field\r\n              type=\"radio\"\r\n              name=\"type\"\r\n              value=\"Супутній товар\"\r\n              checked={values.type === \"Супутній товар\"}\r\n              onChange={() => setFieldValue(\"type\", \"Супутній товар\")}\r\n            />Супутній товар\r\n          </label>\r\n          <label>\r\n            <Field\r\n              type=\"radio\"\r\n              name=\"type\"\r\n              value=\"Витрата\"\r\n              checked={values.type === \"Витрата\"}\r\n              onChange={() => setFieldValue(\"type\", \"Витрата\")}\r\n            />Витрата\r\n          </label>\r\n          <span className=\"errorMessage\"><ErrorMessage name=\"type\" /></span>\r\n        </div>\r\n\r\n        <label>\r\n          Назва\r\n          <Field name=\"name\" list=\"name\" />              \r\n            <datalist id=\"name\">\r\n              {values.type === 'Товар' && waresList}\r\n              {values.type === 'Супутній товар' && subwaresList}\r\n              {values.type === 'Витрата' && expsList}\r\n            </datalist>\r\n            <span className=\"errorMessage\"><ErrorMessage name=\"name\" /></span>     \r\n        </label>\r\n        <label>\r\n          Колір\r\n          <Field name=\"color\" list=\"color\" />              \r\n            <datalist id=\"color\">\r\n              {colorsList}\r\n            </datalist>        \r\n        </label>\r\n        <label>\r\n          Кількість\r\n          <Field \r\n            name=\"quantity\" \r\n            type=\"number\"         \r\n            disabled={values.type === 'Витрата'}/>                          \r\n          <span className=\"errorMessage\"><ErrorMessage name=\"quantity\" /></span>   \r\n        </label>\r\n        <label>\r\n          Вартість\r\n          <Field name=\"totalPrice\" type=\"number\"/>\r\n          <span className=\"errorMessage\"><ErrorMessage name=\"totalPrice\" /></span>\r\n        </label>\r\n        <label>\r\n          Ціна за одиницю\r\n          <Field \r\n            name=\"price\" \r\n            value={(isNaN(values.totalPrice / values.quantity) || values.type === 'Витрата') ? 0 : values.totalPrice / values.quantity} \r\n            onChange={() => setFieldValue(\"price\", values.totalPrice / values.quantity)}\r\n            disabled/> \r\n        </label>\r\n \r\n        <button type=\"submit\" disabled={isSubmitting}>\r\n          Submit\r\n        </button>\r\n      </Form>\r\n    )}\r\n  </Formik>\r\n  )\r\n}\r\n\r\nexport default ExpForm;","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\n\r\nconst ExpTable = props => {\r\n  \r\n  const table = (!props.expData) ? null : (\r\n    Object.keys(props.expData).reverse().map((expKey, index) => {\r\n      return (\r\n        <tr key={expKey}>\r\n          <td>{index+1}</td>\r\n          <td>{props.expData[expKey].time}</td>\r\n          <td>{props.expData[expKey].type}</td>\r\n          <td>{props.expData[expKey].name}</td>\r\n          <td>{props.expData[expKey].color}</td>\r\n          <td>{props.expData[expKey].quantity}</td>\r\n          <td>{props.expData[expKey].totalPrice}</td>\r\n          <td>{(props.expData[expKey].totalPrice / props.expData[expKey].quantity).toFixed(2)}</td>\r\n          <td><button id={expKey} onClick={props.deleteRowHandler}>x</button></td>\r\n        </tr>\r\n      )\r\n    }) \r\n  )  \r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Дата</th>\r\n            <th>Тип</th>\r\n            <th>Назва</th>\r\n            <th>Колір</th>\r\n            <th>Кількість</th>\r\n            <th>Вартість</th>\r\n            <th>Ціна за одиницю</th>\r\n            <th>Видалити</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {table}\r\n        </tbody>\r\n      </Table>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ExpTable;","import React, { useState, useEffect } from 'react';\r\n\r\nimport ExpForm from '../../components/exp/ExpForm';\r\nimport ExpTable from '../../components/exp/ExpTable';\r\n\r\nconst Exp = props => {\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n  }, [props])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ExpForm \r\n        formSubmitHandler={props.onFormSubmitHandler} \r\n        list={props.list}\r\n        />\r\n      <ExpTable expData={props.expData} deleteRowHandler={props.onDeleteRowHandler} />\r\n    </React.Fragment>\r\n  )\r\n};\r\n\r\nexport default Exp;","import React from 'react';\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from 'formik';\r\n\r\nconst ExpForm = props => {\r\n  const waresList = props.list.wares.map((item) => {\r\n    return <option key={item} value={item}>{item}</option>\r\n  });\r\n\r\n  const subwaresList = props.list.subwares.map((item) => {\r\n    return <option key={item} value={item}>{item}</option>\r\n  });\r\n\r\n  const colorsList = props.list.colors.map((item) => {\r\n    return <option key={item} value={item}>{item}</option>\r\n  });\r\n\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        price: '',\r\n        income: [\r\n          {\r\n            type: '',\r\n            name: '',\r\n            color: 'н/з',\r\n            quantity: ''\r\n          }\r\n        ]\r\n      }}\r\n      validate={values => {\r\n        let errors = {};\r\n        if (!values.price || isNaN(values.price)) {\r\n          errors.price = 'Невірна ціна!'\r\n        }        \r\n        values.income.map((line, index) => {\r\n          if (!values.income[index].type) {\r\n            errors.type = 'Категорія товару не обрана!'\r\n          }\r\n          if (!values.income[index].name) {\r\n            errors.name = 'Назва товару не обрана!'\r\n          }\r\n          if (isNaN(values.income[index].quantity) || values.income[index].quantity === 0 || values.income[index].quantity === '') {\r\n            errors.quantity = 'Невірна кількість!'\r\n          }\r\n        })\r\n        return errors;\r\n      }}\r\n      onSubmit={(values, { setSubmitting }, initialValues) => {\r\n        values.time = new Date().toISOString().split('T')[0];\r\n        props.formSubmitHandler(values);\r\n        console.log(values)\r\n        setSubmitting(false);\r\n      }}\r\n      render={({ isSubmitting, values, setFieldValue, errors }) => (\r\n        <Form>\r\n          <label>\r\n            Ціна\r\n            <Field name=\"price\" type=\"number\"/>\r\n            <span className=\"errorMessage\"><ErrorMessage name=\"price\" /></span>\r\n            <span className=\"errorMessage\"><ErrorMessage name=\"type\"/></span>\r\n            <span className=\"errorMessage\"><ErrorMessage name=\"name\"/></span>\r\n            <span className=\"errorMessage\"><ErrorMessage name=\"quantity\"/></span>    \r\n          </label>\r\n          <FieldArray\r\n            name=\"income\"\r\n            render={arrayHelpers => (\r\n              <div>\r\n                {values.income && values.income.length > 0 ? (\r\n                  values.income.map((line, index) => (\r\n                    <div key={index}>\r\n\r\n                      <label>\r\n                        <Field\r\n                          type=\"radio\"\r\n                          name={`income.${index}.type`}\r\n                          value=\"Товар\"\r\n                          checked={values.income[index].type === \"Товар\"}\r\n                          onChange={() => setFieldValue(`income.${index}.type`, \"Товар\")}\r\n                        />Товар\r\n                      </label>\r\n                      <label>\r\n                        <Field\r\n                          type=\"radio\"\r\n                          name={`income.${index}.type`}\r\n                          value=\"Супутній товар\"\r\n                          checked={values.income[index].type === \"Супутній товар\"}\r\n                          onChange={() => setFieldValue(`income.${index}.type`, \"Супутній товар\")}\r\n                        />Супутній товар\r\n                      </label>                 \r\n                      <label>\r\n                        Назва\r\n                        <Field component=\"select\" name={`income.${index}.name`}>\r\n                          {values.income[index].type === 'Товар' && waresList}\r\n                          {values.income[index].type === 'Супутній товар' && subwaresList}\r\n                        </Field>    \r\n                      </label>\r\n                      <label>\r\n                        Колір\r\n                        <Field component=\"select\" name={`income.${index}.color`}>\r\n                          {colorsList}\r\n                        </Field>\r\n                      </label>\r\n                      <label>\r\n                        Кількість\r\n                        <Field name={`income.${index}.quantity`} type=\"number\"/>                          \r\n                      </label>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => arrayHelpers.remove(index)} // remove a friend from the list\r\n                      >\r\n                        X\r\n                      </button>\r\n                    </div>\r\n                  ))\r\n                ) : null \r\n                }\r\n                <div>\r\n                  <button type=\"button\" onClick={() => arrayHelpers.push({\r\n                    type: '',\r\n                    name: '',\r\n                    color: 'н/з',\r\n                    quantity: ''\r\n                  })}>                    \r\n                    Add new Line\r\n                  </button>\r\n                  <button type=\"submit\" disabled={isSubmitting}>Submit</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          />\r\n        </Form>\r\n      )}\r\n    />\r\n\r\n  )\r\n}\r\n\r\nexport default ExpForm;","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\n\r\nconst IncTable = props => {\r\n  const table = (!props.incData) ? null : (\r\n    Object.keys(props.incData).reverse().map((incKey, index) => {\r\n      const complect = props.incData[incKey].income.map((line, index) => {\r\n        return (\r\n          <tr key={`${incKey}_${index}`}>\r\n            <td></td>\r\n            <td></td>\r\n            <td>{line.type}</td>\r\n            <td>{line.name}</td>\r\n            <td>{line.color}</td>\r\n            <td>{line.quantity}</td>\r\n            <td></td>\r\n            <td></td>\r\n          </tr>\r\n        )\r\n      })\r\n      return (\r\n        <tbody key={incKey}>\r\n          <tr>\r\n            <td>{index+1}</td>\r\n            <td>{props.incData[incKey].time}</td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td>{props.incData[incKey].price}</td>\r\n            <td><button id={incKey} onClick={props.deleteRowHandler}>x</button></td>\r\n          </tr>\r\n          {complect}\r\n        </tbody>\r\n      )\r\n    }) \r\n  )  \r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Дата</th>\r\n            <th>Тип</th>\r\n            <th>Назва</th>\r\n            <th>Колір</th>\r\n            <th>Кількість</th>\r\n            <th>Ціна</th>\r\n            <th>Видалити</th>           \r\n          </tr>\r\n        </thead>\r\n        {table}\r\n      </Table>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default IncTable;","import React from 'react';\r\n\r\nimport IncForm from '../../components/inc/IncForm';\r\nimport IncTable from '../../components/inc/IncTable';\r\n\r\nconst Inc = props => {\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <IncForm \r\n        formSubmitHandler={props.onFormSubmitHandler}\r\n        list={props.list} \r\n        />\r\n      <IncTable incData={props.incData} deleteRowHandler={props.onDeleteRowHandler} />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Inc;","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\n\r\nconst StorageTable = props => {\r\n\r\n  //Creating form for last summing row\r\n  const lastRow = {\r\n    quantityE: 0,\r\n    totalPriceE: 0,\r\n    quantityI: 0,\r\n    totalPriceI: 0,\r\n    quantityS: 0,\r\n    totalPriceS: 0\r\n  };\r\n\r\n  //Creating storage table\r\n  const table = (!props.expTable && !props.incTable) ? null : (\r\n    //Iterating through wares in expTable\r\n    Object.keys(props.expTable.ware).sort().map((wareName, wareIndex) => {\r\n      //Creating new ware object\r\n      const ware = {};\r\n      ware.name = wareName;\r\n      ware.colors = [];\r\n      //Pushing colors into ware object\r\n      for (let colorIndex = 0; colorIndex < props.expTable.ware[wareName].length; colorIndex++ ) {\r\n        //Creating color object\r\n        const coloredWare = {};\r\n        coloredWare.color = props.expTable.ware[wareName][colorIndex].color;\r\n        coloredWare.quantityE = props.expTable.ware[wareName][colorIndex].quantity;\r\n        coloredWare.totalPriceE = props.expTable.ware[wareName][colorIndex].totalPrice;\r\n        coloredWare.priceE = props.expTable.ware[wareName][colorIndex].price;\r\n        //Checking if ware is in incTable\r\n        if (props.incTable.ware[wareName]) {\r\n          \r\n          //Checking if ware has same color in incTable\r\n          let incomeColorIndex = false;\r\n          for (let i = 0; i < props.incTable.ware[wareName].length; i++) {\r\n            if (props.incTable.ware[wareName][i].color === coloredWare.color) {\r\n              incomeColorIndex = i;\r\n            } \r\n          }\r\n          //Passing income info to the colored ware\r\n          //If color exists in income\r\n          if (typeof incomeColorIndex == 'number') {\r\n            coloredWare.quantityI = props.incTable.ware[wareName][incomeColorIndex].quantity;\r\n            coloredWare.totalPriceI =  props.incTable.ware[wareName][incomeColorIndex].totalPrice;\r\n            coloredWare.priceI = (props.incTable.ware[wareName][incomeColorIndex].price !== Infinity) ? props.incTable.ware[wareName][incomeColorIndex].price : 0;\r\n            coloredWare.quantityS = coloredWare.quantityE - coloredWare.quantityI;\r\n            coloredWare.priceS = coloredWare.priceI ? coloredWare.priceI : coloredWare.priceE;\r\n            coloredWare.totalPriceS = coloredWare.priceS * coloredWare.quantityS;\r\n          } \r\n          //If color doesn't exist in income\r\n          else {\r\n            coloredWare.quantityI = 0;\r\n            coloredWare.totalPriceI = 0;\r\n            coloredWare.priceI = 0;\r\n            coloredWare.quantityS = coloredWare.quantityE;\r\n            coloredWare.totalPriceS = coloredWare.totalPriceE;\r\n            coloredWare.priceS = coloredWare.priceE;\r\n          }          \r\n        //If ware doesn't exist in income\r\n        } else {\r\n          coloredWare.quantityI = 0;\r\n          coloredWare.totalPriceI = 0;\r\n          coloredWare.priceI = 0;\r\n          coloredWare.quantityS = coloredWare.quantityE;\r\n          coloredWare.totalPriceS = coloredWare.totalPriceE;\r\n          coloredWare.priceS = coloredWare.priceE;\r\n        }        \r\n\r\n        ware.colors.push(coloredWare);        \r\n      }\r\n\r\n      ware.quantityE = 0;\r\n      ware.quantityI = 0;\r\n      ware.quantityS = 0;\r\n      ware.totalPriceE = 0;\r\n      ware.totalPriceI = 0;\r\n      ware.totalPriceS = 0;\r\n      //Summing up data from colors\r\n      ware.colors.map(colorWare => {\r\n        ware.quantityE += colorWare.quantityE;\r\n        ware.quantityI += colorWare.quantityI;\r\n        ware.quantityS += colorWare.quantityS;\r\n        ware.totalPriceE += colorWare.totalPriceE;\r\n        ware.totalPriceI += colorWare.totalPriceI;\r\n        ware.totalPriceS += colorWare.totalPriceS;\r\n      })\r\n      //Counting prices for ware\r\n      ware.priceE = ware.totalPriceE / ware.quantityE;\r\n      ware.priceI = (ware.totalPriceI === 0 || ware.quantityI === 0) ? 0 : ware.totalPriceI / ware.quantityI;\r\n      ware.priceS = ware.totalPriceS / ware.quantityS;\r\n      //Creating ware row\r\n      const topRow = (\r\n        <tr>\r\n          <th>{wareIndex+1}</th>\r\n          <th>{ware.name}</th>\r\n          <th></th>\r\n          <th>{ware.quantityE}</th>\r\n          <th>{(ware.totalPriceE).toFixed(0)}</th>\r\n          <th>{(ware.priceE).toFixed(2)}</th>\r\n          <th>{ware.quantityI}</th>\r\n          <th>{(ware.totalPriceI).toFixed(0)}</th>\r\n          <th>{(ware.priceI).toFixed(2)}</th>\r\n          <th>{ware.quantityS}</th>\r\n          <th>{(ware.totalPriceS).toFixed(0)}</th>\r\n          <th>{(ware.priceS).toFixed(2)}</th>\r\n        </tr>\r\n      )\r\n      //Creating color rows\r\n      const rows = ware.colors.map((wareColor, wareColorIndex) => {\r\n        return (\r\n          <tr key={`${ware.name}_${wareColor.color}`}> \r\n            <td>{`${wareIndex+1}.${wareColorIndex+1}`}</td>\r\n            <td></td>\r\n            <td>{wareColor.color}</td>\r\n            <td>{wareColor.quantityE}</td>\r\n            <td>{(wareColor.totalPriceE).toFixed(0)}</td>\r\n            <td>{(wareColor.priceE).toFixed(2)}</td>\r\n            <td>{wareColor.quantityI}</td>\r\n            <td>{(wareColor.totalPriceI).toFixed(0)}</td>\r\n            <td>{(wareColor.priceI).toFixed(2)}</td>\r\n            <td>{wareColor.quantityS}</td>\r\n            <td>{(wareColor.totalPriceS).toFixed(0)}</td>\r\n            <td>{(wareColor.priceS).toFixed(2)}</td>\r\n          </tr>\r\n        )\r\n      })\r\n      //Amending total row\r\n      lastRow.quantityE += ware.quantityE;\r\n      lastRow.totalPriceE += ware.totalPriceE;\r\n      lastRow.quantityI += ware.quantityI;\r\n      lastRow.totalPriceI += ware.totalPriceI;\r\n      lastRow.quantityS += ware.quantityS;\r\n      lastRow.totalPriceS += ware.totalPriceS;\r\n\r\n      return (\r\n        <tbody key={wareName}>\r\n          {topRow}\r\n          {rows}\r\n        </tbody>\r\n      )    \r\n    })\r\n  )\r\n\r\n    //Creating storage subwarestable\r\n    const tableSubwares = (!props.expTable && !props.incTable) ? null : (\r\n      //Iterating through wares in expTable\r\n      Object.keys(props.expTable.subware).sort().map((wareName, wareIndex) => {\r\n        //Creating new ware object\r\n        const ware = {};\r\n        ware.name = wareName;\r\n        ware.colors = [];\r\n        //Pushing colors into ware object\r\n        for (let colorIndex = 0; colorIndex < props.expTable.subware[wareName].length; colorIndex++ ) {\r\n          //Creating color object\r\n          const coloredWare = {};\r\n          coloredWare.color = props.expTable.subware[wareName][colorIndex].color;\r\n          coloredWare.quantityE = props.expTable.subware[wareName][colorIndex].quantity;\r\n          coloredWare.totalPriceE = props.expTable.subware[wareName][colorIndex].totalPrice;\r\n          coloredWare.priceE = props.expTable.subware[wareName][colorIndex].price;\r\n          //Checking if ware is in incTable\r\n          if (props.incTable.ware[wareName]) {\r\n            \r\n            //Checking if ware has same color in incTable\r\n            let incomeColorIndex = false;\r\n            for (let i = 0; i < props.incTable.ware[wareName].length; i++) {\r\n              if (props.incTable.ware[wareName][i].color === coloredWare.color) {\r\n                incomeColorIndex = i;\r\n              } \r\n            }\r\n            //Passing income info to the colored ware\r\n            //If color exists in income\r\n            if (typeof incomeColorIndex == 'number') {\r\n              coloredWare.quantityI = props.incTable.ware[wareName][incomeColorIndex].quantity;\r\n              coloredWare.totalPriceI =  props.incTable.ware[wareName][incomeColorIndex].totalPrice;\r\n              coloredWare.priceI = (props.incTable.ware[wareName][incomeColorIndex].price !== Infinity) ? props.incTable.ware[wareName][incomeColorIndex].price : 0;\r\n              coloredWare.quantityS = coloredWare.quantityE - coloredWare.quantityI;\r\n              coloredWare.priceS = coloredWare.priceI ? coloredWare.priceI : coloredWare.priceE;\r\n              coloredWare.totalPriceS = coloredWare.priceS * coloredWare.quantityS;\r\n            } \r\n            //If color doesn't exist in income\r\n            else {\r\n              coloredWare.quantityI = 0;\r\n              coloredWare.totalPriceI = 0;\r\n              coloredWare.priceI = 0;\r\n              coloredWare.quantityS = coloredWare.quantityE;\r\n              coloredWare.totalPriceS = coloredWare.totalPriceE;\r\n              coloredWare.priceS = coloredWare.priceE;\r\n            }          \r\n          //If ware doesn't exist in income\r\n          } else {\r\n            coloredWare.quantityI = 0;\r\n            coloredWare.totalPriceI = 0;\r\n            coloredWare.priceI = 0;\r\n            coloredWare.quantityS = coloredWare.quantityE;\r\n            coloredWare.totalPriceS = coloredWare.totalPriceE;\r\n            coloredWare.priceS = coloredWare.priceE;\r\n          }        \r\n  \r\n          ware.colors.push(coloredWare);        \r\n        }\r\n  \r\n        ware.quantityE = 0;\r\n        ware.quantityI = 0;\r\n        ware.quantityS = 0;\r\n        ware.totalPriceE = 0;\r\n        ware.totalPriceI = 0;\r\n        ware.totalPriceS = 0;\r\n        //Summing up data from colors\r\n        ware.colors.map(colorWare => {\r\n          ware.quantityE += colorWare.quantityE;\r\n          ware.quantityI += colorWare.quantityI;\r\n          ware.quantityS += colorWare.quantityS;\r\n          ware.totalPriceE += colorWare.totalPriceE;\r\n          ware.totalPriceI += colorWare.totalPriceI;\r\n          ware.totalPriceS += colorWare.totalPriceS;\r\n        })\r\n        //Counting prices for ware\r\n        ware.priceE = ware.totalPriceE / ware.quantityE;\r\n        ware.priceI = (ware.totalPriceI === 0 || ware.quantityI === 0) ? 0 : ware.totalPriceI / ware.quantityI;\r\n        ware.priceS = ware.totalPriceS / ware.quantityS;\r\n        //Creating ware row\r\n        const topRow = (\r\n          <tr>\r\n            <th>{wareIndex+1}</th>\r\n            <th>{ware.name}</th>\r\n            <th></th>\r\n            <th>{ware.quantityE}</th>\r\n            <th>{(ware.totalPriceE).toFixed(0)}</th>\r\n            <th>{(ware.priceE).toFixed(2)}</th>\r\n            <th>{ware.quantityI}</th>\r\n            <th>{(ware.totalPriceI).toFixed(0)}</th>\r\n            <th>{(ware.priceI).toFixed(2)}</th>\r\n            <th>{ware.quantityS}</th>\r\n            <th>{(ware.totalPriceS).toFixed(0)}</th>\r\n            <th>{(ware.priceS).toFixed(2)}</th>\r\n          </tr>\r\n        )\r\n        //Creating color rows\r\n        const rows = ware.colors.map((wareColor, wareColorIndex) => {\r\n          return (\r\n            <tr key={`${ware.name}_${wareColor.color}`}> \r\n              <td>{`${wareIndex+1}.${wareColorIndex+1}`}</td>\r\n              <td></td>\r\n              <td>{wareColor.color}</td>\r\n              <td>{wareColor.quantityE}</td>\r\n              <td>{(wareColor.totalPriceE).toFixed(0)}</td>\r\n              <td>{(wareColor.priceE).toFixed(2)}</td>\r\n              <td>{wareColor.quantityI}</td>\r\n              <td>{(wareColor.totalPriceI).toFixed(0)}</td>\r\n              <td>{(wareColor.priceI).toFixed(2)}</td>\r\n              <td>{wareColor.quantityS}</td>\r\n              <td>{(wareColor.totalPriceS).toFixed(0)}</td>\r\n              <td>{(wareColor.priceS).toFixed(2)}</td>\r\n            </tr>\r\n          )\r\n        })\r\n        //Amending total row\r\n        lastRow.quantityE += ware.quantityE;\r\n        lastRow.totalPriceE += ware.totalPriceE;\r\n        lastRow.quantityI += ware.quantityI;\r\n        lastRow.totalPriceI += ware.totalPriceI;\r\n        lastRow.quantityS += ware.quantityS;\r\n        lastRow.totalPriceS += ware.totalPriceS;\r\n  \r\n        return (\r\n          <tbody key={wareName}>\r\n            {topRow}\r\n            {rows}\r\n          </tbody>\r\n        )    \r\n      })\r\n    )\r\n\r\n\r\n  //Creating total row\r\n  const lastRowTable = (\r\n    <tr>\r\n      <th></th>\r\n      <th></th>\r\n      <th></th>\r\n      <th>{lastRow.quantityE}</th>\r\n      <th>{lastRow.totalPriceE}</th>\r\n      <th></th>\r\n      <th>{lastRow.quantityI}</th>\r\n      <th>{lastRow.totalPriceI}</th>\r\n      <th></th>\r\n      <th>{lastRow.quantityS}</th>\r\n      <th>{(lastRow.totalPriceS).toFixed(2)}</th>\r\n      <th></th>\r\n    </tr>\r\n  )\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Товар</th>\r\n            <th>Колір</th>\r\n            <th>Кількість виготовлено</th>\r\n            <th>Вартість виготовлено</th>\r\n            <th>Собівартість одиниці</th>\r\n            <th>Кількість продано</th>\r\n            <th>Вартість продано</th>\r\n            <th>Ціна одиниці продано</th>\r\n            <th>Кількість на складі</th>\r\n            <th>Вартість на складі</th>\r\n            <th>Ціна одиниці на складі</th>\r\n          </tr>\r\n        </thead>\r\n\r\n          {table}\r\n          {tableSubwares}\r\n        <tbody>\r\n          {lastRowTable}\r\n        </tbody>\r\n      </Table>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default StorageTable;","import React, { useState, useEffect } from 'react';\r\n\r\nimport StorageTable from '../../components/storage/StorageTable';\r\n\r\nconst Storage = props => {\r\n  const [expTable, setExpTable] = useState(null);\r\n  const [incTable, setIncTable] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const tableE = countExpTable();\r\n    const tableI = countIncTable();    \r\n    setExpTable(tableE);\r\n    setIncTable(tableI);\r\n  }, [props] )\r\n  \r\n  const countIncTable = () => {\r\n    const tableIncWares = {};\r\n    const tablIncSubWares = {};\r\n    //Check if incData received\r\n    if (!props.incData || !props.expData) {\r\n      return null\r\n    } else {\r\n      //Iteration through income instances\r\n      Object.keys(props.incData).map((incKey, index) => {\r\n        //Maping each income item\r\n        props.incData[incKey].income.map((incItem, incIndex) => {\r\n          //Creating object to push into income arrays\r\n          const item = {type: incItem.type}\r\n          const totalPrice = (incIndex === 0) ? props.incData[incKey].price : 0;\r\n          item[incItem.name] = {\r\n            color: incItem.color,\r\n            quantity: incItem.quantity,\r\n            totalPrice: totalPrice,\r\n            price: incItem.quantity / totalPrice\r\n          }\r\n          //Checking if object is ware\r\n          if (item.type === \"Товар\") {\r\n            //Checking if ware already exists\r\n            if (tableIncWares[props.incData[incKey].income[incIndex].name]) {\r\n              let isColor = false;\r\n              //Iterating through color of each ware\r\n              for (let i = 0; i < tableIncWares[props.incData[incKey].income[incIndex].name].length; i++ ) {\r\n                //Checking if color exists\r\n                if (tableIncWares[props.incData[incKey].income[incIndex].name][i].color === item[incItem.name].color) {\r\n                  //Amending item if color exist\r\n                  tableIncWares[props.incData[incKey].income[incIndex].name][i].quantity += item[incItem.name].quantity;\r\n                  tableIncWares[props.incData[incKey].income[incIndex].name][i].totalPrice += item[incItem.name].totalPrice;\r\n                  tableIncWares[props.incData[incKey].income[incIndex].name][i].price = tableIncWares[props.incData[incKey].income[incIndex].name][i].totalPrice / tableIncWares[props.incData[incKey].income[incIndex].name][i].quantity;\r\n                  isColor = true\r\n                } \r\n              }\r\n              //Adding array item if no such color\r\n              if (!isColor) {\r\n                tableIncWares[props.incData[incKey].income[incIndex].name].push(item[incItem.name])  \r\n              }\r\n              //Adding object if no such ware\r\n            } else {\r\n              tableIncWares[props.incData[incKey].income[incIndex].name] = []\r\n              tableIncWares[props.incData[incKey].income[incIndex].name].push(item[incItem.name])\r\n            }\r\n            \r\n          } else if (item.type === \"Супутній товар\") {\r\n            if (tablIncSubWares[props.incData[incKey].income[incIndex].name]) {\r\n              let isColor = false;\r\n              for (let i = 0; i < tablIncSubWares[props.incData[incKey].income[incIndex].name].length; i++ ) {\r\n                if (tablIncSubWares[props.incData[incKey].income[incIndex].name][i].color === item[incItem.name].color) {\r\n                  tablIncSubWares[props.incData[incKey].income[incIndex].name][i].quantity += item[incItem.name].quantity;\r\n                  tablIncSubWares[props.incData[incKey].income[incIndex].name][i].totalPrice += item[incItem.name].totalPrice;\r\n                  tablIncSubWares[props.incData[incKey].income[incIndex].name][i].price = tablIncSubWares[props.incData[incKey].income[incIndex].name][i].totalPrice / tablIncSubWares[props.incData[incKey].income[incIndex].name][i].quantity;\r\n                  isColor = true\r\n                } \r\n              }\r\n              if (!isColor) {\r\n                tablIncSubWares[props.incData[incKey].income[incIndex].name].push(item[incItem.name])\r\n              }\r\n            } else {\r\n              tablIncSubWares[props.incData[incKey].income[incIndex].name] = []\r\n              tablIncSubWares[props.incData[incKey].income[incIndex].name].push(item[incItem.name])\r\n            }\r\n          }\r\n\r\n        })\r\n\r\n      })\r\n\r\n    }\r\n    const tableInc = {\r\n      ware: tableIncWares,\r\n      subware: tablIncSubWares\r\n    }\r\n    return tableInc;\r\n  }\r\n\r\n  const countExpTable = () => {\r\n    const tableExpWares = {};\r\n    const tableExpSubWares = {};\r\n    const tableExpExp = {};\r\n    if (!props.incData || !props.expData) {\r\n      return null\r\n    } else {\r\n      // Iterating through expences\r\n      Object.keys(props.expData).map((expKey, index) => {\r\n        //Checking if is a ware\r\n        if (props.expData[expKey].type === 'Товар') {\r\n          //Checking if ware is in a table\r\n          if (tableExpWares.hasOwnProperty(props.expData[expKey].name)) {\r\n            let isColor = false;\r\n            //Checking if ware color in a table\r\n            for (let i = 0; i < tableExpWares[props.expData[expKey].name].length; i++ ) {\r\n              //Adding to table if ware color is present\r\n              if (props.expData[expKey].color === tableExpWares[props.expData[expKey].name][i].color) {\r\n                tableExpWares[props.expData[expKey].name][i].quantity += props.expData[expKey].quantity;\r\n                tableExpWares[props.expData[expKey].name][i].totalPrice += props.expData[expKey].totalPrice;\r\n                tableExpWares[props.expData[expKey].name][i].price = tableExpWares[props.expData[expKey].name][i].totalPrice / tableExpWares[props.expData[expKey].name][i].quantity;\r\n                isColor = true\r\n              } \r\n            }\r\n            //Adding to table if ware color is new\r\n            if (!isColor) {\r\n              const ware = {};\r\n              ware.color = props.expData[expKey].color;\r\n              ware.quantity = props.expData[expKey].quantity;\r\n              ware.totalPrice = props.expData[expKey].totalPrice;\r\n              ware.price = props.expData[expKey].totalPrice / props.expData[expKey].quantity;\r\n              tableExpWares[props.expData[expKey].name].push(ware);\r\n            }\r\n          } \r\n          //Adding to table if ware is new\r\n          else {\r\n            tableExpWares[props.expData[expKey].name] = [];\r\n            const ware = {};\r\n            ware.color = props.expData[expKey].color;\r\n            ware.quantity = props.expData[expKey].quantity;\r\n            ware.totalPrice = props.expData[expKey].totalPrice;\r\n            ware.price = props.expData[expKey].totalPrice / props.expData[expKey].quantity;\r\n            tableExpWares[props.expData[expKey].name].push(ware);\r\n          }\r\n        }\r\n\r\n        //Checking if is a subware\r\n        if (props.expData[expKey].type === 'Супутній товар') {\r\n          //Checking if ware is in a table\r\n          if (tableExpSubWares.hasOwnProperty(props.expData[expKey].name)) {\r\n            let isColor = false;\r\n            //Checking if ware color in a table\r\n            for (let i = 0; i < tableExpSubWares[props.expData[expKey].name].length; i++ ) {\r\n              //Adding to table if ware color is present\r\n              if (props.expData[expKey].color === tableExpSubWares[props.expData[expKey].name][i].color) {\r\n                tableExpSubWares[props.expData[expKey].name][i].quantity += props.expData[expKey].quantity;\r\n                tableExpSubWares[props.expData[expKey].name][i].totalPrice += props.expData[expKey].totalPrice;\r\n                tableExpSubWares[props.expData[expKey].name][i].price = tableExpSubWares[props.expData[expKey].name][i].totalPrice / tableExpSubWares[props.expData[expKey].name][i].quantity;\r\n                isColor = true\r\n              } \r\n            }\r\n            //Adding to table if ware color is new\r\n            if (!isColor) {\r\n              const ware = {};\r\n              ware.color = props.expData[expKey].color;\r\n              ware.quantity = props.expData[expKey].quantity;\r\n              ware.totalPrice = props.expData[expKey].totalPrice;\r\n              ware.price = props.expData[expKey].totalPrice / props.expData[expKey].quantity;\r\n              tableExpSubWares[props.expData[expKey].name].push(ware);\r\n            }\r\n          } \r\n          //Adding to table if ware is new\r\n          else {\r\n            tableExpSubWares[props.expData[expKey].name] = [];\r\n            const ware = {};\r\n            ware.color = props.expData[expKey].color;\r\n            ware.quantity = props.expData[expKey].quantity;\r\n            ware.totalPrice = props.expData[expKey].totalPrice;\r\n            ware.price = props.expData[expKey].totalPrice / props.expData[expKey].quantity;\r\n            tableExpSubWares[props.expData[expKey].name].push(ware);\r\n          }\r\n        }\r\n\r\n        //Checking if is an expence\r\n        if (props.expData[expKey].type === 'Витрата') {\r\n          //Checking if ware is in a table\r\n          if (tableExpExp.hasOwnProperty(props.expData[expKey].name)) {\r\n            let isColor = false;\r\n            //Checking if ware color in a table\r\n            for (let i = 0; i < tableExpExp[props.expData[expKey].name].length; i++ ) {\r\n              //Adding to table if ware color is present\r\n              if (props.expData[expKey].color === tableExpExp[props.expData[expKey].name][i].color) {\r\n                tableExpExp[props.expData[expKey].name][i].quantity += props.expData[expKey].quantity;\r\n                tableExpExp[props.expData[expKey].name][i].totalPrice += props.expData[expKey].totalPrice;\r\n                tableExpExp[props.expData[expKey].name][i].price = tableExpExp[props.expData[expKey].name][i].totalPrice / tableExpExp[props.expData[expKey].name][i].quantity;\r\n                isColor = true\r\n              } \r\n            }\r\n            //Adding to table if ware color is new\r\n            if (!isColor) {\r\n              const ware = {};\r\n              ware.color = props.expData[expKey].color;\r\n              ware.quantity = props.expData[expKey].quantity;\r\n              ware.totalPrice = props.expData[expKey].totalPrice;\r\n              ware.price = props.expData[expKey].totalPrice / props.expData[expKey].quantity;\r\n              tableExpExp[props.expData[expKey].name].push(ware);\r\n            }\r\n          } \r\n          //Adding to table if ware is new\r\n          else {\r\n            tableExpExp[props.expData[expKey].name] = [];\r\n            const ware = {};\r\n            ware.color = props.expData[expKey].color;\r\n            ware.quantity = props.expData[expKey].quantity;\r\n            ware.totalPrice = props.expData[expKey].totalPrice;\r\n            ware.price = props.expData[expKey].totalPrice / props.expData[expKey].quantity;\r\n            tableExpExp[props.expData[expKey].name].push(ware);\r\n          }\r\n        }\r\n\r\n        return '';          \r\n      })      \r\n    }\r\n    const tableExp = {\r\n      ware: tableExpWares,\r\n      subware: tableExpSubWares,\r\n      exp: tableExpExp\r\n    }\r\n    return tableExp;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <StorageTable expTable={expTable} incTable={incTable}/>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Storage;","import React, { useState, useEffect } from 'react';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\nimport axios from '../../axios';\r\n\r\nimport Exp from '../exp/Exp';\r\nimport Inc from '../inc/Inc';\r\nimport Storage from '../storage/Storage';\r\n\r\nconst WorkArea = props => {\r\n  //Ставлю стейт нал\r\n  const [expData, setExpData] = useState({});\r\n  const [incData, setIncData] = useState(null);\r\n  const [showError, setShowError] = useState(false);\r\n  const [formList, setFormList] = useState({\r\n    wares: [],\r\n    subwares: [],\r\n    exps: [],\r\n    colors: []\r\n  });\r\n  //З серва тягну дані для наповнення \r\n  useEffect(() => {\r\n    axios.get('/.json?auth=' + props.authData.idToken)\r\n    .then( res => {\r\n      console.log(res);\r\n      setExpData(res.data.exp);\r\n      setIncData(res.data.inc);\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }, [showError] )\r\n  //На основі даних з серва хочу замутити новий стейт\r\n  useEffect(() => {\r\n    if (expData && Object.keys(expData).length > 0 ) {\r\n      const list = {\r\n        wares: [],\r\n        subwares: [],\r\n        exps: [],\r\n        colors: []\r\n      }\r\n      Object.keys(expData).map(key => {\r\n        switch (expData[key].type) {\r\n          case 'Товар':\r\n          if (!(list.wares.indexOf(expData[key].name) > -1)) {\r\n            list.wares.push(expData[key].name)\r\n          };\r\n          break;\r\n          case 'Супутній товар':\r\n            if (!(list.subwares.indexOf(expData[key].name) > -1)) {\r\n              list.subwares.push(expData[key].name)\r\n            };\r\n          break;\r\n          case 'Витрата':\r\n            if (!(list.exps.indexOf(expData[key].name) > -1)) {\r\n              list.exps.push(expData[key].name)\r\n            };\r\n          break;\r\n          default:\r\n            break;\r\n        }\r\n        if (!(list.colors.indexOf(expData[key].color) > -1)) {\r\n          list.colors.push(expData[key].color)\r\n        };\r\n      });\r\n      list.wares.sort();\r\n      list.subwares.sort();\r\n      list.exps.sort();\r\n      list.colors.sort();\r\n      setFormList(list);\r\n    }\r\n  }, [expData])\r\n\r\n  const onFormSubmitHandlerExp = (values)  => {\r\n    axios.post('/exp.json?auth=' + props.authData.idToken, values)\r\n    .then(response => {\r\n      console.log(response);\r\n      const newExpData = {\r\n        ...expData,\r\n        [response.data.name]: values\r\n      };\r\n      setExpData(newExpData);\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n      setShowError(true);\r\n    })\r\n  }\r\n\r\n  const onFormSubmitHandlerInc = (values)  => {\r\n    axios.post('/inc.json?auth=' + props.authData.idToken, values)\r\n    .then(response => {\r\n      console.log(response);\r\n      const newIncData = {\r\n        ...incData,\r\n        [response.data.name]: values\r\n      };\r\n      setIncData(newIncData);\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n      setShowError(true);\r\n    })\r\n  }\r\n\r\n  const onDeleteRowHandlerExp = (event) => {\r\n    const id = event.target.id;\r\n    axios.delete('/exp/' + id + '.json?auth=' + props.authData.idToken)\r\n    .then( res => {\r\n      console.log(res);\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n      setShowError(true);\r\n    })\r\n    const newExpData = {};\r\n    for (const key in expData) {\r\n      if (key !== id) {\r\n        newExpData[key] = expData[key]\r\n      }\r\n    }\r\n    setExpData(newExpData);\r\n  }\r\n\r\n  const onDeleteRowHandlerInc = (event) => {\r\n    const id = event.target.id;\r\n    axios.delete('/inc/' + id + '.json?auth=' + props.authData.idToken)\r\n    .then( res => {\r\n      console.log(res);\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n      setShowError(true);\r\n    })\r\n    const newIncData = {};\r\n    for (const key in incData) {\r\n      if (key !== id) {\r\n        newIncData[key] = incData[key]\r\n      }\r\n    }\r\n    setIncData(newIncData);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Tabs defaultActiveKey=\"storage\" id=\"uncontrolled-tab-example\">\r\n        <Tab eventKey=\"exp\" title=\"Витрати\">\r\n          <Exp \r\n            expData={expData}\r\n            onFormSubmitHandler={onFormSubmitHandlerExp}\r\n            onDeleteRowHandler={onDeleteRowHandlerExp}\r\n            list={formList}\r\n          />\r\n        </Tab>\r\n        <Tab eventKey=\"inc\" title=\"Доходи\">\r\n          <Inc\r\n            incData={incData}\r\n            onFormSubmitHandler={onFormSubmitHandlerInc}\r\n            onDeleteRowHandler={onDeleteRowHandlerInc}\r\n            list={formList}\r\n          />\r\n        </Tab>\r\n        <Tab eventKey=\"storage\" title=\"Склад\">\r\n          <Storage expData={expData} incData={incData}/>\r\n        </Tab>\r\n      </Tabs>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default WorkArea;","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\n\r\nconst Auth = (props) => {  \r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Formik\r\n    initialValues={{ \r\n      email: '',\r\n      password: ''\r\n    }}\r\n    onSubmit={(values, { setSubmitting }) => {\r\n\r\n      props.submitHandler(values);\r\n      setSubmitting(false);\r\n    }}\r\n  >\r\n    {({ isSubmitting, values, setFieldValue }) => (\r\n      <Form>\r\n        <div>\r\n          <label>\r\n            <Field\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"           \r\n            />Email\r\n          </label>\r\n          <label>\r\n            <Field\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"              \r\n            />Password\r\n          </label>\r\n        </div> \r\n        <button type=\"submit\" disabled={isSubmitting}>\r\n          Log In\r\n        </button>\r\n      </Form>\r\n    )}\r\n  </Formik>\r\n  </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Auth;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navigation = props => {\r\n\r\n  return (\r\n    <div>\r\n      <NavLink to=\"/\" exact>Home</NavLink>\r\n      {props.authState && <NavLink to=\"/workarea\" exact>Work Area</NavLink>}\r\n      {props.authState && <button onClick={props.onLogout}>Log Out</button >}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navigation;","import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport axios from 'axios';\n\nimport WorkArea from './containers/workArea/workArea';\nimport Auth from './containers/auth/Auth';\nimport Navigation from './containers/navigation/Navigation';\nimport './App.css';\n\nconst App = () => {\n  const [authData, setAuthData] = useState({\n    idToken: localStorage.getItem('token'),\n    userId: localStorage.getItem('userId'),\n    signedIn: localStorage.getItem('signedIn'),\n  });\n\n  const loginHandler = (values)  => {\n    values.returnSecureToken = true;\n    axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDFX9LAlOi-6ONPEXG3hw22qJT5aIo91Z4', values)\n    .then(response => {\n      console.log(response);\n      const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n      localStorage.setItem('token', response.data.idToken);\n      localStorage.setItem('expirationDate', expirationDate);\n      localStorage.setItem('userId', response.data.localId);\n      localStorage.setItem('signedIn', true)\n      const newAuthData = {\n        idToken: response.data.idToken,\n        userId: response.data.localId,\n        refreshToken: response.data.refreshToken,\n        signedIn: true\n      }\n      setAuthData(newAuthData);\n      setTimeout(() => {logoutHandler()}, response.data.expiresIn * 1000)\n    })\n    .catch(error => {\n      console.log(error);\n      \n    })\n  }\n\n  const logoutHandler = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('signedIn');\n    setAuthData({});\n  }\n\n  return (\n    <React.Fragment>\n      <Navigation authState={authData.signedIn} onLogout={logoutHandler}/>\n      <Switch>        \n        {authData.signedIn ? <Route path=\"/workarea\" ><WorkArea authData={authData}/> </Route> : null}      \n        <Route path=\"/\" ><Auth submitHandler={loginHandler} token={authData.idToken}/></Route>\n      </Switch>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst app = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}